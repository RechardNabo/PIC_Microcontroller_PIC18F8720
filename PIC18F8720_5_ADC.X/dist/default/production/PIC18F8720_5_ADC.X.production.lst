

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Fri Nov 11 21:45:25 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F8720
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1
    54                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    55                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    56                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    57                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    58  0000                     
    59                           ; Version 2.40
    60                           ; Generated 17/11/2021 GMT
    61                           ; 
    62                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution. Publication is not required when
    76                           ;        this file is used in an embedded application.
    77                           ; 
    78                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    79                           ;        software without specific prior written permission.
    80                           ; 
    81                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    82                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    83                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    84                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    85                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    86                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    87                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    88                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    89                           ; 
    90                           ; 
    91                           ; Code-generator required, PIC18F8720 Definitions
    92                           ; 
    93                           ; SFR Addresses
    94  0000                     _ADRESL	set	4035
    95  0000                     _ADRESH	set	4036
    96  0000                     _ADCON0	set	4034
    97  0000                     _TRISCbits	set	3988
    98  0000                     _GO	set	32273
    99  0000                     _ADON	set	32272
   100  0000                     _TRISC3	set	31907
   101  0000                     _TRISC2	set	31906
   102  0000                     _TRISC1	set	31905
   103  0000                     _TRISJ1	set	31953
   104  0000                     _RCSTA2bits	set	3947
   105  0000                     _RCSTA1bits	set	4011
   106  0000                     _CCP2CONbits	set	4026
   107  0000                     _CCP1CONbits	set	4029
   108  0000                     _ADCON2bits	set	4032
   109  0000                     _ADCON1bits	set	4033
   110  0000                     _ADCON0bits	set	4034
   111  0000                     _SSPCON1bits	set	4038
   112  0000                     _T1CONbits	set	4045
   113  0000                     _PORTBbits	set	3969
   114  0000                     _PORTJbits	set	3976
   115  0000                     _TRISB3	set	31899
   116  0000                     _TRISJ0	set	31952
   117  0000                     _TRISD	set	3989
   118  0000                     _TRISC0	set	31904
   119  0000                     _TRISAbits	set	3986
   120  0000                     _PORTD	set	3971
   121                           
   122                           	psect	smallconst
   123  000F00                     __psmallconst:
   124                           	callstack 0
   125  000F00  00                 	db	0
   126  000F01                     STR_2:
   127  000F01  2A                 	db	42
   128  000F02  2A                 	db	42
   129  000F03  2A                 	db	42
   130  000F04  50                 	db	80	;'P'
   131  000F05  49                 	db	73	;'I'
   132  000F06  43                 	db	67	;'C'
   133  000F07  31                 	db	49	;'1'
   134  000F08  38                 	db	56	;'8'
   135  000F09  46                 	db	70	;'F'
   136  000F0A  38                 	db	56	;'8'
   137  000F0B  37                 	db	55	;'7'
   138  000F0C  32                 	db	50	;'2'
   139  000F0D  30                 	db	48	;'0'
   140  000F0E  2D                 	db	45
   141  000F0F  41                 	db	65	;'A'
   142  000F10  44                 	db	68	;'D'
   143  000F11  43                 	db	67	;'C'
   144  000F12  2A                 	db	42
   145  000F13  2A                 	db	42
   146  000F14  2A                 	db	42
   147  000F15  00                 	db	0
   148  000F16                     STR_3:
   149  000F16  41                 	db	65	;'A'
   150  000F17  44                 	db	68	;'D'
   151  000F18  43                 	db	67	;'C'
   152  000F19  20                 	db	32
   153  000F1A  44                 	db	68	;'D'
   154  000F1B  61                 	db	97	;'a'
   155  000F1C  74                 	db	116	;'t'
   156  000F1D  61                 	db	97	;'a'
   157  000F1E  20                 	db	32
   158  000F1F  3A                 	db	58	;':'
   159  000F20  20                 	db	32
   160  000F21  00                 	db	0
   161  000F22                     STR_4:
   162  000F22  56                 	db	86	;'V'
   163  000F23  6F                 	db	111	;'o'
   164  000F24  6C                 	db	108	;'l'
   165  000F25  74                 	db	116	;'t'
   166  000F26  61                 	db	97	;'a'
   167  000F27  67                 	db	103	;'g'
   168  000F28  65                 	db	101	;'e'
   169  000F29  20                 	db	32
   170  000F2A  3A                 	db	58	;':'
   171  000F2B  20                 	db	32
   172  000F2C  00                 	db	0
   173  000F2D                     STR_1:
   174  000F2D  25                 	db	37
   175  000F2E  2E                 	db	46
   176  000F2F  32                 	db	50	;'2'
   177  000F30  66                 	db	102	;'f'
   178  000F31  00                 	db	0
   179  000F32                     STR_6:
   180  000F32  49                 	db	73	;'I'
   181  000F33  4E                 	db	78	;'N'
   182  000F34  46                 	db	70	;'F'
   183  000F35  00                 	db	0
   184  000F36                     STR_10:
   185  000F36  4E                 	db	78	;'N'
   186  000F37  41                 	db	65	;'A'
   187  000F38  4E                 	db	78	;'N'
   188  000F39  00                 	db	0
   189  000F3A                     STR_7:
   190  000F3A  69                 	db	105	;'i'
   191  000F3B  6E                 	db	110	;'n'
   192  000F3C  66                 	db	102	;'f'
   193  000F3D  00                 	db	0
   194  000F3E                     STR_11:
   195  000F3E  6E                 	db	110	;'n'
   196  000F3F  61                 	db	97	;'a'
   197  000F40  6E                 	db	110	;'n'
   198  000F41  00                 	db	0
   199  000F42                     STR_14:
   200  000F42  6C                 	db	108	;'l'
   201  000F43  66                 	db	102	;'f'
   202  000F44  00                 	db	0
   203  000F45                     STR_5:
   204  000F45  20                 	db	32
   205  000F46  56                 	db	86	;'V'
   206  000F47  00                 	db	0
   207  000F48  00                 	db	0	; dummy byte at the end
   208  0000                     
   209                           ; #config settings
   210                           
   211                           	psect	cinit
   212  00420C                     __pcinit:
   213                           	callstack 0
   214  00420C                     start_initialization:
   215                           	callstack 0
   216  00420C                     __initialization:
   217                           	callstack 0
   218                           
   219                           ; Clear objects allocated to BANK1 (80 bytes)
   220  00420C  EE01  F000         	lfsr	0,__pbssBANK1
   221  004210  0E50               	movlw	80
   222  004212                     clear_0:
   223  004212  6AEE               	clrf	postinc0,c
   224  004214  06E8               	decf	wreg,f,c
   225  004216  E1FD               	bnz	clear_0
   226                           
   227                           ; Clear objects allocated to BANK0 (14 bytes)
   228  004218  EE00  F0BE         	lfsr	0,__pbssBANK0
   229  00421C  0E0E               	movlw	14
   230  00421E                     clear_1:
   231  00421E  6AEE               	clrf	postinc0,c
   232  004220  06E8               	decf	wreg,f,c
   233  004222  E1FD               	bnz	clear_1
   234                           
   235                           ; Clear objects allocated to COMRAM (2 bytes)
   236  004224  6A5E               	clrf	(__pbssCOMRAM+1)& (0+255),c
   237  004226  6A5D               	clrf	__pbssCOMRAM& (0+255),c
   238  004228                     end_of_initialization:
   239                           	callstack 0
   240  004228                     __end_of__initialization:
   241                           	callstack 0
   242  004228  0100               	movlb	0
   243  00422A  EF4C  F01B         	goto	_main	;jump to C main() function
   244                           
   245                           	psect	bssCOMRAM
   246  00005D                     __pbssCOMRAM:
   247                           	callstack 0
   248  00005D                     _flags:
   249                           	callstack 0
   250  00005D                     	ds	2
   251                           
   252                           	psect	bssBANK0
   253  0000BE                     __pbssBANK0:
   254                           	callstack 0
   255  0000BE                     floorf@F526:
   256                           	callstack 0
   257  0000BE                     	ds	4
   258  0000C2                     ___fpclassifyf@F465:
   259                           	callstack 0
   260  0000C2                     	ds	4
   261  0000C6                     _nout:
   262                           	callstack 0
   263  0000C6                     	ds	2
   264  0000C8                     _width:
   265                           	callstack 0
   266  0000C8                     	ds	2
   267  0000CA                     _prec:
   268                           	callstack 0
   269  0000CA                     	ds	2
   270                           
   271                           	psect	bssBANK1
   272  000100                     __pbssBANK1:
   273                           	callstack 0
   274  000100                     _dbuf:
   275                           	callstack 0
   276  000100                     	ds	80
   277                           
   278                           	psect	cstackBANK0
   279  000060                     __pcstackBANK0:
   280                           	callstack 0
   281  000060                     _efgtoa$1432:
   282                           	callstack 0
   283                           
   284                           ; 2 bytes @ 0x0
   285  000060                     	ds	2
   286  000062                     _efgtoa$1440:
   287                           	callstack 0
   288                           
   289                           ; 2 bytes @ 0x2
   290  000062                     	ds	2
   291  000064                     _efgtoa$1441:
   292                           	callstack 0
   293                           
   294                           ; 2 bytes @ 0x4
   295  000064                     	ds	2
   296  000066                     efgtoa@t:
   297                           	callstack 0
   298                           
   299                           ; 2 bytes @ 0x6
   300  000066                     	ds	2
   301  000068                     efgtoa@pp:
   302                           	callstack 0
   303                           
   304                           ; 2 bytes @ 0x8
   305  000068                     	ds	2
   306  00006A                     efgtoa@ne:
   307                           	callstack 0
   308                           
   309                           ; 2 bytes @ 0xA
   310  00006A                     	ds	2
   311  00006C                     efgtoa@m:
   312                           	callstack 0
   313                           
   314                           ; 2 bytes @ 0xC
   315  00006C                     	ds	2
   316  00006E                     efgtoa@ou:
   317                           	callstack 0
   318                           
   319                           ; 4 bytes @ 0xE
   320  00006E                     	ds	4
   321  000072                     efgtoa@d:
   322                           	callstack 0
   323                           
   324                           ; 2 bytes @ 0x12
   325  000072                     	ds	2
   326  000074                     efgtoa@sign:
   327                           	callstack 0
   328                           
   329                           ; 2 bytes @ 0x14
   330  000074                     	ds	2
   331  000076                     efgtoa@p:
   332                           	callstack 0
   333                           
   334                           ; 2 bytes @ 0x16
   335  000076                     	ds	2
   336  000078                     efgtoa@w:
   337                           	callstack 0
   338                           
   339                           ; 2 bytes @ 0x18
   340  000078                     	ds	2
   341  00007A                     efgtoa@nmode:
   342                           	callstack 0
   343                           
   344                           ; 1 bytes @ 0x1A
   345  00007A                     	ds	1
   346  00007B                     efgtoa@mode:
   347                           	callstack 0
   348                           
   349                           ; 1 bytes @ 0x1B
   350  00007B                     	ds	1
   351  00007C                     efgtoa@h:
   352                           	callstack 0
   353                           
   354                           ; 4 bytes @ 0x1C
   355  00007C                     	ds	4
   356  000080                     efgtoa@l:
   357                           	callstack 0
   358                           
   359                           ; 4 bytes @ 0x20
   360  000080                     	ds	4
   361  000084                     efgtoa@i:
   362                           	callstack 0
   363                           
   364                           ; 2 bytes @ 0x24
   365  000084                     	ds	2
   366  000086                     efgtoa@g:
   367                           	callstack 0
   368                           
   369                           ; 4 bytes @ 0x26
   370  000086                     	ds	4
   371  00008A                     efgtoa@e:
   372                           	callstack 0
   373                           
   374                           ; 2 bytes @ 0x2A
   375  00008A                     	ds	2
   376  00008C                     efgtoa@n:
   377                           	callstack 0
   378                           
   379                           ; 2 bytes @ 0x2C
   380  00008C                     	ds	2
   381  00008E                     efgtoa@u:
   382                           	callstack 0
   383                           
   384                           ; 4 bytes @ 0x2E
   385  00008E                     	ds	4
   386  000092                     ?_vfpfcnvrt:
   387                           	callstack 0
   388  000092                     vfpfcnvrt@fp:
   389                           	callstack 0
   390                           
   391                           ; 2 bytes @ 0x32
   392  000092                     	ds	2
   393  000094                     vfpfcnvrt@fmt:
   394                           	callstack 0
   395                           
   396                           ; 2 bytes @ 0x34
   397  000094                     	ds	2
   398  000096                     vfpfcnvrt@ap:
   399                           	callstack 0
   400                           
   401                           ; 2 bytes @ 0x36
   402  000096                     	ds	2
   403  000098                     ?_vfprintf:
   404                           	callstack 0
   405  000098                     vfprintf@fp:
   406                           	callstack 0
   407                           
   408                           ; 2 bytes @ 0x38
   409  000098                     	ds	2
   410  00009A                     vfprintf@fmt:
   411                           	callstack 0
   412                           
   413                           ; 2 bytes @ 0x3A
   414  00009A                     	ds	2
   415  00009C                     vfprintf@ap:
   416                           	callstack 0
   417                           
   418                           ; 2 bytes @ 0x3C
   419  00009C                     	ds	2
   420  00009E                     ?_sprintf:
   421                           	callstack 0
   422  00009E                     sprintf@s:
   423                           	callstack 0
   424                           
   425                           ; 2 bytes @ 0x3E
   426  00009E                     	ds	2
   427  0000A0                     sprintf@fmt:
   428                           	callstack 0
   429                           
   430                           ; 2 bytes @ 0x40
   431  0000A0                     	ds	6
   432  0000A6                     LCD_DISPLAY_DIGIT@num:
   433                           	callstack 0
   434                           
   435                           ; 4 bytes @ 0x46
   436  0000A6                     	ds	4
   437  0000AA                     LCD_DISPLAY_DIGIT@s:
   438                           	callstack 0
   439                           
   440                           ; 20 bytes @ 0x4A
   441  0000AA                     	ds	20
   442                           
   443                           	psect	cstackCOMRAM
   444  000001                     __pcstackCOMRAM:
   445                           	callstack 0
   446  000001                     ??_LCD_INSTRUCTION_4BIT:
   447  000001                     ?_strlen:
   448                           	callstack 0
   449  000001                     ?_ADC_Read:
   450                           	callstack 0
   451  000001                     ?___fpclassifyf:
   452                           	callstack 0
   453  000001                     ?_isupper:
   454                           	callstack 0
   455  000001                     ?_isdigit:
   456                           	callstack 0
   457  000001                     ?_strncmp:
   458                           	callstack 0
   459  000001                     ?_isspace:
   460                           	callstack 0
   461  000001                     ?___wmul:
   462                           	callstack 0
   463  000001                     ?___awdiv:
   464                           	callstack 0
   465  000001                     ?___awmod:
   466                           	callstack 0
   467  000001                     ?___fladd:
   468                           	callstack 0
   469  000001                     ?___fldiv:
   470                           	callstack 0
   471  000001                     ?___flmul:
   472                           	callstack 0
   473  000001                     ?___flneg:
   474                           	callstack 0
   475  000001                     ?___fltol:
   476                           	callstack 0
   477  000001                     LCD_DATA@mode:
   478                           	callstack 0
   479  000001                     ADC_Read@channel:
   480                           	callstack 0
   481  000001                     ___wmul@multiplier:
   482                           	callstack 0
   483  000001                     ___awdiv@dividend:
   484                           	callstack 0
   485  000001                     ___awmod@dividend:
   486                           	callstack 0
   487  000001                     isdigit@c:
   488                           	callstack 0
   489  000001                     isspace@c:
   490                           	callstack 0
   491  000001                     isupper@c:
   492                           	callstack 0
   493  000001                     fputc@c:
   494                           	callstack 0
   495  000001                     strcpy@dest:
   496                           	callstack 0
   497  000001                     strlen@s:
   498                           	callstack 0
   499  000001                     strncmp@_l:
   500                           	callstack 0
   501  000001                     ___fleq@ff1:
   502                           	callstack 0
   503  000001                     ___flneg@f1:
   504                           	callstack 0
   505  000001                     ___fltol@f1:
   506                           	callstack 0
   507  000001                     ___fladd@b:
   508                           	callstack 0
   509  000001                     ___fldiv@b:
   510                           	callstack 0
   511  000001                     ___flmul@b:
   512                           	callstack 0
   513  000001                     ___fpclassifyf@x:
   514                           	callstack 0
   515                           
   516                           ; 4 bytes @ 0x0
   517  000001                     	ds	2
   518  000003                     ??_ADC_Read:
   519  000003                     ??_isupper:
   520  000003                     ??_isdigit:
   521  000003                     ??_isspace:
   522  000003                     ??_LCD_DATA:
   523  000003                     ___wmul@multiplicand:
   524                           	callstack 0
   525  000003                     ___awdiv@divisor:
   526                           	callstack 0
   527  000003                     ___awmod@divisor:
   528                           	callstack 0
   529  000003                     fputc@fp:
   530                           	callstack 0
   531  000003                     strcpy@src:
   532                           	callstack 0
   533  000003                     strlen@a:
   534                           	callstack 0
   535  000003                     strncmp@_r:
   536                           	callstack 0
   537                           
   538                           ; 2 bytes @ 0x2
   539  000003                     	ds	2
   540  000005                     ??_fputc:
   541  000005                     ??___fpclassifyf:
   542  000005                     ??_strcpy:
   543  000005                     ??___fltol:
   544  000005                     ___awdiv@counter:
   545                           	callstack 0
   546  000005                     ___awmod@counter:
   547                           	callstack 0
   548  000005                     ___wmul@product:
   549                           	callstack 0
   550  000005                     strncmp@n:
   551                           	callstack 0
   552  000005                     ___fleq@ff2:
   553                           	callstack 0
   554  000005                     ___fladd@a:
   555                           	callstack 0
   556  000005                     ___fldiv@a:
   557                           	callstack 0
   558  000005                     ___flmul@a:
   559                           	callstack 0
   560                           
   561                           ; 4 bytes @ 0x4
   562  000005                     	ds	1
   563  000006                     ___awdiv@sign:
   564                           	callstack 0
   565  000006                     ___awmod@sign:
   566                           	callstack 0
   567                           
   568                           ; 1 bytes @ 0x5
   569  000006                     	ds	1
   570  000007                     ??_strncmp:
   571  000007                     ?_tolower:
   572                           	callstack 0
   573  000007                     LCD_INSTRUCTION_4BIT@instruction:
   574                           	callstack 0
   575  000007                     _isspace$1519:
   576                           	callstack 0
   577  000007                     ADC_Read@digital:
   578                           	callstack 0
   579  000007                     ___awdiv@quotient:
   580                           	callstack 0
   581  000007                     strcpy@s:
   582                           	callstack 0
   583  000007                     tolower@c:
   584                           	callstack 0
   585                           
   586                           ; 2 bytes @ 0x6
   587  000007                     	ds	1
   588  000008                     ?_atoi:
   589                           	callstack 0
   590  000008                     atoi@s:
   591                           	callstack 0
   592  000008                     strncmp@l:
   593                           	callstack 0
   594  000008                     LCD_INSTRUCTION_4BIT@_4bit_:
   595                           	callstack 0
   596                           
   597                           ; 8 bytes @ 0x7
   598  000008                     	ds	1
   599  000009                     ??___fladd:
   600  000009                     ??___fldiv:
   601  000009                     ??___flmul:
   602  000009                     ??_tolower:
   603  000009                     ??___fleq:
   604  000009                     ?___xxtofl:
   605                           	callstack 0
   606  000009                     LCD_DATA@data:
   607                           	callstack 0
   608  000009                     ___fltol@sign1:
   609                           	callstack 0
   610  000009                     ___fpclassifyf@e:
   611                           	callstack 0
   612  000009                     strcpy@d:
   613                           	callstack 0
   614  000009                     ___xxtofl@val:
   615                           	callstack 0
   616                           
   617                           ; 4 bytes @ 0x8
   618  000009                     	ds	1
   619  00000A                     ??_atoi:
   620  00000A                     ___fltol@exp1:
   621                           	callstack 0
   622  00000A                     fputs@s:
   623                           	callstack 0
   624  00000A                     strncmp@r:
   625                           	callstack 0
   626  00000A                     LCD_DATA@_4bit_:
   627                           	callstack 0
   628                           
   629                           ; 8 bytes @ 0x9
   630  00000A                     	ds	1
   631  00000B                     ___fpclassifyf@u:
   632                           	callstack 0
   633                           
   634                           ; 4 bytes @ 0xA
   635  00000B                     	ds	1
   636  00000C                     fputs@fp:
   637                           	callstack 0
   638                           
   639                           ; 2 bytes @ 0xB
   640  00000C                     	ds	1
   641  00000D                     ??___xxtofl:
   642  00000D                     ___fladd@signs:
   643                           	callstack 0
   644  00000D                     ___flmul@sign:
   645                           	callstack 0
   646  00000D                     ___fldiv@rem:
   647                           	callstack 0
   648                           
   649                           ; 4 bytes @ 0xC
   650  00000D                     	ds	1
   651  00000E                     ___fladd@aexp:
   652                           	callstack 0
   653  00000E                     fputs@c:
   654                           	callstack 0
   655  00000E                     atoi@neg:
   656                           	callstack 0
   657  00000E                     ___flmul@grs:
   658                           	callstack 0
   659                           
   660                           ; 4 bytes @ 0xD
   661  00000E                     	ds	1
   662  00000F                     ___fladd@bexp:
   663                           	callstack 0
   664  00000F                     fputs@i:
   665                           	callstack 0
   666                           
   667                           ; 2 bytes @ 0xE
   668  00000F                     	ds	1
   669  000010                     LCD_INSTRUCTION_4BIT@data:
   670                           	callstack 0
   671  000010                     ___fladd@grs:
   672                           	callstack 0
   673  000010                     atoi@n:
   674                           	callstack 0
   675                           
   676                           ; 2 bytes @ 0xF
   677  000010                     	ds	1
   678  000011                     ?_pad:
   679                           	callstack 0
   680  000011                     ___fldiv@sign:
   681                           	callstack 0
   682  000011                     ___xxtofl@sign:
   683                           	callstack 0
   684  000011                     LCD_INSTRUCTION_4BIT@x:
   685                           	callstack 0
   686  000011                     pad@fp:
   687                           	callstack 0
   688                           
   689                           ; 2 bytes @ 0x10
   690  000011                     	ds	1
   691  000012                     LCD_DATA@_data:
   692                           	callstack 0
   693  000012                     ___flmul@aexp:
   694                           	callstack 0
   695  000012                     ___xxtofl@exp:
   696                           	callstack 0
   697  000012                     ___fldiv@new_exp:
   698                           	callstack 0
   699                           
   700                           ; 2 bytes @ 0x11
   701  000012                     	ds	1
   702  000013                     ___flmul@bexp:
   703                           	callstack 0
   704  000013                     LCD_DATA@x:
   705                           	callstack 0
   706  000013                     LCD_INSTRUCTION_4BIT@x_787:
   707                           	callstack 0
   708  000013                     pad@buf:
   709                           	callstack 0
   710  000013                     ___xxtofl@arg:
   711                           	callstack 0
   712                           
   713                           ; 4 bytes @ 0x12
   714  000013                     	ds	1
   715  000014                     ___fldiv@grs:
   716                           	callstack 0
   717  000014                     ___flmul@prod:
   718                           	callstack 0
   719                           
   720                           ; 4 bytes @ 0x13
   721  000014                     	ds	1
   722  000015                     LCD_DATA@x_781:
   723                           	callstack 0
   724  000015                     pad@p:
   725                           	callstack 0
   726                           
   727                           ; 2 bytes @ 0x14
   728  000015                     	ds	2
   729  000017                     ??_pad:
   730  000017                     LCD_DISPLAY@string:
   731                           	callstack 0
   732                           
   733                           ; 2 bytes @ 0x16
   734  000017                     	ds	1
   735  000018                     ___fldiv@bexp:
   736                           	callstack 0
   737  000018                     ___flmul@temp:
   738                           	callstack 0
   739  000018                     pad@i:
   740                           	callstack 0
   741                           
   742                           ; 2 bytes @ 0x17
   743  000018                     	ds	1
   744  000019                     ??_LCD_DISPLAY:
   745  000019                     ___fldiv@aexp:
   746                           	callstack 0
   747                           
   748                           ; 1 bytes @ 0x18
   749  000019                     	ds	1
   750  00001A                     ?___flsub:
   751                           	callstack 0
   752  00001A                     ?_floorf:
   753                           	callstack 0
   754  00001A                     pad@w:
   755                           	callstack 0
   756  00001A                     ___flge@ff1:
   757                           	callstack 0
   758  00001A                     ___flsub@b:
   759                           	callstack 0
   760  00001A                     floorf@x:
   761                           	callstack 0
   762                           
   763                           ; 4 bytes @ 0x19
   764  00001A                     	ds	1
   765  00001B                     LCD_DISPLAY@length:
   766                           	callstack 0
   767                           
   768                           ; 2 bytes @ 0x1A
   769  00001B                     	ds	2
   770  00001D                     LCD_DISPLAY@x:
   771                           	callstack 0
   772                           
   773                           ; 2 bytes @ 0x1C
   774  00001D                     	ds	1
   775  00001E                     ??_floorf:
   776  00001E                     ___flge@ff2:
   777                           	callstack 0
   778  00001E                     ___flsub@a:
   779                           	callstack 0
   780                           
   781                           ; 4 bytes @ 0x1D
   782  00001E                     	ds	4
   783  000022                     ??___flge:
   784                           
   785                           ; 1 bytes @ 0x21
   786  000022                     	ds	2
   787  000024                     floorf@m:
   788                           	callstack 0
   789                           
   790                           ; 4 bytes @ 0x23
   791  000024                     	ds	4
   792  000028                     floorf@e:
   793                           	callstack 0
   794                           
   795                           ; 2 bytes @ 0x27
   796  000028                     	ds	2
   797  00002A                     floorf@u:
   798                           	callstack 0
   799                           
   800                           ; 4 bytes @ 0x29
   801  00002A                     	ds	4
   802  00002E                     ?_efgtoa:
   803                           	callstack 0
   804  00002E                     efgtoa@fp:
   805                           	callstack 0
   806                           
   807                           ; 2 bytes @ 0x2D
   808  00002E                     	ds	2
   809  000030                     efgtoa@f:
   810                           	callstack 0
   811                           
   812                           ; 4 bytes @ 0x2F
   813  000030                     	ds	4
   814  000034                     efgtoa@c:
   815                           	callstack 0
   816                           
   817                           ; 1 bytes @ 0x33
   818  000034                     	ds	1
   819  000035                     ??_efgtoa:
   820                           
   821                           ; 1 bytes @ 0x34
   822  000035                     	ds	5
   823  00003A                     ??_vfpfcnvrt:
   824                           
   825                           ; 1 bytes @ 0x39
   826  00003A                     	ds	4
   827  00003E                     vfpfcnvrt@f:
   828                           	callstack 0
   829                           
   830                           ; 4 bytes @ 0x3D
   831  00003E                     	ds	4
   832  000042                     vfpfcnvrt@ct:
   833                           	callstack 0
   834                           
   835                           ; 3 bytes @ 0x41
   836  000042                     	ds	3
   837  000045                     vfpfcnvrt@c:
   838                           	callstack 0
   839                           
   840                           ; 1 bytes @ 0x44
   841  000045                     	ds	1
   842  000046                     vfprintf@cfmt:
   843                           	callstack 0
   844                           
   845                           ; 2 bytes @ 0x45
   846  000046                     	ds	2
   847  000048                     sprintf@ap:
   848                           	callstack 0
   849                           
   850                           ; 2 bytes @ 0x47
   851  000048                     	ds	2
   852  00004A                     sprintf@f:
   853                           	callstack 0
   854                           
   855                           ; 11 bytes @ 0x49
   856  00004A                     	ds	11
   857  000055                     main@voltage:
   858                           	callstack 0
   859                           
   860                           ; 4 bytes @ 0x54
   861  000055                     	ds	4
   862  000059                     main@ADC_value:
   863                           	callstack 0
   864                           
   865                           ; 4 bytes @ 0x58
   866  000059                     	ds	4
   867                           
   868 ;;
   869 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   870 ;;
   871 ;; *************** function _main *****************
   872 ;; Defined at:
   873 ;;		line 77 in file "main.c"
   874 ;; Parameters:    Size  Location     Type
   875 ;;		None
   876 ;; Auto vars:     Size  Location     Type
   877 ;;  ADC_value       4   88[COMRAM] float 
   878 ;;  voltage         4   84[COMRAM] float 
   879 ;; Return value:  Size  Location     Type
   880 ;;                  1    wreg      void 
   881 ;; Registers used:
   882 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   883 ;; Tracked objects:
   884 ;;		On entry : 0/0
   885 ;;		On exit  : 0/0
   886 ;;		Unchanged: 0/0
   887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   889 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   891 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   892 ;;Total ram usage:        8 bytes
   893 ;; Hardware stack levels required when called: 9
   894 ;; This function calls:
   895 ;;		_ADC_Init
   896 ;;		_ADC_Read
   897 ;;		_LCD_20_LINE1
   898 ;;		_LCD_20_LINE3
   899 ;;		_LCD_20_LINE4
   900 ;;		_LCD_DISPLAY
   901 ;;		_LCD_DISPLAY_DIGIT
   902 ;;		_LCD_INITIALIZE_4BIT
   903 ;;		_LCD_SETUP_4BIT
   904 ;;		___flmul
   905 ;;		___fltol
   906 ;;		___xxtofl
   907 ;; This function is called by:
   908 ;;		Startup code after reset
   909 ;; This function uses a non-reentrant model
   910 ;;
   911                           
   912                           	psect	text0
   913  003698                     __ptext0:
   914                           	callstack 0
   915  003698                     _main:
   916                           	callstack 22
   917  003698                     
   918                           ;main.c: 79:     float ADC_value, voltage;;main.c: 81:     TRISAbits.TRISA0 = 0x01;
   919  003698  8092               	bsf	146,0,c	;volatile
   920  00369A                     
   921                           ;main.c: 82:     TRISD = 0x00;
   922  00369A  0E00               	movlw	0
   923  00369C  6E95               	movwf	149,c	;volatile
   924  00369E                     
   925                           ;main.c: 84:     ADC_Init();
   926  00369E  ECDF  F020         	call	_ADC_Init	;wreg free
   927                           
   928                           ;main.c: 85:     LCD_SETUP_4BIT();
   929  0036A2  ECCB  F020         	call	_LCD_SETUP_4BIT	;wreg free
   930  0036A6                     
   931                           ;main.c: 86:     LCD_INITIALIZE_4BIT();
   932  0036A6  EC17  F021         	call	_LCD_INITIALIZE_4BIT	;wreg free
   933  0036AA                     l4059:
   934                           
   935                           ;main.c: 89:         PORTD = (unsigned char)ADC_value;
   936  0036AA  C059  F001         	movff	main@ADC_value,___fltol@f1
   937  0036AE  C05A  F002         	movff	main@ADC_value+1,___fltol@f1+1
   938  0036B2  C05B  F003         	movff	main@ADC_value+2,___fltol@f1+2
   939  0036B6  C05C  F004         	movff	main@ADC_value+3,___fltol@f1+3
   940  0036BA  EC47  F01A         	call	___fltol	;wreg free
   941  0036BE  5001               	movf	?___fltol^0,w,c
   942  0036C0  6E83               	movwf	131,c	;volatile
   943  0036C2                     
   944                           ;main.c: 90:         ADC_value = (float)ADC_Read(0);
   945  0036C2  0E00               	movlw	0
   946  0036C4  6E02               	movwf	(ADC_Read@channel+1)^0,c
   947  0036C6  0E00               	movlw	0
   948  0036C8  6E01               	movwf	ADC_Read@channel^0,c
   949  0036CA  EC90  F01E         	call	_ADC_Read	;wreg free
   950  0036CE  C001  F009         	movff	?_ADC_Read,___xxtofl@val
   951  0036D2  C002  F00A         	movff	?_ADC_Read+1,___xxtofl@val+1
   952  0036D6  0E00               	movlw	0
   953  0036D8  BE0A               	btfsc	(___xxtofl@val+1)^0,7,c
   954  0036DA  0EFF               	movlw	-1
   955  0036DC  6E0B               	movwf	(___xxtofl@val+2)^0,c
   956  0036DE  6E0C               	movwf	(___xxtofl@val+3)^0,c
   957  0036E0  0E01               	movlw	1
   958  0036E2  EC28  F017         	call	___xxtofl
   959  0036E6  C009  F059         	movff	?___xxtofl,main@ADC_value
   960  0036EA  C00A  F05A         	movff	?___xxtofl+1,main@ADC_value+1
   961  0036EE  C00B  F05B         	movff	?___xxtofl+2,main@ADC_value+2
   962  0036F2  C00C  F05C         	movff	?___xxtofl+3,main@ADC_value+3
   963  0036F6                     
   964                           ;main.c: 91:         voltage = (float)(ADC_value*(5.0/1023.0));
   965  0036F6  C059  F001         	movff	main@ADC_value,___flmul@b
   966  0036FA  C05A  F002         	movff	main@ADC_value+1,___flmul@b+1
   967  0036FE  C05B  F003         	movff	main@ADC_value+2,___flmul@b+2
   968  003702  C05C  F004         	movff	main@ADC_value+3,___flmul@b+3
   969  003706  0E0A               	movlw	10
   970  003708  6E05               	movwf	___flmul@a^0,c
   971  00370A  0E28               	movlw	40
   972  00370C  6E06               	movwf	(___flmul@a+1)^0,c
   973  00370E  0EA0               	movlw	160
   974  003710  6E07               	movwf	(___flmul@a+2)^0,c
   975  003712  0E3B               	movlw	59
   976  003714  6E08               	movwf	(___flmul@a+3)^0,c
   977  003716  EC3D  F012         	call	___flmul	;wreg free
   978  00371A  C001  F055         	movff	?___flmul,main@voltage
   979  00371E  C002  F056         	movff	?___flmul+1,main@voltage+1
   980  003722  C003  F057         	movff	?___flmul+2,main@voltage+2
   981  003726  C004  F058         	movff	?___flmul+3,main@voltage+3
   982  00372A                     
   983                           ;main.c: 92:         LCD_20_LINE1();
   984  00372A  EC2F  F021         	call	_LCD_20_LINE1	;wreg free
   985  00372E                     
   986                           ;main.c: 93:         LCD_DISPLAY("***PIC18F8720-ADC***");
   987  00372E  0E01               	movlw	low STR_2
   988  003730  6E17               	movwf	LCD_DISPLAY@string^0,c
   989  003732  0E0F               	movlw	high STR_2
   990  003734  6E18               	movwf	(LCD_DISPLAY@string+1)^0,c
   991  003736  ECDE  F01E         	call	_LCD_DISPLAY	;wreg free
   992  00373A                     
   993                           ;main.c: 94:         LCD_20_LINE3();
   994  00373A  EC2B  F021         	call	_LCD_20_LINE3	;wreg free
   995  00373E                     
   996                           ;main.c: 95:         LCD_DISPLAY("ADC Data : ");
   997  00373E  0E16               	movlw	low STR_3
   998  003740  6E17               	movwf	LCD_DISPLAY@string^0,c
   999  003742  0E0F               	movlw	high STR_3
  1000  003744  6E18               	movwf	(LCD_DISPLAY@string+1)^0,c
  1001  003746  ECDE  F01E         	call	_LCD_DISPLAY	;wreg free
  1002  00374A                     
  1003                           ;main.c: 96:         LCD_DISPLAY_DIGIT(ADC_value);
  1004  00374A  C059  F0A6         	movff	main@ADC_value,LCD_DISPLAY_DIGIT@num
  1005  00374E  C05A  F0A7         	movff	main@ADC_value+1,LCD_DISPLAY_DIGIT@num+1
  1006  003752  C05B  F0A8         	movff	main@ADC_value+2,LCD_DISPLAY_DIGIT@num+2
  1007  003756  C05C  F0A9         	movff	main@ADC_value+3,LCD_DISPLAY_DIGIT@num+3
  1008  00375A  ECB1  F020         	call	_LCD_DISPLAY_DIGIT	;wreg free
  1009  00375E                     
  1010                           ;main.c: 97:         LCD_20_LINE4();
  1011  00375E  EC27  F021         	call	_LCD_20_LINE4	;wreg free
  1012  003762                     
  1013                           ;main.c: 98:         LCD_DISPLAY("Voltage : ");
  1014  003762  0E22               	movlw	low STR_4
  1015  003764  6E17               	movwf	LCD_DISPLAY@string^0,c
  1016  003766  0E0F               	movlw	high STR_4
  1017  003768  6E18               	movwf	(LCD_DISPLAY@string+1)^0,c
  1018  00376A  ECDE  F01E         	call	_LCD_DISPLAY	;wreg free
  1019  00376E                     
  1020                           ;main.c: 99:         LCD_DISPLAY_DIGIT(voltage);
  1021  00376E  C055  F0A6         	movff	main@voltage,LCD_DISPLAY_DIGIT@num
  1022  003772  C056  F0A7         	movff	main@voltage+1,LCD_DISPLAY_DIGIT@num+1
  1023  003776  C057  F0A8         	movff	main@voltage+2,LCD_DISPLAY_DIGIT@num+2
  1024  00377A  C058  F0A9         	movff	main@voltage+3,LCD_DISPLAY_DIGIT@num+3
  1025  00377E  ECB1  F020         	call	_LCD_DISPLAY_DIGIT	;wreg free
  1026  003782                     
  1027                           ;main.c: 100:         LCD_DISPLAY(" V");
  1028  003782  0E45               	movlw	low STR_5
  1029  003784  6E17               	movwf	LCD_DISPLAY@string^0,c
  1030  003786  0E0F               	movlw	high STR_5
  1031  003788  6E18               	movwf	(LCD_DISPLAY@string+1)^0,c
  1032  00378A  ECDE  F01E         	call	_LCD_DISPLAY	;wreg free
  1033  00378E  EF55  F01B         	goto	l4059
  1034  003792  EF01  F000         	goto	start
  1035  003796                     __end_of_main:
  1036                           	callstack 0
  1037                           
  1038 ;; *************** function ___xxtofl *****************
  1039 ;; Defined at:
  1040 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\xxtofl.c"
  1041 ;; Parameters:    Size  Location     Type
  1042 ;;  sign            1    wreg     unsigned char 
  1043 ;;  val             4    8[COMRAM] long 
  1044 ;; Auto vars:     Size  Location     Type
  1045 ;;  sign            1   16[COMRAM] unsigned char 
  1046 ;;  arg             4   18[COMRAM] unsigned long 
  1047 ;;  exp             1   17[COMRAM] unsigned char 
  1048 ;; Return value:  Size  Location     Type
  1049 ;;                  4    8[COMRAM] unsigned char 
  1050 ;; Registers used:
  1051 ;;		wreg, status,2, status,0
  1052 ;; Tracked objects:
  1053 ;;		On entry : 0/0
  1054 ;;		On exit  : 0/0
  1055 ;;		Unchanged: 0/0
  1056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1057 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1058 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1059 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1060 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1061 ;;Total ram usage:       14 bytes
  1062 ;; Hardware stack levels used: 1
  1063 ;; This function calls:
  1064 ;;		Nothing
  1065 ;; This function is called by:
  1066 ;;		_main
  1067 ;; This function uses a non-reentrant model
  1068 ;;
  1069                           
  1070                           	psect	text1
  1071  002E50                     __ptext1:
  1072                           	callstack 0
  1073  002E50                     ___xxtofl:
  1074                           	callstack 30
  1075                           
  1076                           ;incstack = 0
  1077                           ;___xxtofl@sign stored from wreg
  1078  002E50  6E11               	movwf	___xxtofl@sign^0,c
  1079  002E52  5011               	movf	___xxtofl@sign^0,w,c
  1080  002E54  B4D8               	btfsc	status,2,c
  1081  002E56  EF2F  F017         	goto	u5171
  1082  002E5A  EF31  F017         	goto	u5170
  1083  002E5E                     u5171:
  1084  002E5E  EF53  F017         	goto	l802
  1085  002E62                     u5170:
  1086  002E62  BE0C               	btfsc	(___xxtofl@val+3)^0,7,c
  1087  002E64  EF38  F017         	goto	u5180
  1088  002E68  EF36  F017         	goto	u5181
  1089  002E6C                     u5181:
  1090  002E6C  EF53  F017         	goto	l802
  1091  002E70                     u5180:
  1092  002E70  C009  F00D         	movff	___xxtofl@val,??___xxtofl
  1093  002E74  C00A  F00E         	movff	___xxtofl@val+1,??___xxtofl+1
  1094  002E78  C00B  F00F         	movff	___xxtofl@val+2,??___xxtofl+2
  1095  002E7C  C00C  F010         	movff	___xxtofl@val+3,??___xxtofl+3
  1096  002E80  1E0D               	comf	??___xxtofl^0,f,c
  1097  002E82  1E0E               	comf	(??___xxtofl+1)^0,f,c
  1098  002E84  1E0F               	comf	(??___xxtofl+2)^0,f,c
  1099  002E86  1E10               	comf	(??___xxtofl+3)^0,f,c
  1100  002E88  2A0D               	incf	??___xxtofl^0,f,c
  1101  002E8A  0E00               	movlw	0
  1102  002E8C  220E               	addwfc	(??___xxtofl+1)^0,f,c
  1103  002E8E  220F               	addwfc	(??___xxtofl+2)^0,f,c
  1104  002E90  2210               	addwfc	(??___xxtofl+3)^0,f,c
  1105  002E92  C00D  F013         	movff	??___xxtofl,___xxtofl@arg
  1106  002E96  C00E  F014         	movff	??___xxtofl+1,___xxtofl@arg+1
  1107  002E9A  C00F  F015         	movff	??___xxtofl+2,___xxtofl@arg+2
  1108  002E9E  C010  F016         	movff	??___xxtofl+3,___xxtofl@arg+3
  1109  002EA2  EF5B  F017         	goto	l3983
  1110  002EA6                     l802:
  1111  002EA6  C009  F013         	movff	___xxtofl@val,___xxtofl@arg
  1112  002EAA  C00A  F014         	movff	___xxtofl@val+1,___xxtofl@arg+1
  1113  002EAE  C00B  F015         	movff	___xxtofl@val+2,___xxtofl@arg+2
  1114  002EB2  C00C  F016         	movff	___xxtofl@val+3,___xxtofl@arg+3
  1115  002EB6                     l3983:
  1116  002EB6  5009               	movf	___xxtofl@val^0,w,c
  1117  002EB8  100A               	iorwf	(___xxtofl@val+1)^0,w,c
  1118  002EBA  100B               	iorwf	(___xxtofl@val+2)^0,w,c
  1119  002EBC  100C               	iorwf	(___xxtofl@val+3)^0,w,c
  1120  002EBE  A4D8               	btfss	status,2,c
  1121  002EC0  EF64  F017         	goto	u5191
  1122  002EC4  EF66  F017         	goto	u5190
  1123  002EC8                     u5191:
  1124  002EC8  EF70  F017         	goto	l3989
  1125  002ECC                     u5190:
  1126  002ECC  0E00               	movlw	0
  1127  002ECE  6E09               	movwf	?___xxtofl^0,c
  1128  002ED0  0E00               	movlw	0
  1129  002ED2  6E0A               	movwf	(?___xxtofl+1)^0,c
  1130  002ED4  0E00               	movlw	0
  1131  002ED6  6E0B               	movwf	(?___xxtofl+2)^0,c
  1132  002ED8  0E00               	movlw	0
  1133  002EDA  6E0C               	movwf	(?___xxtofl+3)^0,c
  1134  002EDC  EF01  F018         	goto	l805
  1135  002EE0                     l3989:
  1136  002EE0  0E96               	movlw	150
  1137  002EE2  6E12               	movwf	___xxtofl@exp^0,c
  1138  002EE4  EF7A  F017         	goto	l3993
  1139  002EE8                     l3991:
  1140  002EE8  2A12               	incf	___xxtofl@exp^0,f,c
  1141  002EEA  90D8               	bcf	status,0,c
  1142  002EEC  3216               	rrcf	(___xxtofl@arg+3)^0,f,c
  1143  002EEE  3215               	rrcf	(___xxtofl@arg+2)^0,f,c
  1144  002EF0  3214               	rrcf	(___xxtofl@arg+1)^0,f,c
  1145  002EF2  3213               	rrcf	___xxtofl@arg^0,f,c
  1146  002EF4                     l3993:
  1147  002EF4  0E00               	movlw	0
  1148  002EF6  1413               	andwf	___xxtofl@arg^0,w,c
  1149  002EF8  6E0D               	movwf	??___xxtofl^0,c
  1150  002EFA  0E00               	movlw	0
  1151  002EFC  1414               	andwf	(___xxtofl@arg+1)^0,w,c
  1152  002EFE  6E0E               	movwf	(??___xxtofl+1)^0,c
  1153  002F00  0E00               	movlw	0
  1154  002F02  1415               	andwf	(___xxtofl@arg+2)^0,w,c
  1155  002F04  6E0F               	movwf	(??___xxtofl+2)^0,c
  1156  002F06  0EFE               	movlw	254
  1157  002F08  1416               	andwf	(___xxtofl@arg+3)^0,w,c
  1158  002F0A  6E10               	movwf	(??___xxtofl+3)^0,c
  1159  002F0C  500D               	movf	??___xxtofl^0,w,c
  1160  002F0E  100E               	iorwf	(??___xxtofl+1)^0,w,c
  1161  002F10  100F               	iorwf	(??___xxtofl+2)^0,w,c
  1162  002F12  1010               	iorwf	(??___xxtofl+3)^0,w,c
  1163  002F14  A4D8               	btfss	status,2,c
  1164  002F16  EF8F  F017         	goto	u5201
  1165  002F1A  EF91  F017         	goto	u5200
  1166  002F1E                     u5201:
  1167  002F1E  EF74  F017         	goto	l3991
  1168  002F22                     u5200:
  1169  002F22  EF9F  F017         	goto	l809
  1170  002F26                     l3995:
  1171  002F26  2A12               	incf	___xxtofl@exp^0,f,c
  1172  002F28  0E01               	movlw	1
  1173  002F2A  2613               	addwf	___xxtofl@arg^0,f,c
  1174  002F2C  0E00               	movlw	0
  1175  002F2E  2214               	addwfc	(___xxtofl@arg+1)^0,f,c
  1176  002F30  2215               	addwfc	(___xxtofl@arg+2)^0,f,c
  1177  002F32  2216               	addwfc	(___xxtofl@arg+3)^0,f,c
  1178  002F34  90D8               	bcf	status,0,c
  1179  002F36  3216               	rrcf	(___xxtofl@arg+3)^0,f,c
  1180  002F38  3215               	rrcf	(___xxtofl@arg+2)^0,f,c
  1181  002F3A  3214               	rrcf	(___xxtofl@arg+1)^0,f,c
  1182  002F3C  3213               	rrcf	___xxtofl@arg^0,f,c
  1183  002F3E                     l809:
  1184  002F3E  0E00               	movlw	0
  1185  002F40  1413               	andwf	___xxtofl@arg^0,w,c
  1186  002F42  6E0D               	movwf	??___xxtofl^0,c
  1187  002F44  0E00               	movlw	0
  1188  002F46  1414               	andwf	(___xxtofl@arg+1)^0,w,c
  1189  002F48  6E0E               	movwf	(??___xxtofl+1)^0,c
  1190  002F4A  0E00               	movlw	0
  1191  002F4C  1415               	andwf	(___xxtofl@arg+2)^0,w,c
  1192  002F4E  6E0F               	movwf	(??___xxtofl+2)^0,c
  1193  002F50  0EFF               	movlw	255
  1194  002F52  1416               	andwf	(___xxtofl@arg+3)^0,w,c
  1195  002F54  6E10               	movwf	(??___xxtofl+3)^0,c
  1196  002F56  500D               	movf	??___xxtofl^0,w,c
  1197  002F58  100E               	iorwf	(??___xxtofl+1)^0,w,c
  1198  002F5A  100F               	iorwf	(??___xxtofl+2)^0,w,c
  1199  002F5C  1010               	iorwf	(??___xxtofl+3)^0,w,c
  1200  002F5E  A4D8               	btfss	status,2,c
  1201  002F60  EFB4  F017         	goto	u5211
  1202  002F64  EFB6  F017         	goto	u5210
  1203  002F68                     u5211:
  1204  002F68  EF93  F017         	goto	l3995
  1205  002F6C                     u5210:
  1206  002F6C  EFBE  F017         	goto	l4003
  1207  002F70                     l4001:
  1208  002F70  0612               	decf	___xxtofl@exp^0,f,c
  1209  002F72  90D8               	bcf	status,0,c
  1210  002F74  3613               	rlcf	___xxtofl@arg^0,f,c
  1211  002F76  3614               	rlcf	(___xxtofl@arg+1)^0,f,c
  1212  002F78  3615               	rlcf	(___xxtofl@arg+2)^0,f,c
  1213  002F7A  3616               	rlcf	(___xxtofl@arg+3)^0,f,c
  1214  002F7C                     l4003:
  1215  002F7C  BE15               	btfsc	(___xxtofl@arg+2)^0,7,c
  1216  002F7E  EFC3  F017         	goto	u5221
  1217  002F82  EFC5  F017         	goto	u5220
  1218  002F86                     u5221:
  1219  002F86  EFCD  F017         	goto	l816
  1220  002F8A                     u5220:
  1221  002F8A  0E02               	movlw	2
  1222  002F8C  6012               	cpfslt	___xxtofl@exp^0,c
  1223  002F8E  EFCB  F017         	goto	u5231
  1224  002F92  EFCD  F017         	goto	u5230
  1225  002F96                     u5231:
  1226  002F96  EFB8  F017         	goto	l4001
  1227  002F9A                     u5230:
  1228  002F9A                     l816:
  1229  002F9A  B012               	btfsc	___xxtofl@exp^0,0,c
  1230  002F9C  EFD2  F017         	goto	u5241
  1231  002FA0  EFD4  F017         	goto	u5240
  1232  002FA4                     u5241:
  1233  002FA4  EFD5  F017         	goto	l4009
  1234  002FA8                     u5240:
  1235  002FA8  9E15               	bcf	(___xxtofl@arg+2)^0,7,c
  1236  002FAA                     l4009:
  1237  002FAA  90D8               	bcf	status,0,c
  1238  002FAC  3212               	rrcf	___xxtofl@exp^0,f,c
  1239  002FAE  C012  F00D         	movff	___xxtofl@exp,??___xxtofl
  1240  002FB2  6A0E               	clrf	(??___xxtofl+1)^0,c
  1241  002FB4  6A0F               	clrf	(??___xxtofl+2)^0,c
  1242  002FB6  6A10               	clrf	(??___xxtofl+3)^0,c
  1243  002FB8  C00D  F010         	movff	??___xxtofl,??___xxtofl+3
  1244  002FBC  6A0F               	clrf	(??___xxtofl+2)^0,c
  1245  002FBE  6A0E               	clrf	(??___xxtofl+1)^0,c
  1246  002FC0  6A0D               	clrf	??___xxtofl^0,c
  1247  002FC2  500D               	movf	??___xxtofl^0,w,c
  1248  002FC4  1213               	iorwf	___xxtofl@arg^0,f,c
  1249  002FC6  500E               	movf	(??___xxtofl+1)^0,w,c
  1250  002FC8  1214               	iorwf	(___xxtofl@arg+1)^0,f,c
  1251  002FCA  500F               	movf	(??___xxtofl+2)^0,w,c
  1252  002FCC  1215               	iorwf	(___xxtofl@arg+2)^0,f,c
  1253  002FCE  5010               	movf	(??___xxtofl+3)^0,w,c
  1254  002FD0  1216               	iorwf	(___xxtofl@arg+3)^0,f,c
  1255  002FD2  5011               	movf	___xxtofl@sign^0,w,c
  1256  002FD4  B4D8               	btfsc	status,2,c
  1257  002FD6  EFEF  F017         	goto	u5251
  1258  002FDA  EFF1  F017         	goto	u5250
  1259  002FDE                     u5251:
  1260  002FDE  EFF9  F017         	goto	l4019
  1261  002FE2                     u5250:
  1262  002FE2  BE0C               	btfsc	(___xxtofl@val+3)^0,7,c
  1263  002FE4  EFF8  F017         	goto	u5260
  1264  002FE8  EFF6  F017         	goto	u5261
  1265  002FEC                     u5261:
  1266  002FEC  EFF9  F017         	goto	l4019
  1267  002FF0                     u5260:
  1268  002FF0  8E16               	bsf	(___xxtofl@arg+3)^0,7,c
  1269  002FF2                     l4019:
  1270  002FF2  C013  F009         	movff	___xxtofl@arg,?___xxtofl
  1271  002FF6  C014  F00A         	movff	___xxtofl@arg+1,?___xxtofl+1
  1272  002FFA  C015  F00B         	movff	___xxtofl@arg+2,?___xxtofl+2
  1273  002FFE  C016  F00C         	movff	___xxtofl@arg+3,?___xxtofl+3
  1274  003002                     l805:
  1275  003002  0012               	return		;funcret
  1276  003004                     __end_of___xxtofl:
  1277                           	callstack 0
  1278                           
  1279 ;; *************** function _LCD_SETUP_4BIT *****************
  1280 ;; Defined at:
  1281 ;;		line 33 in file "./LCD.h"
  1282 ;; Parameters:    Size  Location     Type
  1283 ;;		None
  1284 ;; Auto vars:     Size  Location     Type
  1285 ;;		None
  1286 ;; Return value:  Size  Location     Type
  1287 ;;                  1    wreg      void 
  1288 ;; Registers used:
  1289 ;;		None
  1290 ;; Tracked objects:
  1291 ;;		On entry : 0/0
  1292 ;;		On exit  : 0/0
  1293 ;;		Unchanged: 0/0
  1294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1299 ;;Total ram usage:        0 bytes
  1300 ;; Hardware stack levels used: 1
  1301 ;; This function calls:
  1302 ;;		Nothing
  1303 ;; This function is called by:
  1304 ;;		_main
  1305 ;; This function uses a non-reentrant model
  1306 ;;
  1307                           
  1308                           	psect	text2
  1309  004196                     __ptext2:
  1310                           	callstack 0
  1311  004196                     _LCD_SETUP_4BIT:
  1312                           	callstack 30
  1313  004196                     
  1314                           ;./LCD.h: 39:     CCP2CONbits.CCP2M0 = 0x00;
  1315  004196  90BA               	bcf	186,0,c	;volatile
  1316                           
  1317                           ;./LCD.h: 40:     CCP2CONbits.CCP2M1 = 0x00;
  1318  004198  92BA               	bcf	186,1,c	;volatile
  1319                           
  1320                           ;./LCD.h: 41:     CCP2CONbits.CCP2M2 = 0x00;
  1321  00419A  94BA               	bcf	186,2,c	;volatile
  1322                           
  1323                           ;./LCD.h: 42:     CCP2CONbits.CCP2M3 = 0x00;
  1324  00419C  96BA               	bcf	186,3,c	;volatile
  1325                           
  1326                           ;./LCD.h: 47:     CCP1CONbits.CCP1M0 = 0x00;
  1327  00419E  90BD               	bcf	189,0,c	;volatile
  1328                           
  1329                           ;./LCD.h: 48:     CCP1CONbits.CCP1M1 = 0x00;
  1330  0041A0  92BD               	bcf	189,1,c	;volatile
  1331                           
  1332                           ;./LCD.h: 49:     CCP1CONbits.CCP1M2 = 0x00;
  1333  0041A2  94BD               	bcf	189,2,c	;volatile
  1334                           
  1335                           ;./LCD.h: 50:     CCP1CONbits.CCP1M3 = 0x00;
  1336  0041A4  96BD               	bcf	189,3,c	;volatile
  1337                           
  1338                           ;./LCD.h: 52:     SSPCON1bits.SSPEN = 0x00;
  1339  0041A6  9AC6               	bcf	198,5,c	;volatile
  1340                           
  1341                           ;./LCD.h: 53:     RCSTA1bits.SPEN = 0x00;
  1342  0041A8  9EAB               	bcf	171,7,c	;volatile
  1343                           
  1344                           ;./LCD.h: 54:     RCSTA2bits.SPEN2 = 0x00;
  1345  0041AA  9E6B               	bcf	107,7,c	;volatile
  1346                           
  1347                           ;./LCD.h: 56:     T1CONbits.T1OSCEN = 0x00;
  1348  0041AC  96CD               	bcf	205,3,c	;volatile
  1349                           
  1350                           ;./LCD.h: 58:  TRISJ0 = 0x00;
  1351  0041AE  909A               	bcf	3994,0,c	;volatile
  1352                           
  1353                           ;./LCD.h: 59:  TRISJ1 = 0x00;
  1354  0041B0  929A               	bcf	3994,1,c	;volatile
  1355                           
  1356                           ;./LCD.h: 60:  TRISB3 = 0x00;
  1357  0041B2  9693               	bcf	3987,3,c	;volatile
  1358                           
  1359                           ;./LCD.h: 62:  TRISC0 = 0x00;
  1360  0041B4  9094               	bcf	3988,0,c	;volatile
  1361                           
  1362                           ;./LCD.h: 63:  TRISC1 = 0x00;
  1363  0041B6  9294               	bcf	3988,1,c	;volatile
  1364                           
  1365                           ;./LCD.h: 64:  TRISC2 = 0x00;
  1366  0041B8  9494               	bcf	3988,2,c	;volatile
  1367                           
  1368                           ;./LCD.h: 65:  TRISC3 = 0x00;
  1369  0041BA  9694               	bcf	3988,3,c	;volatile
  1370  0041BC  0012               	return		;funcret
  1371  0041BE                     __end_of_LCD_SETUP_4BIT:
  1372                           	callstack 0
  1373                           
  1374 ;; *************** function _LCD_INITIALIZE_4BIT *****************
  1375 ;; Defined at:
  1376 ;;		line 158 in file "./LCD.h"
  1377 ;; Parameters:    Size  Location     Type
  1378 ;;		None
  1379 ;; Auto vars:     Size  Location     Type
  1380 ;;		None
  1381 ;; Return value:  Size  Location     Type
  1382 ;;                  1    wreg      void 
  1383 ;; Registers used:
  1384 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1385 ;; Tracked objects:
  1386 ;;		On entry : 0/0
  1387 ;;		On exit  : 0/0
  1388 ;;		Unchanged: 0/0
  1389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1394 ;;Total ram usage:        0 bytes
  1395 ;; Hardware stack levels used: 1
  1396 ;; Hardware stack levels required when called: 1
  1397 ;; This function calls:
  1398 ;;		_LCD_INSTRUCTION_4BIT
  1399 ;; This function is called by:
  1400 ;;		_main
  1401 ;; This function uses a non-reentrant model
  1402 ;;
  1403                           
  1404                           	psect	text3
  1405  00422E                     __ptext3:
  1406                           	callstack 0
  1407  00422E                     _LCD_INITIALIZE_4BIT:
  1408                           	callstack 29
  1409  00422E                     
  1410                           ;./LCD.h: 159:  LCD_INSTRUCTION_4BIT(0x02);
  1411  00422E  0E02               	movlw	2
  1412  004230  ECCF  F018         	call	_LCD_INSTRUCTION_4BIT
  1413                           
  1414                           ;./LCD.h: 160:  LCD_INSTRUCTION_4BIT(0x28);
  1415  004234  0E28               	movlw	40
  1416  004236  ECCF  F018         	call	_LCD_INSTRUCTION_4BIT
  1417                           
  1418                           ;./LCD.h: 161:  LCD_INSTRUCTION_4BIT(0x0c);
  1419  00423A  0E0C               	movlw	12
  1420  00423C  ECCF  F018         	call	_LCD_INSTRUCTION_4BIT
  1421                           
  1422                           ;./LCD.h: 162:  LCD_INSTRUCTION_4BIT(0x06);
  1423  004240  0E06               	movlw	6
  1424  004242  ECCF  F018         	call	_LCD_INSTRUCTION_4BIT
  1425                           
  1426                           ;./LCD.h: 163:  LCD_INSTRUCTION_4BIT(0x01);
  1427  004246  0E01               	movlw	1
  1428  004248  ECCF  F018         	call	_LCD_INSTRUCTION_4BIT
  1429  00424C  0012               	return		;funcret
  1430  00424E                     __end_of_LCD_INITIALIZE_4BIT:
  1431                           	callstack 0
  1432                           
  1433 ;; *************** function _LCD_DISPLAY_DIGIT *****************
  1434 ;; Defined at:
  1435 ;;		line 176 in file "./LCD.h"
  1436 ;; Parameters:    Size  Location     Type
  1437 ;;  num             4   70[BANK0 ] float 
  1438 ;; Auto vars:     Size  Location     Type
  1439 ;;  s              20   74[BANK0 ] unsigned char [20]
  1440 ;;  x               2    0        int 
  1441 ;; Return value:  Size  Location     Type
  1442 ;;                  1    wreg      void 
  1443 ;; Registers used:
  1444 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1445 ;; Tracked objects:
  1446 ;;		On entry : 0/0
  1447 ;;		On exit  : 0/0
  1448 ;;		Unchanged: 0/0
  1449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1450 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1451 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1453 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1454 ;;Total ram usage:       24 bytes
  1455 ;; Hardware stack levels used: 1
  1456 ;; Hardware stack levels required when called: 8
  1457 ;; This function calls:
  1458 ;;		_LCD_DISPLAY
  1459 ;;		_sprintf
  1460 ;; This function is called by:
  1461 ;;		_main
  1462 ;; This function uses a non-reentrant model
  1463 ;;
  1464                           
  1465                           	psect	text4
  1466  004162                     __ptext4:
  1467                           	callstack 0
  1468  004162                     _LCD_DISPLAY_DIGIT:
  1469                           	callstack 22
  1470  004162                     
  1471                           ;./LCD.h: 177:     char s[20];;./LCD.h: 178:  signed int x;;./LCD.h: 179:     sprintf(s,
      +                          "%.2f",num);
  1472  004162  0EAA               	movlw	low LCD_DISPLAY_DIGIT@s
  1473  004164  0100               	movlb	0	; () banked
  1474  004166  6F9E               	movwf	sprintf@s& (0+255),b
  1475  004168  0E00               	movlw	high LCD_DISPLAY_DIGIT@s
  1476  00416A  6F9F               	movwf	(sprintf@s+1)& (0+255),b
  1477  00416C  0E2D               	movlw	low STR_1
  1478  00416E  6FA0               	movwf	sprintf@fmt& (0+255),b
  1479  004170  0E0F               	movlw	high STR_1
  1480  004172  6FA1               	movwf	(sprintf@fmt+1)& (0+255),b
  1481  004174  C0A6  F0A2         	movff	LCD_DISPLAY_DIGIT@num,?_sprintf+4
  1482  004178  C0A7  F0A3         	movff	LCD_DISPLAY_DIGIT@num+1,?_sprintf+5
  1483  00417C  C0A8  F0A4         	movff	LCD_DISPLAY_DIGIT@num+2,?_sprintf+6
  1484  004180  C0A9  F0A5         	movff	LCD_DISPLAY_DIGIT@num+3,?_sprintf+7
  1485  004184  EC7B  F01F         	call	_sprintf	;wreg free
  1486  004188                     
  1487                           ;./LCD.h: 180:  LCD_DISPLAY(s);
  1488  004188  0EAA               	movlw	low LCD_DISPLAY_DIGIT@s
  1489  00418A  6E17               	movwf	LCD_DISPLAY@string^0,c
  1490  00418C  0E00               	movlw	high LCD_DISPLAY_DIGIT@s
  1491  00418E  6E18               	movwf	(LCD_DISPLAY@string+1)^0,c
  1492  004190  ECDE  F01E         	call	_LCD_DISPLAY	;wreg free
  1493  004194  0012               	return		;funcret
  1494  004196                     __end_of_LCD_DISPLAY_DIGIT:
  1495                           	callstack 0
  1496                           
  1497 ;; *************** function _sprintf *****************
  1498 ;; Defined at:
  1499 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_sprintf.c"
  1500 ;; Parameters:    Size  Location     Type
  1501 ;;  s               2   62[BANK0 ] PTR unsigned char 
  1502 ;;		 -> LCD_DISPLAY_DIGIT@s(20), 
  1503 ;;  fmt             2   64[BANK0 ] PTR const unsigned char 
  1504 ;;		 -> STR_1(5), 
  1505 ;; Auto vars:     Size  Location     Type
  1506 ;;  f              11   73[COMRAM] struct _IO_FILE
  1507 ;;  ap              2   71[COMRAM] PTR void [1]
  1508 ;;		 -> ?_sprintf(2), 
  1509 ;;  ret             2    0        int 
  1510 ;; Return value:  Size  Location     Type
  1511 ;;                  2   62[BANK0 ] int 
  1512 ;; Registers used:
  1513 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1514 ;; Tracked objects:
  1515 ;;		On entry : 0/0
  1516 ;;		On exit  : 0/0
  1517 ;;		Unchanged: 0/0
  1518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1519 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1520 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1522 ;;      Totals:        13       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1523 ;;Total ram usage:       21 bytes
  1524 ;; Hardware stack levels used: 1
  1525 ;; Hardware stack levels required when called: 7
  1526 ;; This function calls:
  1527 ;;		_vfprintf
  1528 ;; This function is called by:
  1529 ;;		_LCD_DISPLAY_DIGIT
  1530 ;; This function uses a non-reentrant model
  1531 ;;
  1532                           
  1533                           	psect	text5
  1534  003EF6                     __ptext5:
  1535                           	callstack 0
  1536  003EF6                     _sprintf:
  1537                           	callstack 22
  1538  003EF6  0EA2               	movlw	low (?_sprintf+4)
  1539  003EF8  6E48               	movwf	sprintf@ap^0,c
  1540  003EFA  0E00               	movlw	high (?_sprintf+4)
  1541  003EFC  6E49               	movwf	(sprintf@ap+1)^0,c
  1542  003EFE  C09E  F04A         	movff	sprintf@s,sprintf@f
  1543  003F02  C09F  F04B         	movff	sprintf@s+1,sprintf@f+1
  1544  003F06  0E00               	movlw	0
  1545  003F08  6E4E               	movwf	(sprintf@f+4)^0,c
  1546  003F0A  0E00               	movlw	0
  1547  003F0C  6E4D               	movwf	(sprintf@f+3)^0,c
  1548  003F0E  0E00               	movlw	0
  1549  003F10  6E54               	movwf	(sprintf@f+10)^0,c
  1550  003F12  0E00               	movlw	0
  1551  003F14  6E53               	movwf	(sprintf@f+9)^0,c
  1552  003F16  0E4A               	movlw	low sprintf@f
  1553  003F18  0100               	movlb	0	; () banked
  1554  003F1A  6F98               	movwf	vfprintf@fp& (0+255),b
  1555  003F1C  0E00               	movlw	high sprintf@f
  1556  003F1E  6F99               	movwf	(vfprintf@fp+1)& (0+255),b
  1557  003F20  C0A0  F09A         	movff	sprintf@fmt,vfprintf@fmt
  1558  003F24  C0A1  F09B         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1559  003F28  0E48               	movlw	low sprintf@ap
  1560  003F2A  6F9C               	movwf	vfprintf@ap& (0+255),b
  1561  003F2C  0E00               	movlw	high sprintf@ap
  1562  003F2E  6F9D               	movwf	(vfprintf@ap+1)& (0+255),b
  1563  003F30  EC19  F01F         	call	_vfprintf	;wreg free
  1564  003F34  504D               	movf	(sprintf@f+3)^0,w,c
  1565  003F36  0100               	movlb	0	; () banked
  1566  003F38  259E               	addwf	sprintf@s& (0+255),w,b
  1567  003F3A  6ED9               	movwf	fsr2l,c
  1568  003F3C  504E               	movf	(sprintf@f+4)^0,w,c
  1569  003F3E  219F               	addwfc	(sprintf@s+1)& (0+255),w,b
  1570  003F40  6EDA               	movwf	fsr2h,c
  1571  003F42  0E00               	movlw	0
  1572  003F44  6EDF               	movwf	indf2,c
  1573  003F46                     
  1574                           ; BSR set to: 0
  1575  003F46  0012               	return		;funcret
  1576  003F48                     __end_of_sprintf:
  1577                           	callstack 0
  1578                           
  1579 ;; *************** function _vfprintf *****************
  1580 ;; Defined at:
  1581 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1582 ;; Parameters:    Size  Location     Type
  1583 ;;  fp              2   56[BANK0 ] PTR struct _IO_FILE
  1584 ;;		 -> sprintf@f(11), 
  1585 ;;  fmt             2   58[BANK0 ] PTR const unsigned char 
  1586 ;;		 -> STR_1(5), 
  1587 ;;  ap              2   60[BANK0 ] PTR PTR void 
  1588 ;;		 -> sprintf@ap(2), 
  1589 ;; Auto vars:     Size  Location     Type
  1590 ;;  cfmt            2   69[COMRAM] PTR unsigned char 
  1591 ;;		 -> STR_1(5), 
  1592 ;; Return value:  Size  Location     Type
  1593 ;;                  2   56[BANK0 ] int 
  1594 ;; Registers used:
  1595 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1596 ;; Tracked objects:
  1597 ;;		On entry : 0/0
  1598 ;;		On exit  : 0/0
  1599 ;;		Unchanged: 0/0
  1600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1601 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1602 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1604 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1605 ;;Total ram usage:        8 bytes
  1606 ;; Hardware stack levels used: 1
  1607 ;; Hardware stack levels required when called: 6
  1608 ;; This function calls:
  1609 ;;		_vfpfcnvrt
  1610 ;; This function is called by:
  1611 ;;		_sprintf
  1612 ;; This function uses a non-reentrant model
  1613 ;;
  1614                           
  1615                           	psect	text6
  1616  003E32                     __ptext6:
  1617                           	callstack 0
  1618  003E32                     _vfprintf:
  1619                           	callstack 22
  1620  003E32                     
  1621                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1622  003E32  C09A  F046         	movff	vfprintf@fmt,vfprintf@cfmt
  1623  003E36  C09B  F047         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1624  003E3A                     
  1625                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1626  003E3A  0E00               	movlw	0
  1627  003E3C  0100               	movlb	0	; () banked
  1628  003E3E  6FC7               	movwf	(_nout+1)& (0+255),b
  1629  003E40  0E00               	movlw	0
  1630  003E42  6FC6               	movwf	_nout& (0+255),b
  1631                           
  1632                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1633  003E44  EF37  F01F         	goto	l3889
  1634  003E48                     l3887:
  1635                           
  1636                           ; BSR set to: 0
  1637                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1638  003E48  C098  F092         	movff	vfprintf@fp,vfpfcnvrt@fp
  1639  003E4C  C099  F093         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1640  003E50  0E46               	movlw	low vfprintf@cfmt
  1641  003E52  6F94               	movwf	vfpfcnvrt@fmt& (0+255),b
  1642  003E54  0E00               	movlw	high vfprintf@cfmt
  1643  003E56  6F95               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1644  003E58  C09C  F096         	movff	vfprintf@ap,vfpfcnvrt@ap
  1645  003E5C  C09D  F097         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1646  003E60  EC0D  F010         	call	_vfpfcnvrt	;wreg free
  1647  003E64  0100               	movlb	0	; () banked
  1648  003E66  5192               	movf	?_vfpfcnvrt& (0+255),w,b
  1649  003E68  27C6               	addwf	_nout& (0+255),f,b
  1650  003E6A  5193               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  1651  003E6C  23C7               	addwfc	(_nout+1)& (0+255),f,b
  1652  003E6E                     l3889:
  1653                           
  1654                           ; BSR set to: 0
  1655                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1656  003E6E  C046  FFF6         	movff	vfprintf@cfmt,tblptrl
  1657  003E72  C047  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1658  003E76                     	if	0	;tblptru may be non-zero
  1659  003E76                     	endif
  1660  003E76                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1661  003E76  0E00               	movlw	low (__mediumconst shr (0+16))
  1662  003E78  6EF8               	movwf	tblptru,c
  1663  003E7A                     	endif
  1664  003E7A  0008               	tblrd		*
  1665  003E7C  50F5               	movf	tablat,w,c
  1666  003E7E  0900               	iorlw	0
  1667  003E80  A4D8               	btfss	status,2,c
  1668  003E82  EF45  F01F         	goto	u4931
  1669  003E86  EF47  F01F         	goto	u4930
  1670  003E8A                     u4931:
  1671  003E8A  EF24  F01F         	goto	l3887
  1672  003E8E                     u4930:
  1673  003E8E                     
  1674                           ; BSR set to: 0
  1675                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1676  003E8E  C0C6  F098         	movff	_nout,?_vfprintf
  1677  003E92  C0C7  F099         	movff	_nout+1,?_vfprintf+1
  1678  003E96                     
  1679                           ; BSR set to: 0
  1680  003E96  0012               	return		;funcret
  1681  003E98                     __end_of_vfprintf:
  1682                           	callstack 0
  1683                           
  1684 ;; *************** function _vfpfcnvrt *****************
  1685 ;; Defined at:
  1686 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1687 ;; Parameters:    Size  Location     Type
  1688 ;;  fp              2   50[BANK0 ] PTR struct _IO_FILE
  1689 ;;		 -> sprintf@f(11), 
  1690 ;;  fmt             2   52[BANK0 ] PTR PTR unsigned char 
  1691 ;;		 -> vfprintf@cfmt(2), 
  1692 ;;  ap              2   54[BANK0 ] PTR PTR void 
  1693 ;;		 -> sprintf@ap(2), 
  1694 ;; Auto vars:     Size  Location     Type
  1695 ;;  llu             8    0        unsigned long long 
  1696 ;;  ll              8    0        long long 
  1697 ;;  f               4   61[COMRAM] long long 
  1698 ;;  ct              3   65[COMRAM] unsigned char [3]
  1699 ;;  vp              3    0        PTR void 
  1700 ;;  cp              3    0        PTR unsigned char 
  1701 ;;  i               2    0        int 
  1702 ;;  done            2    0        int 
  1703 ;;  c               1   68[COMRAM] unsigned char 
  1704 ;; Return value:  Size  Location     Type
  1705 ;;                  2   50[BANK0 ] int 
  1706 ;; Registers used:
  1707 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1708 ;; Tracked objects:
  1709 ;;		On entry : 0/0
  1710 ;;		On exit  : 0/0
  1711 ;;		Unchanged: 0/0
  1712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1713 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1714 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1715 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1716 ;;      Totals:        12       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1717 ;;Total ram usage:       18 bytes
  1718 ;; Hardware stack levels used: 1
  1719 ;; Hardware stack levels required when called: 5
  1720 ;; This function calls:
  1721 ;;		_atoi
  1722 ;;		_efgtoa
  1723 ;;		_fputc
  1724 ;;		_isdigit
  1725 ;;		_isupper
  1726 ;;		_strncmp
  1727 ;;		_tolower
  1728 ;; This function is called by:
  1729 ;;		_vfprintf
  1730 ;; This function uses a non-reentrant model
  1731 ;;
  1732                           
  1733                           	psect	text7
  1734  00201A                     __ptext7:
  1735                           	callstack 0
  1736  00201A                     _vfpfcnvrt:
  1737                           	callstack 22
  1738  00201A                     
  1739                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.36\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          6\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1740  00201A  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1741  00201E  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1742  002022  CFDE FFF6          	movff	postinc2,tblptrl
  1743  002026  CFDD FFF7          	movff	postdec2,tblptrh
  1744  00202A                     	if	0	;tblptru may be non-zero
  1745  00202A                     	endif
  1746  00202A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1747  00202A  0E00               	movlw	low (__mediumconst shr (0+16))
  1748  00202C  6EF8               	movwf	tblptru,c
  1749  00202E                     	endif
  1750  00202E  0008               	tblrd		*
  1751  002030  50F5               	movf	tablat,w,c
  1752  002032  0A25               	xorlw	37
  1753  002034  A4D8               	btfss	status,2,c
  1754  002036  EF1F  F010         	goto	u4681
  1755  00203A  EF21  F010         	goto	u4680
  1756  00203E                     u4681:
  1757  00203E  EF1F  F012         	goto	l3835
  1758  002042                     u4680:
  1759  002042                     
  1760                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1761  002042  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1762  002046  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1763  00204A  2ADE               	incf	postinc2,f,c
  1764  00204C  0E00               	movlw	0
  1765  00204E  22DD               	addwfc	postdec2,f,c
  1766  002050                     
  1767                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1768  002050  0E00               	movlw	0
  1769  002052  0100               	movlb	0	; () banked
  1770  002054  6FC9               	movwf	(_width+1)& (0+255),b
  1771  002056  0E00               	movlw	0
  1772  002058  6FC8               	movwf	_width& (0+255),b
  1773  00205A  C0C8  F05D         	movff	_width,_flags
  1774  00205E  C0C9  F05E         	movff	_width+1,_flags+1
  1775  002062                     
  1776                           ; BSR set to: 0
  1777                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1778  002062  69CA               	setf	_prec& (0+255),b
  1779  002064  69CB               	setf	(_prec+1)& (0+255),b
  1780  002066                     
  1781                           ; BSR set to: 0
  1782                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  1783  002066  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1784  00206A  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1785  00206E  CFDE FFF6          	movff	postinc2,tblptrl
  1786  002072  CFDD FFF7          	movff	postdec2,tblptrh
  1787  002076                     	if	0	;tblptru may be non-zero
  1788  002076                     	endif
  1789  002076                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1790  002076  0E00               	movlw	low (__mediumconst shr (0+16))
  1791  002078  6EF8               	movwf	tblptru,c
  1792  00207A                     	endif
  1793  00207A  0008               	tblrd		*
  1794  00207C  50F5               	movf	tablat,w,c
  1795  00207E  0A2E               	xorlw	46
  1796  002080  A4D8               	btfss	status,2,c
  1797  002082  EF45  F010         	goto	u4691
  1798  002086  EF47  F010         	goto	u4690
  1799  00208A                     u4691:
  1800  00208A  EFBB  F010         	goto	l3781
  1801  00208E                     u4690:
  1802  00208E                     
  1803                           ; BSR set to: 0
  1804                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  1805  00208E  0E00               	movlw	0
  1806  002090  6FCB               	movwf	(_prec+1)& (0+255),b
  1807  002092  0E00               	movlw	0
  1808  002094  6FCA               	movwf	_prec& (0+255),b
  1809  002096                     
  1810                           ; BSR set to: 0
  1811                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  1812  002096  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1813  00209A  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1814  00209E  2ADE               	incf	postinc2,f,c
  1815  0020A0  0E00               	movlw	0
  1816  0020A2  22DD               	addwfc	postdec2,f,c
  1817  0020A4                     
  1818                           ; BSR set to: 0
  1819                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  1820  0020A4  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1821  0020A8  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1822  0020AC  CFDE FFF6          	movff	postinc2,tblptrl
  1823  0020B0  CFDD FFF7          	movff	postdec2,tblptrh
  1824  0020B4                     	if	0	;tblptru may be non-zero
  1825  0020B4                     	endif
  1826  0020B4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1827  0020B4  0E00               	movlw	low (__mediumconst shr (0+16))
  1828  0020B6  6EF8               	movwf	tblptru,c
  1829  0020B8                     	endif
  1830  0020B8  0008               	tblrd		*
  1831  0020BA  50F5               	movf	tablat,w,c
  1832  0020BC  0A2A               	xorlw	42
  1833  0020BE  A4D8               	btfss	status,2,c
  1834  0020C0  EF64  F010         	goto	u4701
  1835  0020C4  EF66  F010         	goto	u4700
  1836  0020C8                     u4701:
  1837  0020C8  EF83  F010         	goto	l3773
  1838  0020CC                     u4700:
  1839  0020CC                     
  1840                           ; BSR set to: 0
  1841                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  1842  0020CC  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1843  0020D0  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1844  0020D4  2ADE               	incf	postinc2,f,c
  1845  0020D6  0E00               	movlw	0
  1846  0020D8  22DD               	addwfc	postdec2,f,c
  1847                           
  1848                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  1849  0020DA  C096  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1850  0020DE  C097  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1851  0020E2  CFDF F03A          	movff	indf2,??_vfpfcnvrt
  1852  0020E6  0E02               	movlw	2
  1853  0020E8  26DE               	addwf	postinc2,f,c
  1854  0020EA  CFDF F03B          	movff	indf2,??_vfpfcnvrt+1
  1855  0020EE  0E00               	movlw	0
  1856  0020F0  22DD               	addwfc	postdec2,f,c
  1857  0020F2  C03A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1858  0020F6  C03B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1859  0020FA  CFDE F0CA          	movff	postinc2,_prec
  1860  0020FE  CFDD F0CB          	movff	postdec2,_prec+1
  1861                           
  1862                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  1863  002102  EFBB  F010         	goto	l3781
  1864  002106                     l3773:
  1865                           
  1866                           ; BSR set to: 0
  1867                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  1868  002106  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1869  00210A  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1870  00210E  CFDE F008          	movff	postinc2,atoi@s
  1871  002112  CFDD F009          	movff	postdec2,atoi@s+1
  1872  002116  EC92  F019         	call	_atoi	;wreg free
  1873  00211A  C008  F0CA         	movff	?_atoi,_prec
  1874  00211E  C009  F0CB         	movff	?_atoi+1,_prec+1
  1875                           
  1876                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  1877  002122  EF9A  F010         	goto	l3779
  1878  002126                     l3775:
  1879                           
  1880                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  1881  002126  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1882  00212A  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1883  00212E  2ADE               	incf	postinc2,f,c
  1884  002130  0E00               	movlw	0
  1885  002132  22DD               	addwfc	postdec2,f,c
  1886  002134                     l3779:
  1887  002134  0ED0               	movlw	208
  1888  002136  6E3A               	movwf	??_vfpfcnvrt^0,c
  1889  002138  0EFF               	movlw	255
  1890  00213A  6E3B               	movwf	(??_vfpfcnvrt+1)^0,c
  1891  00213C  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1892  002140  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1893  002144  CFDE FFF6          	movff	postinc2,tblptrl
  1894  002148  CFDD FFF7          	movff	postdec2,tblptrh
  1895  00214C                     	if	0	;tblptru may be non-zero
  1896  00214C                     	endif
  1897  00214C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1898  00214C  0E00               	movlw	low (__mediumconst shr (0+16))
  1899  00214E  6EF8               	movwf	tblptru,c
  1900  002150                     	endif
  1901  002150  0008               	tblrd		*
  1902  002152  50F5               	movf	tablat,w,c
  1903  002154  6E3C               	movwf	(??_vfpfcnvrt+2)^0,c
  1904  002156  6A3D               	clrf	(??_vfpfcnvrt+3)^0,c
  1905  002158  503A               	movf	??_vfpfcnvrt^0,w,c
  1906  00215A  263C               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1907  00215C  503B               	movf	(??_vfpfcnvrt+1)^0,w,c
  1908  00215E  223D               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1909  002160  503D               	movf	(??_vfpfcnvrt+3)^0,w,c
  1910  002162  E109               	bnz	u4710
  1911  002164  0E0A               	movlw	10
  1912  002166  5C3C               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1913  002168  A0D8               	btfss	status,0,c
  1914  00216A  EFB9  F010         	goto	u4711
  1915  00216E  EFBB  F010         	goto	u4710
  1916  002172                     u4711:
  1917  002172  EF93  F010         	goto	l3775
  1918  002176                     u4710:
  1919  002176                     l3781:
  1920                           
  1921                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  1922  002176  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1923  00217A  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1924  00217E  CFDE FFF6          	movff	postinc2,tblptrl
  1925  002182  CFDD FFF7          	movff	postdec2,tblptrh
  1926  002186                     	if	0	;tblptru may be non-zero
  1927  002186                     	endif
  1928  002186                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1929  002186  0E00               	movlw	low (__mediumconst shr (0+16))
  1930  002188  6EF8               	movwf	tblptru,c
  1931  00218A                     	endif
  1932  00218A  0008               	tblrd		*
  1933  00218C  50F5               	movf	tablat,w,c
  1934  00218E  6E07               	movwf	tolower@c^0,c
  1935  002190  6A08               	clrf	(tolower@c+1)^0,c
  1936  002192  ECF5  F01F         	call	_tolower	;wreg free
  1937  002196  5007               	movf	?_tolower^0,w,c
  1938  002198  6E42               	movwf	vfpfcnvrt@ct^0,c
  1939  00219A                     
  1940                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  1941  00219A  5042               	movf	vfpfcnvrt@ct^0,w,c
  1942  00219C  B4D8               	btfsc	status,2,c
  1943  00219E  EFD3  F010         	goto	u4721
  1944  0021A2  EFD5  F010         	goto	u4720
  1945  0021A6                     u4721:
  1946  0021A6  EF11  F011         	goto	l3791
  1947  0021AA                     u4720:
  1948  0021AA                     
  1949                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  1950  0021AA  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1951  0021AE  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1952  0021B2  CFDE F03A          	movff	postinc2,??_vfpfcnvrt
  1953  0021B6  CFDD F03B          	movff	postdec2,??_vfpfcnvrt+1
  1954  0021BA  0E01               	movlw	1
  1955  0021BC  263A               	addwf	??_vfpfcnvrt^0,f,c
  1956  0021BE  0E00               	movlw	0
  1957  0021C0  223B               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1958  0021C2  C03A  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1959  0021C6  C03B  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1960  0021CA                     	if	0	;tblptru may be non-zero
  1961  0021CA                     	endif
  1962  0021CA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1963  0021CA  0E00               	movlw	low (__mediumconst shr (0+16))
  1964  0021CC  6EF8               	movwf	tblptru,c
  1965  0021CE                     	endif
  1966  0021CE  0008               	tblrd		*
  1967  0021D0  50F5               	movf	tablat,w,c
  1968  0021D2  6E07               	movwf	tolower@c^0,c
  1969  0021D4  6A08               	clrf	(tolower@c+1)^0,c
  1970  0021D6  ECF5  F01F         	call	_tolower	;wreg free
  1971  0021DA  5007               	movf	?_tolower^0,w,c
  1972  0021DC  6E43               	movwf	(vfpfcnvrt@ct+1)^0,c
  1973  0021DE                     
  1974                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  1975  0021DE  5043               	movf	(vfpfcnvrt@ct+1)^0,w,c
  1976  0021E0  B4D8               	btfsc	status,2,c
  1977  0021E2  EFF5  F010         	goto	u4731
  1978  0021E6  EFF7  F010         	goto	u4730
  1979  0021EA                     u4731:
  1980  0021EA  EF11  F011         	goto	l3791
  1981  0021EE                     u4730:
  1982  0021EE                     
  1983                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  1984  0021EE  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1985  0021F2  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1986  0021F6  CFDE F03A          	movff	postinc2,??_vfpfcnvrt
  1987  0021FA  CFDD F03B          	movff	postdec2,??_vfpfcnvrt+1
  1988  0021FE  0E02               	movlw	2
  1989  002200  263A               	addwf	??_vfpfcnvrt^0,f,c
  1990  002202  0E00               	movlw	0
  1991  002204  223B               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1992  002206  C03A  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1993  00220A  C03B  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1994  00220E                     	if	0	;tblptru may be non-zero
  1995  00220E                     	endif
  1996  00220E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1997  00220E  0E00               	movlw	low (__mediumconst shr (0+16))
  1998  002210  6EF8               	movwf	tblptru,c
  1999  002212                     	endif
  2000  002212  0008               	tblrd		*
  2001  002214  50F5               	movf	tablat,w,c
  2002  002216  6E07               	movwf	tolower@c^0,c
  2003  002218  6A08               	clrf	(tolower@c+1)^0,c
  2004  00221A  ECF5  F01F         	call	_tolower	;wreg free
  2005  00221E  5007               	movf	?_tolower^0,w,c
  2006  002220  6E44               	movwf	(vfpfcnvrt@ct+2)^0,c
  2007  002222                     l3791:
  2008                           
  2009                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  2010  002222  0E66               	movlw	102
  2011  002224  1842               	xorwf	vfpfcnvrt@ct^0,w,c
  2012  002226  A4D8               	btfss	status,2,c
  2013  002228  EF18  F011         	goto	u4741
  2014  00222C  EF1A  F011         	goto	u4740
  2015  002230                     u4741:
  2016  002230  EF5C  F011         	goto	l3803
  2017  002234                     u4740:
  2018  002234                     
  2019                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  2020  002234  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2021  002238  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2022  00223C  CFDE FFF6          	movff	postinc2,tblptrl
  2023  002240  CFDD FFF7          	movff	postdec2,tblptrh
  2024  002244                     	if	0	;tblptru may be non-zero
  2025  002244                     	endif
  2026  002244                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2027  002244  0E00               	movlw	low (__mediumconst shr (0+16))
  2028  002246  6EF8               	movwf	tblptru,c
  2029  002248                     	endif
  2030  002248  0008               	tblrd		*
  2031  00224A  CFF5 F045          	movff	tablat,vfpfcnvrt@c
  2032  00224E                     
  2033                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  2034  00224E  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2035  002252  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2036  002256  2ADE               	incf	postinc2,f,c
  2037  002258  0E00               	movlw	0
  2038  00225A  22DD               	addwfc	postdec2,f,c
  2039  00225C                     
  2040                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2041  00225C  C096  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2042  002260  C097  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2043  002264  CFDF F03A          	movff	indf2,??_vfpfcnvrt
  2044  002268  0E04               	movlw	4
  2045  00226A  26DE               	addwf	postinc2,f,c
  2046  00226C  CFDF F03B          	movff	indf2,??_vfpfcnvrt+1
  2047  002270  0E00               	movlw	0
  2048  002272  22DD               	addwfc	postdec2,f,c
  2049  002274  C03A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2050  002278  C03B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2051  00227C  CFDE F03E          	movff	postinc2,vfpfcnvrt@f
  2052  002280  CFDE F03F          	movff	postinc2,vfpfcnvrt@f+1
  2053  002284  CFDE F040          	movff	postinc2,vfpfcnvrt@f+2
  2054  002288  CFDE F041          	movff	postinc2,vfpfcnvrt@f+3
  2055  00228C                     l3799:
  2056                           
  2057                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  2058  00228C  C092  F02E         	movff	vfpfcnvrt@fp,efgtoa@fp
  2059  002290  C093  F02F         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2060  002294  C03E  F030         	movff	vfpfcnvrt@f,efgtoa@f
  2061  002298  C03F  F031         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2062  00229C  C040  F032         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2063  0022A0  C041  F033         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2064  0022A4  C045  F034         	movff	vfpfcnvrt@c,efgtoa@c
  2065  0022A8  ECA5  F007         	call	_efgtoa	;wreg free
  2066  0022AC  C02E  F092         	movff	?_efgtoa,?_vfpfcnvrt
  2067  0022B0  C02F  F093         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2068  0022B4  EF3C  F012         	goto	l973
  2069  0022B8                     l3803:
  2070                           
  2071                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2072  0022B8  0E42               	movlw	low vfpfcnvrt@ct
  2073  0022BA  6E01               	movwf	strncmp@_l^0,c
  2074  0022BC  0E00               	movlw	high vfpfcnvrt@ct
  2075  0022BE  6E02               	movwf	(strncmp@_l+1)^0,c
  2076  0022C0  0E42               	movlw	low STR_14
  2077  0022C2  6E03               	movwf	strncmp@_r^0,c
  2078  0022C4  0E0F               	movlw	high STR_14
  2079  0022C6  6E04               	movwf	(strncmp@_r+1)^0,c
  2080  0022C8  0E00               	movlw	0
  2081  0022CA  6E06               	movwf	(strncmp@n+1)^0,c
  2082  0022CC  0E02               	movlw	2
  2083  0022CE  6E05               	movwf	strncmp@n^0,c
  2084  0022D0  EC4A  F01C         	call	_strncmp	;wreg free
  2085  0022D4  5001               	movf	?_strncmp^0,w,c
  2086  0022D6  1002               	iorwf	(?_strncmp+1)^0,w,c
  2087  0022D8  A4D8               	btfss	status,2,c
  2088  0022DA  EF71  F011         	goto	u4751
  2089  0022DE  EF73  F011         	goto	u4750
  2090  0022E2                     u4751:
  2091  0022E2  EFE5  F011         	goto	l3819
  2092  0022E6                     u4750:
  2093  0022E6                     
  2094                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 952:             
      +                          c = (*fmt)[1];
  2095  0022E6  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2096  0022EA  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2097  0022EE  CFDE F03A          	movff	postinc2,??_vfpfcnvrt
  2098  0022F2  CFDD F03B          	movff	postdec2,??_vfpfcnvrt+1
  2099  0022F6  0E01               	movlw	1
  2100  0022F8  263A               	addwf	??_vfpfcnvrt^0,f,c
  2101  0022FA  0E00               	movlw	0
  2102  0022FC  223B               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2103  0022FE  C03A  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2104  002302  C03B  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2105  002306                     	if	0	;tblptru may be non-zero
  2106  002306                     	endif
  2107  002306                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2108  002306  0E00               	movlw	low (__mediumconst shr (0+16))
  2109  002308  6EF8               	movwf	tblptru,c
  2110  00230A                     	endif
  2111  00230A  0008               	tblrd		*
  2112  00230C  CFF5 F045          	movff	tablat,vfpfcnvrt@c
  2113  002310  0EBF               	movlw	191
  2114  002312  6E3A               	movwf	??_vfpfcnvrt^0,c
  2115  002314  0EFF               	movlw	255
  2116  002316  6E3B               	movwf	(??_vfpfcnvrt+1)^0,c
  2117  002318  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2118  00231C  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2119  002320  CFDE FFF6          	movff	postinc2,tblptrl
  2120  002324  CFDD FFF7          	movff	postdec2,tblptrh
  2121  002328                     	if	0	;tblptru may be non-zero
  2122  002328                     	endif
  2123  002328                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2124  002328  0E00               	movlw	low (__mediumconst shr (0+16))
  2125  00232A  6EF8               	movwf	tblptru,c
  2126  00232C                     	endif
  2127  00232C  0008               	tblrd		*
  2128  00232E  50F5               	movf	tablat,w,c
  2129  002330  6E3C               	movwf	(??_vfpfcnvrt+2)^0,c
  2130  002332  6A3D               	clrf	(??_vfpfcnvrt+3)^0,c
  2131  002334  503A               	movf	??_vfpfcnvrt^0,w,c
  2132  002336  263C               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2133  002338  503B               	movf	(??_vfpfcnvrt+1)^0,w,c
  2134  00233A  223D               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2135  00233C  503D               	movf	(??_vfpfcnvrt+3)^0,w,c
  2136  00233E  E107               	bnz	u4761
  2137  002340  0E1A               	movlw	26
  2138  002342  5C3C               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2139  002344  B0D8               	btfsc	status,0,c
  2140  002346  EFA7  F011         	goto	u4761
  2141  00234A  EFA9  F011         	goto	u4760
  2142  00234E                     u4761:
  2143  00234E  EFC3  F011         	goto	l3813
  2144  002352                     u4760:
  2145  002352                     
  2146                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2147  002352  C096  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2148  002356  C097  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2149  00235A  CFDF F03A          	movff	indf2,??_vfpfcnvrt
  2150  00235E  0E04               	movlw	4
  2151  002360  26DE               	addwf	postinc2,f,c
  2152  002362  CFDF F03B          	movff	indf2,??_vfpfcnvrt+1
  2153  002366  0E00               	movlw	0
  2154  002368  22DD               	addwfc	postdec2,f,c
  2155  00236A  C03A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2156  00236E  C03B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2157  002372  CFDE F03E          	movff	postinc2,vfpfcnvrt@f
  2158  002376  CFDE F03F          	movff	postinc2,vfpfcnvrt@f+1
  2159  00237A  CFDE F040          	movff	postinc2,vfpfcnvrt@f+2
  2160  00237E  CFDE F041          	movff	postinc2,vfpfcnvrt@f+3
  2161                           
  2162                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  2163  002382  EFDB  F011         	goto	l978
  2164  002386                     l3813:
  2165                           
  2166                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2167  002386  C096  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2168  00238A  C097  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2169  00238E  CFDF F03A          	movff	indf2,??_vfpfcnvrt
  2170  002392  0E04               	movlw	4
  2171  002394  26DE               	addwf	postinc2,f,c
  2172  002396  CFDF F03B          	movff	indf2,??_vfpfcnvrt+1
  2173  00239A  0E00               	movlw	0
  2174  00239C  22DD               	addwfc	postdec2,f,c
  2175  00239E  C03A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2176  0023A2  C03B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2177  0023A6  CFDE F03E          	movff	postinc2,vfpfcnvrt@f
  2178  0023AA  CFDE F03F          	movff	postinc2,vfpfcnvrt@f+1
  2179  0023AE  CFDE F040          	movff	postinc2,vfpfcnvrt@f+2
  2180  0023B2  CFDE F041          	movff	postinc2,vfpfcnvrt@f+3
  2181  0023B6                     l978:
  2182                           
  2183                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2184  0023B6  0E02               	movlw	2
  2185  0023B8  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2186  0023BC  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2187  0023C0  26DE               	addwf	postinc2,f,c
  2188  0023C2  0E00               	movlw	0
  2189  0023C4  22DD               	addwfc	postdec2,f,c
  2190  0023C6  EF46  F011         	goto	l3799
  2191  0023CA                     l3819:
  2192                           
  2193                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2194  0023CA  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2195  0023CE  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2196  0023D2  CFDE FFF6          	movff	postinc2,tblptrl
  2197  0023D6  CFDD FFF7          	movff	postdec2,tblptrh
  2198  0023DA                     	if	0	;tblptru may be non-zero
  2199  0023DA                     	endif
  2200  0023DA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2201  0023DA  0E00               	movlw	low (__mediumconst shr (0+16))
  2202  0023DC  6EF8               	movwf	tblptru,c
  2203  0023DE                     	endif
  2204  0023DE  0008               	tblrd		*
  2205  0023E0  50F5               	movf	tablat,w,c
  2206  0023E2  0A25               	xorlw	37
  2207  0023E4  A4D8               	btfss	status,2,c
  2208  0023E6  EFF7  F011         	goto	u4771
  2209  0023EA  EFF9  F011         	goto	u4770
  2210  0023EE                     u4771:
  2211  0023EE  EF11  F012         	goto	l3829
  2212  0023F2                     u4770:
  2213  0023F2                     
  2214                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2215  0023F2  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2216  0023F6  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2217  0023FA  2ADE               	incf	postinc2,f,c
  2218  0023FC  0E00               	movlw	0
  2219  0023FE  22DD               	addwfc	postdec2,f,c
  2220  002400                     
  2221                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2222  002400  0E00               	movlw	0
  2223  002402  6E02               	movwf	(fputc@c+1)^0,c
  2224  002404  0E25               	movlw	37
  2225  002406  6E01               	movwf	fputc@c^0,c
  2226  002408  C092  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2227  00240C  C093  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2228  002410  ECBB  F01C         	call	_fputc	;wreg free
  2229  002414                     l3825:
  2230                           
  2231                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2232  002414  0E00               	movlw	0
  2233  002416  0100               	movlb	0	; () banked
  2234  002418  6F93               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2235  00241A  0E01               	movlw	1
  2236  00241C  6F92               	movwf	?_vfpfcnvrt& (0+255),b
  2237  00241E  EF3C  F012         	goto	l973
  2238  002422                     l3829:
  2239                           
  2240                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2241  002422  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2242  002426  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2243  00242A  2ADE               	incf	postinc2,f,c
  2244  00242C  0E00               	movlw	0
  2245  00242E  22DD               	addwfc	postdec2,f,c
  2246  002430                     
  2247                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2248  002430  0E00               	movlw	0
  2249  002432  0100               	movlb	0	; () banked
  2250  002434  6F93               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2251  002436  0E00               	movlw	0
  2252  002438  6F92               	movwf	?_vfpfcnvrt& (0+255),b
  2253  00243A  EF3C  F012         	goto	l973
  2254  00243E                     l3835:
  2255                           
  2256                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2257  00243E  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2258  002442  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2259  002446  CFDE FFF6          	movff	postinc2,tblptrl
  2260  00244A  CFDD FFF7          	movff	postdec2,tblptrh
  2261  00244E                     	if	0	;tblptru may be non-zero
  2262  00244E                     	endif
  2263  00244E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2264  00244E  0E00               	movlw	low (__mediumconst shr (0+16))
  2265  002450  6EF8               	movwf	tblptru,c
  2266  002452                     	endif
  2267  002452  0008               	tblrd		*
  2268  002454  50F5               	movf	tablat,w,c
  2269  002456  6E01               	movwf	fputc@c^0,c
  2270  002458  6A02               	clrf	(fputc@c+1)^0,c
  2271  00245A  C092  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2272  00245E  C093  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2273  002462  ECBB  F01C         	call	_fputc	;wreg free
  2274  002466                     
  2275                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2276  002466  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2277  00246A  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2278  00246E  2ADE               	incf	postinc2,f,c
  2279  002470  0E00               	movlw	0
  2280  002472  22DD               	addwfc	postdec2,f,c
  2281  002474  EF0A  F012         	goto	l3825
  2282  002478                     l973:
  2283  002478  0012               	return		;funcret
  2284  00247A                     __end_of_vfpfcnvrt:
  2285                           	callstack 0
  2286                           
  2287 ;; *************** function _strncmp *****************
  2288 ;; Defined at:
  2289 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strncmp.c"
  2290 ;; Parameters:    Size  Location     Type
  2291 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  2292 ;;		 -> vfpfcnvrt@ct(3), 
  2293 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  2294 ;;		 -> STR_16(3), 
  2295 ;;  n               2    4[COMRAM] unsigned int 
  2296 ;; Auto vars:     Size  Location     Type
  2297 ;;  r               2    9[COMRAM] PTR const unsigned char 
  2298 ;;		 -> STR_16(3), 
  2299 ;;  l               2    7[COMRAM] PTR const unsigned char 
  2300 ;;		 -> vfpfcnvrt@ct(3), 
  2301 ;; Return value:  Size  Location     Type
  2302 ;;                  2    0[COMRAM] int 
  2303 ;; Registers used:
  2304 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2305 ;; Tracked objects:
  2306 ;;		On entry : 0/0
  2307 ;;		On exit  : 0/0
  2308 ;;		Unchanged: 0/0
  2309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2310 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2311 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2312 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2313 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2314 ;;Total ram usage:       11 bytes
  2315 ;; Hardware stack levels used: 1
  2316 ;; This function calls:
  2317 ;;		Nothing
  2318 ;; This function is called by:
  2319 ;;		_vfpfcnvrt
  2320 ;; This function uses a non-reentrant model
  2321 ;;
  2322                           
  2323                           	psect	text8
  2324  003894                     __ptext8:
  2325                           	callstack 0
  2326  003894                     _strncmp:
  2327                           	callstack 26
  2328  003894  C001  F008         	movff	strncmp@_l,strncmp@l
  2329  003898  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  2330  00389C  C003  F00A         	movff	strncmp@_r,strncmp@r
  2331  0038A0  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  2332  0038A4  0605               	decf	strncmp@n^0,f,c
  2333  0038A6  A0D8               	btfss	status,0,c
  2334  0038A8  0606               	decf	(strncmp@n+1)^0,f,c
  2335  0038AA  2805               	incf	strncmp@n^0,w,c
  2336  0038AC  E106               	bnz	u4631
  2337  0038AE  2806               	incf	(strncmp@n+1)^0,w,c
  2338  0038B0  A4D8               	btfss	status,2,c
  2339  0038B2  EF5D  F01C         	goto	u4631
  2340  0038B6  EF5F  F01C         	goto	u4630
  2341  0038BA                     u4631:
  2342  0038BA  EF6C  F01C         	goto	l3743
  2343  0038BE                     u4630:
  2344  0038BE  0E00               	movlw	0
  2345  0038C0  6E02               	movwf	(?_strncmp+1)^0,c
  2346  0038C2  0E00               	movlw	0
  2347  0038C4  6E01               	movwf	?_strncmp^0,c
  2348  0038C6  EFBA  F01C         	goto	l1093
  2349  0038CA                     l3741:
  2350  0038CA  4A08               	infsnz	strncmp@l^0,f,c
  2351  0038CC  2A09               	incf	(strncmp@l+1)^0,f,c
  2352  0038CE  4A0A               	infsnz	strncmp@r^0,f,c
  2353  0038D0  2A0B               	incf	(strncmp@r+1)^0,f,c
  2354  0038D2  0605               	decf	strncmp@n^0,f,c
  2355  0038D4  A0D8               	btfss	status,0,c
  2356  0038D6  0606               	decf	(strncmp@n+1)^0,f,c
  2357  0038D8                     l3743:
  2358  0038D8  C008  FFD9         	movff	strncmp@l,fsr2l
  2359  0038DC  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2360  0038E0  50DF               	movf	indf2,w,c
  2361  0038E2  B4D8               	btfsc	status,2,c
  2362  0038E4  EF76  F01C         	goto	u4641
  2363  0038E8  EF78  F01C         	goto	u4640
  2364  0038EC                     u4641:
  2365  0038EC  EFA7  F01C         	goto	l3751
  2366  0038F0                     u4640:
  2367  0038F0  C00A  FFF6         	movff	strncmp@r,tblptrl
  2368  0038F4  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2369  0038F8                     	if	0	;tblptru may be non-zero
  2370  0038F8                     	endif
  2371  0038F8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2372  0038F8  0E00               	movlw	low (__mediumconst shr (0+16))
  2373  0038FA  6EF8               	movwf	tblptru,c
  2374  0038FC                     	endif
  2375  0038FC  0008               	tblrd		*
  2376  0038FE  50F5               	movf	tablat,w,c
  2377  003900  0900               	iorlw	0
  2378  003902  B4D8               	btfsc	status,2,c
  2379  003904  EF86  F01C         	goto	u4651
  2380  003908  EF88  F01C         	goto	u4650
  2381  00390C                     u4651:
  2382  00390C  EFA7  F01C         	goto	l3751
  2383  003910                     u4650:
  2384  003910  5005               	movf	strncmp@n^0,w,c
  2385  003912  1006               	iorwf	(strncmp@n+1)^0,w,c
  2386  003914  B4D8               	btfsc	status,2,c
  2387  003916  EF8F  F01C         	goto	u4661
  2388  00391A  EF91  F01C         	goto	u4660
  2389  00391E                     u4661:
  2390  00391E  EFA7  F01C         	goto	l3751
  2391  003922                     u4660:
  2392  003922  C008  FFD9         	movff	strncmp@l,fsr2l
  2393  003926  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2394  00392A  50DF               	movf	indf2,w,c
  2395  00392C  6E07               	movwf	??_strncmp^0,c
  2396  00392E  C00A  FFF6         	movff	strncmp@r,tblptrl
  2397  003932  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2398  003936                     	if	0	;tblptru may be non-zero
  2399  003936                     	endif
  2400  003936                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2401  003936  0E00               	movlw	low (__mediumconst shr (0+16))
  2402  003938  6EF8               	movwf	tblptru,c
  2403  00393A                     	endif
  2404  00393A  0008               	tblrd		*
  2405  00393C  50F5               	movf	tablat,w,c
  2406  00393E  1807               	xorwf	??_strncmp^0,w,c
  2407  003940  B4D8               	btfsc	status,2,c
  2408  003942  EFA5  F01C         	goto	u4671
  2409  003946  EFA7  F01C         	goto	u4670
  2410  00394A                     u4671:
  2411  00394A  EF65  F01C         	goto	l3741
  2412  00394E                     u4670:
  2413  00394E                     l3751:
  2414  00394E  C008  FFD9         	movff	strncmp@l,fsr2l
  2415  003952  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2416  003956  50DF               	movf	indf2,w,c
  2417  003958  6E07               	movwf	??_strncmp^0,c
  2418  00395A  C00A  FFF6         	movff	strncmp@r,tblptrl
  2419  00395E  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2420  003962                     	if	0	;tblptru may be non-zero
  2421  003962                     	endif
  2422  003962                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2423  003962  0E00               	movlw	low (__mediumconst shr (0+16))
  2424  003964  6EF8               	movwf	tblptru,c
  2425  003966                     	endif
  2426  003966  0008               	tblrd		*
  2427  003968  50F5               	movf	tablat,w,c
  2428  00396A  5C07               	subwf	??_strncmp^0,w,c
  2429  00396C  6E01               	movwf	?_strncmp^0,c
  2430  00396E  6A02               	clrf	(?_strncmp+1)^0,c
  2431  003970  A0D8               	btfss	status,0,c
  2432  003972  0602               	decf	(?_strncmp+1)^0,f,c
  2433  003974                     l1093:
  2434  003974  0012               	return		;funcret
  2435  003976                     __end_of_strncmp:
  2436                           	callstack 0
  2437                           
  2438 ;; *************** function _efgtoa *****************
  2439 ;; Defined at:
  2440 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2441 ;; Parameters:    Size  Location     Type
  2442 ;;  fp              2   45[COMRAM] PTR struct _IO_FILE
  2443 ;;		 -> sprintf@f(11), 
  2444 ;;  f               4   47[COMRAM] PTR struct _IO_FILE
  2445 ;;  c               1   51[COMRAM] unsigned char 
  2446 ;; Auto vars:     Size  Location     Type
  2447 ;;  u               4   46[BANK0 ] unsigned char 
  2448 ;;  g               4   38[BANK0 ] unsigned char 
  2449 ;;  l               4   32[BANK0 ] unsigned char 
  2450 ;;  h               4   28[BANK0 ] unsigned char 
  2451 ;;  ou              4   14[BANK0 ] unsigned char 
  2452 ;;  n               2   44[BANK0 ] int 
  2453 ;;  e               2   42[BANK0 ] int 
  2454 ;;  i               2   36[BANK0 ] int 
  2455 ;;  w               2   24[BANK0 ] int 
  2456 ;;  p               2   22[BANK0 ] int 
  2457 ;;  sign            2   20[BANK0 ] int 
  2458 ;;  d               2   18[BANK0 ] int 
  2459 ;;  m               2   12[BANK0 ] int 
  2460 ;;  ne              2   10[BANK0 ] int 
  2461 ;;  pp              2    8[BANK0 ] int 
  2462 ;;  t               2    6[BANK0 ] int 
  2463 ;;  mode            1   27[BANK0 ] unsigned char 
  2464 ;;  nmode           1   26[BANK0 ] unsigned char 
  2465 ;; Return value:  Size  Location     Type
  2466 ;;                  2   45[COMRAM] int 
  2467 ;; Registers used:
  2468 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2469 ;; Tracked objects:
  2470 ;;		On entry : 0/0
  2471 ;;		On exit  : 0/0
  2472 ;;		Unchanged: 0/0
  2473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2474 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2475 ;;      Locals:         0      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2476 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2477 ;;      Totals:        12      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2478 ;;Total ram usage:       62 bytes
  2479 ;; Hardware stack levels used: 1
  2480 ;; Hardware stack levels required when called: 4
  2481 ;; This function calls:
  2482 ;;		___awdiv
  2483 ;;		___awmod
  2484 ;;		___fladd
  2485 ;;		___fldiv
  2486 ;;		___fleq
  2487 ;;		___flge
  2488 ;;		___flmul
  2489 ;;		___flneg
  2490 ;;		___flsub
  2491 ;;		___fltol
  2492 ;;		___fpclassifyf
  2493 ;;		_floorf
  2494 ;;		_isupper
  2495 ;;		_pad
  2496 ;;		_strcpy
  2497 ;;		_tolower
  2498 ;; This function is called by:
  2499 ;;		_vfpfcnvrt
  2500 ;; This function uses a non-reentrant model
  2501 ;;
  2502                           
  2503                           	psect	text9
  2504  000F4A                     __ptext9:
  2505                           	callstack 0
  2506  000F4A                     _efgtoa:
  2507                           	callstack 22
  2508  000F4A                     
  2509                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.36\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  2510  000F4A  0E00               	movlw	0
  2511  000F4C  0100               	movlb	0	; () banked
  2512  000F4E  6F75               	movwf	(efgtoa@sign+1)& (0+255),b
  2513  000F50  0E00               	movlw	0
  2514  000F52  6F74               	movwf	efgtoa@sign& (0+255),b
  2515  000F54                     
  2516                           ; BSR set to: 0
  2517                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 340:     g = f;
  2518  000F54  C030  F086         	movff	efgtoa@f,efgtoa@g
  2519  000F58  C031  F087         	movff	efgtoa@f+1,efgtoa@g+1
  2520  000F5C  C032  F088         	movff	efgtoa@f+2,efgtoa@g+2
  2521  000F60  C033  F089         	movff	efgtoa@f+3,efgtoa@g+3
  2522  000F64                     
  2523                           ; BSR set to: 0
  2524                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  2525  000F64  BF89               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2526  000F66  EFB9  F007         	goto	u4110
  2527  000F6A  EFB7  F007         	goto	u4111
  2528  000F6E                     u4111:
  2529  000F6E  EFCF  F007         	goto	l3407
  2530  000F72                     u4110:
  2531  000F72                     
  2532                           ; BSR set to: 0
  2533                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  2534  000F72  0E00               	movlw	0
  2535  000F74  6F75               	movwf	(efgtoa@sign+1)& (0+255),b
  2536  000F76  0E01               	movlw	1
  2537  000F78  6F74               	movwf	efgtoa@sign& (0+255),b
  2538  000F7A                     
  2539                           ; BSR set to: 0
  2540                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  2541  000F7A  C086  F001         	movff	efgtoa@g,___flneg@f1
  2542  000F7E  C087  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2543  000F82  C088  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2544  000F86  C089  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2545  000F8A  EC79  F020         	call	___flneg	;wreg free
  2546  000F8E  C001  F086         	movff	?___flneg,efgtoa@g
  2547  000F92  C002  F087         	movff	?___flneg+1,efgtoa@g+1
  2548  000F96  C003  F088         	movff	?___flneg+2,efgtoa@g+2
  2549  000F9A  C004  F089         	movff	?___flneg+3,efgtoa@g+3
  2550  000F9E                     l3407:
  2551                           
  2552                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  2553  000F9E  0E00               	movlw	0
  2554  000FA0  0100               	movlb	0	; () banked
  2555  000FA2  6F8D               	movwf	(efgtoa@n+1)& (0+255),b
  2556  000FA4  0E00               	movlw	0
  2557  000FA6  6F8C               	movwf	efgtoa@n& (0+255),b
  2558  000FA8                     
  2559                           ; BSR set to: 0
  2560                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  2561  000FA8  C0C8  F078         	movff	_width,efgtoa@w
  2562  000FAC  C0C9  F079         	movff	_width+1,efgtoa@w+1
  2563  000FB0                     
  2564                           ; BSR set to: 0
  2565                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  2566  000FB0  5174               	movf	efgtoa@sign& (0+255),w,b
  2567  000FB2  1175               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2568  000FB4  A4D8               	btfss	status,2,c
  2569  000FB6  EFDF  F007         	goto	u4121
  2570  000FBA  EFE1  F007         	goto	u4120
  2571  000FBE                     u4121:
  2572  000FBE  EFE8  F007         	goto	l3415
  2573  000FC2                     u4120:
  2574  000FC2                     
  2575                           ; BSR set to: 0
  2576  000FC2  A45D               	btfss	_flags^0,2,c
  2577  000FC4  EFE6  F007         	goto	u4131
  2578  000FC8  EFE8  F007         	goto	u4130
  2579  000FCC                     u4131:
  2580  000FCC  EF02  F008         	goto	l3427
  2581  000FD0                     u4130:
  2582  000FD0                     l3415:
  2583                           
  2584                           ; BSR set to: 0
  2585                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  2586  000FD0  5174               	movf	efgtoa@sign& (0+255),w,b
  2587  000FD2  1175               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2588  000FD4  A4D8               	btfss	status,2,c
  2589  000FD6  EFEF  F007         	goto	u4141
  2590  000FDA  EFF1  F007         	goto	u4140
  2591  000FDE                     u4141:
  2592  000FDE  EFF7  F007         	goto	l3419
  2593  000FE2                     u4140:
  2594  000FE2                     
  2595                           ; BSR set to: 0
  2596  000FE2  0E00               	movlw	0
  2597  000FE4  6F61               	movwf	(_efgtoa$1432+1)& (0+255),b
  2598  000FE6  0E2B               	movlw	43
  2599  000FE8  6F60               	movwf	_efgtoa$1432& (0+255),b
  2600  000FEA  EFFB  F007         	goto	l3421
  2601  000FEE                     l3419:
  2602                           
  2603                           ; BSR set to: 0
  2604  000FEE  0E00               	movlw	0
  2605  000FF0  6F61               	movwf	(_efgtoa$1432+1)& (0+255),b
  2606  000FF2  0E2D               	movlw	45
  2607  000FF4  6F60               	movwf	_efgtoa$1432& (0+255),b
  2608  000FF6                     l3421:
  2609                           
  2610                           ; BSR set to: 0
  2611  000FF6  C060  F100         	movff	_efgtoa$1432,_dbuf
  2612  000FFA                     
  2613                           ; BSR set to: 0
  2614                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 351:         ++n;
  2615  000FFA  4B8C               	infsnz	efgtoa@n& (0+255),f,b
  2616  000FFC  2B8D               	incf	(efgtoa@n+1)& (0+255),f,b
  2617  000FFE                     
  2618                           ; BSR set to: 0
  2619                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 352:         --w;
  2620  000FFE  0778               	decf	efgtoa@w& (0+255),f,b
  2621  001000  A0D8               	btfss	status,0,c
  2622  001002  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  2623  001004                     l3427:
  2624                           
  2625                           ; BSR set to: 0
  2626                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 356:     if (( __
      +                          fpclassifyf(g) == 1 )) {
  2627  001004  C086  F001         	movff	efgtoa@g,___fpclassifyf@x
  2628  001008  C087  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2629  00100C  C088  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2630  001010  C089  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2631  001014  ECCB  F01B         	call	___fpclassifyf	;wreg free
  2632  001018  0401               	decf	?___fpclassifyf^0,w,c
  2633  00101A  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2634  00101C  A4D8               	btfss	status,2,c
  2635  00101E  EF13  F008         	goto	u4151
  2636  001022  EF15  F008         	goto	u4150
  2637  001026                     u4151:
  2638  001026  EF60  F008         	goto	l3445
  2639  00102A                     u4150:
  2640  00102A  0EBF               	movlw	191
  2641  00102C  6E35               	movwf	??_efgtoa^0,c
  2642  00102E  0EFF               	movlw	255
  2643  001030  6E36               	movwf	(??_efgtoa+1)^0,c
  2644  001032  5034               	movf	efgtoa@c^0,w,c
  2645  001034  6E37               	movwf	(??_efgtoa+2)^0,c
  2646  001036  6A38               	clrf	(??_efgtoa+3)^0,c
  2647  001038  5035               	movf	??_efgtoa^0,w,c
  2648  00103A  2637               	addwf	(??_efgtoa+2)^0,f,c
  2649  00103C  5036               	movf	(??_efgtoa+1)^0,w,c
  2650  00103E  2238               	addwfc	(??_efgtoa+3)^0,f,c
  2651  001040  5038               	movf	(??_efgtoa+3)^0,w,c
  2652  001042  E107               	bnz	u4161
  2653  001044  0E1A               	movlw	26
  2654  001046  5C37               	subwf	(??_efgtoa+2)^0,w,c
  2655  001048  B0D8               	btfsc	status,0,c
  2656  00104A  EF29  F008         	goto	u4161
  2657  00104E  EF2B  F008         	goto	u4160
  2658  001052                     u4161:
  2659  001052  EF3A  F008         	goto	l3437
  2660  001056                     u4160:
  2661  001056                     
  2662                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  2663  001056  0E00               	movlw	low _dbuf
  2664  001058  0100               	movlb	0	; () banked
  2665  00105A  258C               	addwf	efgtoa@n& (0+255),w,b
  2666  00105C  6E01               	movwf	strcpy@dest^0,c
  2667  00105E  0E01               	movlw	high _dbuf
  2668  001060  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2669  001062  6E02               	movwf	(strcpy@dest+1)^0,c
  2670  001064  0E32               	movlw	low STR_6
  2671  001066  6E03               	movwf	strcpy@src^0,c
  2672  001068  0E0F               	movlw	high STR_6
  2673  00106A  6E04               	movwf	(strcpy@src+1)^0,c
  2674  00106C  EC4C  F01F         	call	_strcpy	;wreg free
  2675                           
  2676                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  2677  001070  EF47  F008         	goto	l3439
  2678  001074                     l3437:
  2679                           
  2680                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  2681  001074  0E00               	movlw	low _dbuf
  2682  001076  0100               	movlb	0	; () banked
  2683  001078  258C               	addwf	efgtoa@n& (0+255),w,b
  2684  00107A  6E01               	movwf	strcpy@dest^0,c
  2685  00107C  0E01               	movlw	high _dbuf
  2686  00107E  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2687  001080  6E02               	movwf	(strcpy@dest+1)^0,c
  2688  001082  0E3A               	movlw	low STR_7
  2689  001084  6E03               	movwf	strcpy@src^0,c
  2690  001086  0E0F               	movlw	high STR_7
  2691  001088  6E04               	movwf	(strcpy@src+1)^0,c
  2692  00108A  EC4C  F01F         	call	_strcpy	;wreg free
  2693  00108E                     l3439:
  2694                           
  2695                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  2696  00108E  0100               	movlb	0	; () banked
  2697  001090  0EFD               	movlw	253
  2698  001092  2778               	addwf	efgtoa@w& (0+255),f,b
  2699  001094  0EFF               	movlw	255
  2700  001096  2379               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2701  001098                     l3441:
  2702                           
  2703                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  2704  001098  C02E  F011         	movff	efgtoa@fp,pad@fp
  2705  00109C  C02F  F012         	movff	efgtoa@fp+1,pad@fp+1
  2706  0010A0  0E00               	movlw	low _dbuf
  2707  0010A2  6E13               	movwf	pad@buf^0,c
  2708  0010A4  0E01               	movlw	high _dbuf
  2709  0010A6  6E14               	movwf	(pad@buf+1)^0,c
  2710  0010A8  C078  F015         	movff	efgtoa@w,pad@p
  2711  0010AC  C079  F016         	movff	efgtoa@w+1,pad@p+1
  2712  0010B0  EC82  F01D         	call	_pad	;wreg free
  2713  0010B4  C011  F02E         	movff	?_pad,?_efgtoa
  2714  0010B8  C012  F02F         	movff	?_pad+1,?_efgtoa+1
  2715  0010BC  EFAC  F00D         	goto	l887
  2716  0010C0                     l3445:
  2717                           
  2718                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 365:     if (( __
      +                          fpclassifyf(g) == 0 )) {
  2719  0010C0  C086  F001         	movff	efgtoa@g,___fpclassifyf@x
  2720  0010C4  C087  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2721  0010C8  C088  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2722  0010CC  C089  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2723  0010D0  ECCB  F01B         	call	___fpclassifyf	;wreg free
  2724  0010D4  5001               	movf	?___fpclassifyf^0,w,c
  2725  0010D6  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2726  0010D8  A4D8               	btfss	status,2,c
  2727  0010DA  EF71  F008         	goto	u4171
  2728  0010DE  EF73  F008         	goto	u4170
  2729  0010E2                     u4171:
  2730  0010E2  EFA7  F008         	goto	l3463
  2731  0010E6                     u4170:
  2732  0010E6  0EBF               	movlw	191
  2733  0010E8  6E35               	movwf	??_efgtoa^0,c
  2734  0010EA  0EFF               	movlw	255
  2735  0010EC  6E36               	movwf	(??_efgtoa+1)^0,c
  2736  0010EE  5034               	movf	efgtoa@c^0,w,c
  2737  0010F0  6E37               	movwf	(??_efgtoa+2)^0,c
  2738  0010F2  6A38               	clrf	(??_efgtoa+3)^0,c
  2739  0010F4  5035               	movf	??_efgtoa^0,w,c
  2740  0010F6  2637               	addwf	(??_efgtoa+2)^0,f,c
  2741  0010F8  5036               	movf	(??_efgtoa+1)^0,w,c
  2742  0010FA  2238               	addwfc	(??_efgtoa+3)^0,f,c
  2743  0010FC  5038               	movf	(??_efgtoa+3)^0,w,c
  2744  0010FE  E107               	bnz	u4181
  2745  001100  0E1A               	movlw	26
  2746  001102  5C37               	subwf	(??_efgtoa+2)^0,w,c
  2747  001104  B0D8               	btfsc	status,0,c
  2748  001106  EF87  F008         	goto	u4181
  2749  00110A  EF89  F008         	goto	u4180
  2750  00110E                     u4181:
  2751  00110E  EF98  F008         	goto	l3455
  2752  001112                     u4180:
  2753  001112                     
  2754                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  2755  001112  0E00               	movlw	low _dbuf
  2756  001114  0100               	movlb	0	; () banked
  2757  001116  258C               	addwf	efgtoa@n& (0+255),w,b
  2758  001118  6E01               	movwf	strcpy@dest^0,c
  2759  00111A  0E01               	movlw	high _dbuf
  2760  00111C  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2761  00111E  6E02               	movwf	(strcpy@dest+1)^0,c
  2762  001120  0E36               	movlw	low STR_10
  2763  001122  6E03               	movwf	strcpy@src^0,c
  2764  001124  0E0F               	movlw	high STR_10
  2765  001126  6E04               	movwf	(strcpy@src+1)^0,c
  2766  001128  EC4C  F01F         	call	_strcpy	;wreg free
  2767                           
  2768                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  2769  00112C  EF47  F008         	goto	l3439
  2770  001130                     l3455:
  2771                           
  2772                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  2773  001130  0E00               	movlw	low _dbuf
  2774  001132  0100               	movlb	0	; () banked
  2775  001134  258C               	addwf	efgtoa@n& (0+255),w,b
  2776  001136  6E01               	movwf	strcpy@dest^0,c
  2777  001138  0E01               	movlw	high _dbuf
  2778  00113A  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2779  00113C  6E02               	movwf	(strcpy@dest+1)^0,c
  2780  00113E  0E3E               	movlw	low STR_11
  2781  001140  6E03               	movwf	strcpy@src^0,c
  2782  001142  0E0F               	movlw	high STR_11
  2783  001144  6E04               	movwf	(strcpy@src+1)^0,c
  2784  001146  EC4C  F01F         	call	_strcpy	;wreg free
  2785  00114A  EF47  F008         	goto	l3439
  2786  00114E                     l3463:
  2787                           
  2788                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  2789  00114E  0E00               	movlw	0
  2790  001150  0100               	movlb	0	; () banked
  2791  001152  6F8E               	movwf	efgtoa@u& (0+255),b
  2792  001154  0E00               	movlw	0
  2793  001156  6F8F               	movwf	(efgtoa@u+1)& (0+255),b
  2794  001158  0E80               	movlw	128
  2795  00115A  6F90               	movwf	(efgtoa@u+2)& (0+255),b
  2796  00115C  0E3F               	movlw	63
  2797  00115E  6F91               	movwf	(efgtoa@u+3)& (0+255),b
  2798                           
  2799                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  2800  001160  0E00               	movlw	0
  2801  001162  6F8B               	movwf	(efgtoa@e+1)& (0+255),b
  2802  001164  0E00               	movlw	0
  2803  001166  6F8A               	movwf	efgtoa@e& (0+255),b
  2804  001168                     
  2805                           ; BSR set to: 0
  2806                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  2807  001168  C086  F001         	movff	efgtoa@g,___fleq@ff1
  2808  00116C  C087  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  2809  001170  C088  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  2810  001174  C089  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  2811  001178  0E00               	movlw	0
  2812  00117A  6E05               	movwf	___fleq@ff2^0,c
  2813  00117C  0E00               	movlw	0
  2814  00117E  6E06               	movwf	(___fleq@ff2+1)^0,c
  2815  001180  0E00               	movlw	0
  2816  001182  6E07               	movwf	(___fleq@ff2+2)^0,c
  2817  001184  0E00               	movlw	0
  2818  001186  6E08               	movwf	(___fleq@ff2+3)^0,c
  2819  001188  EC3B  F01E         	call	___fleq	;wreg free
  2820  00118C  B0D8               	btfsc	status,0,c
  2821  00118E  EFCB  F008         	goto	u4191
  2822  001192  EFCD  F008         	goto	u4190
  2823  001196                     u4191:
  2824  001196  EF50  F009         	goto	l3481
  2825  00119A                     u4190:
  2826  00119A  EFEC  F008         	goto	l3473
  2827  00119E                     l3469:
  2828                           
  2829                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  2830  00119E  C08E  F001         	movff	efgtoa@u,___flmul@b
  2831  0011A2  C08F  F002         	movff	efgtoa@u+1,___flmul@b+1
  2832  0011A6  C090  F003         	movff	efgtoa@u+2,___flmul@b+2
  2833  0011AA  C091  F004         	movff	efgtoa@u+3,___flmul@b+3
  2834  0011AE  0E00               	movlw	0
  2835  0011B0  6E05               	movwf	___flmul@a^0,c
  2836  0011B2  0E00               	movlw	0
  2837  0011B4  6E06               	movwf	(___flmul@a+1)^0,c
  2838  0011B6  0E20               	movlw	32
  2839  0011B8  6E07               	movwf	(___flmul@a+2)^0,c
  2840  0011BA  0E41               	movlw	65
  2841  0011BC  6E08               	movwf	(___flmul@a+3)^0,c
  2842  0011BE  EC3D  F012         	call	___flmul	;wreg free
  2843  0011C2  C001  F08E         	movff	?___flmul,efgtoa@u
  2844  0011C6  C002  F08F         	movff	?___flmul+1,efgtoa@u+1
  2845  0011CA  C003  F090         	movff	?___flmul+2,efgtoa@u+2
  2846  0011CE  C004  F091         	movff	?___flmul+3,efgtoa@u+3
  2847  0011D2                     
  2848                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  2849  0011D2  0100               	movlb	0	; () banked
  2850  0011D4  4B8A               	infsnz	efgtoa@e& (0+255),f,b
  2851  0011D6  2B8B               	incf	(efgtoa@e+1)& (0+255),f,b
  2852  0011D8                     l3473:
  2853                           
  2854                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  2855  0011D8  C086  F01A         	movff	efgtoa@g,___flge@ff1
  2856  0011DC  C087  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  2857  0011E0  C088  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  2858  0011E4  C089  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  2859  0011E8  0E00               	movlw	0
  2860  0011EA  6E05               	movwf	___flmul@a^0,c
  2861  0011EC  0E00               	movlw	0
  2862  0011EE  6E06               	movwf	(___flmul@a+1)^0,c
  2863  0011F0  0E20               	movlw	32
  2864  0011F2  6E07               	movwf	(___flmul@a+2)^0,c
  2865  0011F4  0E41               	movlw	65
  2866  0011F6  6E08               	movwf	(___flmul@a+3)^0,c
  2867  0011F8  C08E  F001         	movff	efgtoa@u,___flmul@b
  2868  0011FC  C08F  F002         	movff	efgtoa@u+1,___flmul@b+1
  2869  001200  C090  F003         	movff	efgtoa@u+2,___flmul@b+2
  2870  001204  C091  F004         	movff	efgtoa@u+3,___flmul@b+3
  2871  001208  EC3D  F012         	call	___flmul	;wreg free
  2872  00120C  C001  F01E         	movff	?___flmul,___flge@ff2
  2873  001210  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  2874  001214  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  2875  001218  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  2876  00121C  ECCA  F01A         	call	___flge	;wreg free
  2877  001220  B0D8               	btfsc	status,0,c
  2878  001222  EF15  F009         	goto	u4201
  2879  001226  EF17  F009         	goto	u4200
  2880  00122A                     u4201:
  2881  00122A  EFCF  F008         	goto	l3469
  2882  00122E                     u4200:
  2883  00122E  EF37  F009         	goto	l3479
  2884  001232                     l3475:
  2885                           
  2886                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  2887  001232  C08E  F001         	movff	efgtoa@u,___fldiv@b
  2888  001236  C08F  F002         	movff	efgtoa@u+1,___fldiv@b+1
  2889  00123A  C090  F003         	movff	efgtoa@u+2,___fldiv@b+2
  2890  00123E  C091  F004         	movff	efgtoa@u+3,___fldiv@b+3
  2891  001242  0E00               	movlw	0
  2892  001244  6E05               	movwf	___fldiv@a^0,c
  2893  001246  0E00               	movlw	0
  2894  001248  6E06               	movwf	(___fldiv@a+1)^0,c
  2895  00124A  0E20               	movlw	32
  2896  00124C  6E07               	movwf	(___fldiv@a+2)^0,c
  2897  00124E  0E41               	movlw	65
  2898  001250  6E08               	movwf	(___fldiv@a+3)^0,c
  2899  001252  EC52  F014         	call	___fldiv	;wreg free
  2900  001256  C001  F08E         	movff	?___fldiv,efgtoa@u
  2901  00125A  C002  F08F         	movff	?___fldiv+1,efgtoa@u+1
  2902  00125E  C003  F090         	movff	?___fldiv+2,efgtoa@u+2
  2903  001262  C004  F091         	movff	?___fldiv+3,efgtoa@u+3
  2904  001266                     
  2905                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  2906  001266  0100               	movlb	0	; () banked
  2907  001268  078A               	decf	efgtoa@e& (0+255),f,b
  2908  00126A  A0D8               	btfss	status,0,c
  2909  00126C  078B               	decf	(efgtoa@e+1)& (0+255),f,b
  2910  00126E                     l3479:
  2911                           
  2912                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  2913  00126E  C086  F01A         	movff	efgtoa@g,___flge@ff1
  2914  001272  C087  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  2915  001276  C088  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  2916  00127A  C089  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  2917  00127E  C08E  F01E         	movff	efgtoa@u,___flge@ff2
  2918  001282  C08F  F01F         	movff	efgtoa@u+1,___flge@ff2+1
  2919  001286  C090  F020         	movff	efgtoa@u+2,___flge@ff2+2
  2920  00128A  C091  F021         	movff	efgtoa@u+3,___flge@ff2+3
  2921  00128E  ECCA  F01A         	call	___flge	;wreg free
  2922  001292  A0D8               	btfss	status,0,c
  2923  001294  EF4E  F009         	goto	u4211
  2924  001298  EF50  F009         	goto	u4210
  2925  00129C                     u4211:
  2926  00129C  EF19  F009         	goto	l3475
  2927  0012A0                     u4210:
  2928  0012A0                     l3481:
  2929                           
  2930                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  2931  0012A0  C034  F007         	movff	efgtoa@c,tolower@c
  2932  0012A4  6A08               	clrf	(tolower@c+1)^0,c
  2933  0012A6  ECF5  F01F         	call	_tolower	;wreg free
  2934  0012AA  5007               	movf	?_tolower^0,w,c
  2935  0012AC  0100               	movlb	0	; () banked
  2936  0012AE  6F7B               	movwf	efgtoa@mode& (0+255),b
  2937  0012B0                     
  2938                           ; BSR set to: 0
  2939                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  2940  0012B0  C07B  F07A         	movff	efgtoa@mode,efgtoa@nmode
  2941  0012B4                     
  2942                           ; BSR set to: 0
  2943                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  2944  0012B4  0E67               	movlw	103
  2945  0012B6  197B               	xorwf	efgtoa@mode& (0+255),w,b
  2946  0012B8  A4D8               	btfss	status,2,c
  2947  0012BA  EF61  F009         	goto	u4221
  2948  0012BE  EF63  F009         	goto	u4220
  2949  0012C2                     u4221:
  2950  0012C2  EF89  F009         	goto	l3495
  2951  0012C6                     u4220:
  2952  0012C6                     
  2953                           ; BSR set to: 0
  2954                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  2955  0012C6  51CA               	movf	_prec& (0+255),w,b
  2956  0012C8  11CB               	iorwf	(_prec+1)& (0+255),w,b
  2957  0012CA  A4D8               	btfss	status,2,c
  2958  0012CC  EF6A  F009         	goto	u4231
  2959  0012D0  EF6C  F009         	goto	u4230
  2960  0012D4                     u4231:
  2961  0012D4  EF70  F009         	goto	l3491
  2962  0012D8                     u4230:
  2963  0012D8                     
  2964                           ; BSR set to: 0
  2965                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  2966  0012D8  0E00               	movlw	0
  2967  0012DA  6FCB               	movwf	(_prec+1)& (0+255),b
  2968  0012DC  0E01               	movlw	1
  2969  0012DE  6FCA               	movwf	_prec& (0+255),b
  2970  0012E0                     l3491:
  2971                           
  2972                           ; BSR set to: 0
  2973                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  2974  0012E0  BFCB               	btfsc	(_prec+1)& (0+255),7,b
  2975  0012E2  EF7D  F009         	goto	u4240
  2976  0012E6  51CB               	movf	(_prec+1)& (0+255),w,b
  2977  0012E8  E106               	bnz	u4241
  2978  0012EA  05CA               	decf	_prec& (0+255),w,b
  2979  0012EC  B0D8               	btfsc	status,0,c
  2980  0012EE  EF7B  F009         	goto	u4241
  2981  0012F2  EF7D  F009         	goto	u4240
  2982  0012F6                     u4241:
  2983  0012F6  EF83  F009         	goto	l903
  2984  0012FA                     u4240:
  2985  0012FA                     l3493:
  2986                           
  2987                           ; BSR set to: 0
  2988  0012FA  0E00               	movlw	0
  2989  0012FC  6F77               	movwf	(efgtoa@p+1)& (0+255),b
  2990  0012FE  0E06               	movlw	6
  2991  001300  6F76               	movwf	efgtoa@p& (0+255),b
  2992  001302  EF92  F009         	goto	l3501
  2993  001306                     l903:
  2994                           
  2995                           ; BSR set to: 0
  2996  001306  C0CA  F076         	movff	_prec,efgtoa@p
  2997  00130A  C0CB  F077         	movff	_prec+1,efgtoa@p+1
  2998  00130E  EF92  F009         	goto	l3501
  2999  001312                     l3495:
  3000                           
  3001                           ; BSR set to: 0
  3002                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  3003  001312  BFCB               	btfsc	(_prec+1)& (0+255),7,b
  3004  001314  EF8E  F009         	goto	u4251
  3005  001318  EF90  F009         	goto	u4250
  3006  00131C                     u4251:
  3007  00131C  EF7D  F009         	goto	l3493
  3008  001320                     u4250:
  3009  001320  EF83  F009         	goto	l903
  3010  001324                     l3501:
  3011                           
  3012                           ; BSR set to: 0
  3013                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  3014  001324  0E67               	movlw	103
  3015  001326  197B               	xorwf	efgtoa@mode& (0+255),w,b
  3016  001328  A4D8               	btfss	status,2,c
  3017  00132A  EF99  F009         	goto	u4261
  3018  00132E  EF9B  F009         	goto	u4260
  3019  001332                     u4261:
  3020  001332  EFCA  F009         	goto	l3511
  3021  001336                     u4260:
  3022  001336                     
  3023                           ; BSR set to: 0
  3024                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  3025  001336  AF8B               	btfss	(efgtoa@e+1)& (0+255),7,b
  3026  001338  EFA9  F009         	goto	u4270
  3027  00133C  0EFC               	movlw	252
  3028  00133E  5D8A               	subwf	efgtoa@e& (0+255),w,b
  3029  001340  0EFF               	movlw	255
  3030  001342  598B               	subwfb	(efgtoa@e+1)& (0+255),w,b
  3031  001344  A0D8               	btfss	status,0,c
  3032  001346  EFA7  F009         	goto	u4271
  3033  00134A  EFA9  F009         	goto	u4270
  3034  00134E                     u4271:
  3035  00134E  EFC8  F009         	goto	l3509
  3036  001352                     u4270:
  3037  001352                     
  3038                           ; BSR set to: 0
  3039  001352  0EFF               	movlw	255
  3040  001354  6E35               	movwf	??_efgtoa^0,c
  3041  001356  0EFF               	movlw	255
  3042  001358  6E36               	movwf	(??_efgtoa+1)^0,c
  3043  00135A  C076  F037         	movff	efgtoa@p,??_efgtoa+2
  3044  00135E  C077  F038         	movff	efgtoa@p+1,??_efgtoa+3
  3045  001362  5035               	movf	??_efgtoa^0,w,c
  3046  001364  2637               	addwf	(??_efgtoa+2)^0,f,c
  3047  001366  5036               	movf	(??_efgtoa+1)^0,w,c
  3048  001368  2238               	addwfc	(??_efgtoa+3)^0,f,c
  3049  00136A  518A               	movf	efgtoa@e& (0+255),w,b
  3050  00136C  5C37               	subwf	(??_efgtoa+2)^0,w,c
  3051  00136E  5038               	movf	(??_efgtoa+3)^0,w,c
  3052  001370  0A80               	xorlw	128
  3053  001372  6E39               	movwf	(??_efgtoa+4)^0,c
  3054  001374  518B               	movf	(efgtoa@e+1)& (0+255),w,b
  3055  001376  0A80               	xorlw	128
  3056  001378  5839               	subwfb	(??_efgtoa+4)^0,w,c
  3057  00137A  A0D8               	btfss	status,0,c
  3058  00137C  EFC2  F009         	goto	u4281
  3059  001380  EFC4  F009         	goto	u4280
  3060  001384                     u4281:
  3061  001384  EFC8  F009         	goto	l3509
  3062  001388                     u4280:
  3063  001388                     
  3064                           ; BSR set to: 0
  3065                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  3066  001388  0E66               	movlw	102
  3067  00138A  6F7A               	movwf	efgtoa@nmode& (0+255),b
  3068                           
  3069                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  3070  00138C  EFCA  F009         	goto	l3511
  3071  001390                     l3509:
  3072                           
  3073                           ; BSR set to: 0
  3074                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  3075  001390  0E65               	movlw	101
  3076  001392  6F7A               	movwf	efgtoa@nmode& (0+255),b
  3077  001394                     l3511:
  3078                           
  3079                           ; BSR set to: 0
  3080                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 411:     m = p;
  3081  001394  C076  F06C         	movff	efgtoa@p,efgtoa@m
  3082  001398  C077  F06D         	movff	efgtoa@p+1,efgtoa@m+1
  3083  00139C                     
  3084                           ; BSR set to: 0
  3085                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  3086  00139C  0E67               	movlw	103
  3087  00139E  197B               	xorwf	efgtoa@mode& (0+255),w,b
  3088  0013A0  A4D8               	btfss	status,2,c
  3089  0013A2  EFD5  F009         	goto	u4291
  3090  0013A6  EFD7  F009         	goto	u4290
  3091  0013AA                     u4291:
  3092  0013AA  EFE7  F009         	goto	l3519
  3093  0013AE                     u4290:
  3094  0013AE                     
  3095                           ; BSR set to: 0
  3096  0013AE  0E66               	movlw	102
  3097  0013B0  197A               	xorwf	efgtoa@nmode& (0+255),w,b
  3098  0013B2  A4D8               	btfss	status,2,c
  3099  0013B4  EFDE  F009         	goto	u4301
  3100  0013B8  EFE0  F009         	goto	u4300
  3101  0013BC                     u4301:
  3102  0013BC  EFE9  F009         	goto	l3521
  3103  0013C0                     u4300:
  3104  0013C0                     
  3105                           ; BSR set to: 0
  3106  0013C0  BF8B               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3107  0013C2  EFE7  F009         	goto	u4310
  3108  0013C6  EFE5  F009         	goto	u4311
  3109  0013CA                     u4311:
  3110  0013CA  EFE9  F009         	goto	l3521
  3111  0013CE                     u4310:
  3112  0013CE                     l3519:
  3113                           
  3114                           ; BSR set to: 0
  3115                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 413:         ++m;
  3116  0013CE  4B6C               	infsnz	efgtoa@m& (0+255),f,b
  3117  0013D0  2B6D               	incf	(efgtoa@m+1)& (0+255),f,b
  3118  0013D2                     l3521:
  3119                           
  3120                           ; BSR set to: 0
  3121                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  3122  0013D2  0E66               	movlw	102
  3123  0013D4  197A               	xorwf	efgtoa@nmode& (0+255),w,b
  3124  0013D6  A4D8               	btfss	status,2,c
  3125  0013D8  EFF0  F009         	goto	u4321
  3126  0013DC  EFF2  F009         	goto	u4320
  3127  0013E0                     u4321:
  3128  0013E0  EF12  F00A         	goto	l3531
  3129  0013E4                     u4320:
  3130  0013E4                     
  3131                           ; BSR set to: 0
  3132                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  3133  0013E4  BF8B               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3134  0013E6  EFF9  F009         	goto	u4330
  3135  0013EA  EFF7  F009         	goto	u4331
  3136  0013EE                     u4331:
  3137  0013EE  EF05  F00A         	goto	l3527
  3138  0013F2                     u4330:
  3139  0013F2                     
  3140                           ; BSR set to: 0
  3141                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  3142  0013F2  0E00               	movlw	0
  3143  0013F4  6F8E               	movwf	efgtoa@u& (0+255),b
  3144  0013F6  0E00               	movlw	0
  3145  0013F8  6F8F               	movwf	(efgtoa@u+1)& (0+255),b
  3146  0013FA  0E80               	movlw	128
  3147  0013FC  6F90               	movwf	(efgtoa@u+2)& (0+255),b
  3148  0013FE  0E3F               	movlw	63
  3149  001400  6F91               	movwf	(efgtoa@u+3)& (0+255),b
  3150                           
  3151                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  3152  001402  0E00               	movlw	0
  3153  001404  6F8B               	movwf	(efgtoa@e+1)& (0+255),b
  3154  001406  0E00               	movlw	0
  3155  001408  6F8A               	movwf	efgtoa@e& (0+255),b
  3156  00140A                     l3527:
  3157                           
  3158                           ; BSR set to: 0
  3159                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  3160  00140A  0E67               	movlw	103
  3161  00140C  197B               	xorwf	efgtoa@mode& (0+255),w,b
  3162  00140E  B4D8               	btfsc	status,2,c
  3163  001410  EF0C  F00A         	goto	u4341
  3164  001414  EF0E  F00A         	goto	u4340
  3165  001418                     u4341:
  3166  001418  EF12  F00A         	goto	l3531
  3167  00141C                     u4340:
  3168  00141C                     
  3169                           ; BSR set to: 0
  3170                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  3171  00141C  518A               	movf	efgtoa@e& (0+255),w,b
  3172  00141E  276C               	addwf	efgtoa@m& (0+255),f,b
  3173  001420  518B               	movf	(efgtoa@e+1)& (0+255),w,b
  3174  001422  236D               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3175  001424                     l3531:
  3176                           
  3177                           ; BSR set to: 0
  3178                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  3179  001424  0E00               	movlw	0
  3180  001426  6F85               	movwf	(efgtoa@i+1)& (0+255),b
  3181  001428  0E00               	movlw	0
  3182  00142A  6F84               	movwf	efgtoa@i& (0+255),b
  3183  00142C                     
  3184                           ; BSR set to: 0
  3185                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 429:     h = g;
  3186  00142C  C086  F07C         	movff	efgtoa@g,efgtoa@h
  3187  001430  C087  F07D         	movff	efgtoa@g+1,efgtoa@h+1
  3188  001434  C088  F07E         	movff	efgtoa@g+2,efgtoa@h+2
  3189  001438  C089  F07F         	movff	efgtoa@g+3,efgtoa@h+3
  3190  00143C                     
  3191                           ; BSR set to: 0
  3192                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  3193  00143C  C08E  F06E         	movff	efgtoa@u,efgtoa@ou
  3194  001440  C08F  F06F         	movff	efgtoa@u+1,efgtoa@ou+1
  3195  001444  C090  F070         	movff	efgtoa@u+2,efgtoa@ou+2
  3196  001448  C091  F071         	movff	efgtoa@u+3,efgtoa@ou+3
  3197                           
  3198                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3199  00144C  EFA3  F00A         	goto	l3545
  3200  001450                     l3537:
  3201                           
  3202                           ; BSR set to: 0
  3203                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  3204  001450  C07C  F001         	movff	efgtoa@h,___fldiv@b
  3205  001454  C07D  F002         	movff	efgtoa@h+1,___fldiv@b+1
  3206  001458  C07E  F003         	movff	efgtoa@h+2,___fldiv@b+2
  3207  00145C  C07F  F004         	movff	efgtoa@h+3,___fldiv@b+3
  3208  001460  C08E  F005         	movff	efgtoa@u,___fldiv@a
  3209  001464  C08F  F006         	movff	efgtoa@u+1,___fldiv@a+1
  3210  001468  C090  F007         	movff	efgtoa@u+2,___fldiv@a+2
  3211  00146C  C091  F008         	movff	efgtoa@u+3,___fldiv@a+3
  3212  001470  EC52  F014         	call	___fldiv	;wreg free
  3213  001474  C001  F01A         	movff	?___fldiv,floorf@x
  3214  001478  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  3215  00147C  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  3216  001480  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  3217  001484  EC1F  F016         	call	_floorf	;wreg free
  3218  001488  C01A  F080         	movff	?_floorf,efgtoa@l
  3219  00148C  C01B  F081         	movff	?_floorf+1,efgtoa@l+1
  3220  001490  C01C  F082         	movff	?_floorf+2,efgtoa@l+2
  3221  001494  C01D  F083         	movff	?_floorf+3,efgtoa@l+3
  3222                           
  3223                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  3224  001498  C080  F001         	movff	efgtoa@l,___fltol@f1
  3225  00149C  C081  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3226  0014A0  C082  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3227  0014A4  C083  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3228  0014A8  EC47  F01A         	call	___fltol	;wreg free
  3229  0014AC  C001  F072         	movff	?___fltol,efgtoa@d
  3230  0014B0  C002  F073         	movff	?___fltol+1,efgtoa@d+1
  3231  0014B4                     
  3232                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  3233  0014B4  C07C  F01A         	movff	efgtoa@h,___flsub@b
  3234  0014B8  C07D  F01B         	movff	efgtoa@h+1,___flsub@b+1
  3235  0014BC  C07E  F01C         	movff	efgtoa@h+2,___flsub@b+2
  3236  0014C0  C07F  F01D         	movff	efgtoa@h+3,___flsub@b+3
  3237  0014C4  C08E  F005         	movff	efgtoa@u,___flmul@a
  3238  0014C8  C08F  F006         	movff	efgtoa@u+1,___flmul@a+1
  3239  0014CC  C090  F007         	movff	efgtoa@u+2,___flmul@a+2
  3240  0014D0  C091  F008         	movff	efgtoa@u+3,___flmul@a+3
  3241  0014D4  C080  F001         	movff	efgtoa@l,___flmul@b
  3242  0014D8  C081  F002         	movff	efgtoa@l+1,___flmul@b+1
  3243  0014DC  C082  F003         	movff	efgtoa@l+2,___flmul@b+2
  3244  0014E0  C083  F004         	movff	efgtoa@l+3,___flmul@b+3
  3245  0014E4  EC3D  F012         	call	___flmul	;wreg free
  3246  0014E8  C001  F01E         	movff	?___flmul,___flsub@a
  3247  0014EC  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  3248  0014F0  C003  F020         	movff	?___flmul+2,___flsub@a+2
  3249  0014F4  C004  F021         	movff	?___flmul+3,___flsub@a+3
  3250  0014F8  EC18  F020         	call	___flsub	;wreg free
  3251  0014FC  C01A  F07C         	movff	?___flsub,efgtoa@h
  3252  001500  C01B  F07D         	movff	?___flsub+1,efgtoa@h+1
  3253  001504  C01C  F07E         	movff	?___flsub+2,efgtoa@h+2
  3254  001508  C01D  F07F         	movff	?___flsub+3,efgtoa@h+3
  3255  00150C                     
  3256                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  3257  00150C  C08E  F001         	movff	efgtoa@u,___fldiv@b
  3258  001510  C08F  F002         	movff	efgtoa@u+1,___fldiv@b+1
  3259  001514  C090  F003         	movff	efgtoa@u+2,___fldiv@b+2
  3260  001518  C091  F004         	movff	efgtoa@u+3,___fldiv@b+3
  3261  00151C  0E00               	movlw	0
  3262  00151E  6E05               	movwf	___fldiv@a^0,c
  3263  001520  0E00               	movlw	0
  3264  001522  6E06               	movwf	(___fldiv@a+1)^0,c
  3265  001524  0E20               	movlw	32
  3266  001526  6E07               	movwf	(___fldiv@a+2)^0,c
  3267  001528  0E41               	movlw	65
  3268  00152A  6E08               	movwf	(___fldiv@a+3)^0,c
  3269  00152C  EC52  F014         	call	___fldiv	;wreg free
  3270  001530  C001  F08E         	movff	?___fldiv,efgtoa@u
  3271  001534  C002  F08F         	movff	?___fldiv+1,efgtoa@u+1
  3272  001538  C003  F090         	movff	?___fldiv+2,efgtoa@u+2
  3273  00153C  C004  F091         	movff	?___fldiv+3,efgtoa@u+3
  3274  001540                     
  3275                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 436:         ++i;
  3276  001540  0100               	movlb	0	; () banked
  3277  001542  4B84               	infsnz	efgtoa@i& (0+255),f,b
  3278  001544  2B85               	incf	(efgtoa@i+1)& (0+255),f,b
  3279  001546                     l3545:
  3280                           
  3281                           ; BSR set to: 0
  3282                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3283  001546  516C               	movf	efgtoa@m& (0+255),w,b
  3284  001548  5D84               	subwf	efgtoa@i& (0+255),w,b
  3285  00154A  5185               	movf	(efgtoa@i+1)& (0+255),w,b
  3286  00154C  0A80               	xorlw	128
  3287  00154E  6E35               	movwf	??_efgtoa^0,c
  3288  001550  516D               	movf	(efgtoa@m+1)& (0+255),w,b
  3289  001552  0A80               	xorlw	128
  3290  001554  5835               	subwfb	??_efgtoa^0,w,c
  3291  001556  A0D8               	btfss	status,0,c
  3292  001558  EFB0  F00A         	goto	u4351
  3293  00155C  EFB2  F00A         	goto	u4350
  3294  001560                     u4351:
  3295  001560  EF28  F00A         	goto	l3537
  3296  001564                     u4350:
  3297  001564                     
  3298                           ; BSR set to: 0
  3299                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  3300  001564  C08E  F001         	movff	efgtoa@u,___flmul@b
  3301  001568  C08F  F002         	movff	efgtoa@u+1,___flmul@b+1
  3302  00156C  C090  F003         	movff	efgtoa@u+2,___flmul@b+2
  3303  001570  C091  F004         	movff	efgtoa@u+3,___flmul@b+3
  3304  001574  0E00               	movlw	0
  3305  001576  6E05               	movwf	___flmul@a^0,c
  3306  001578  0E00               	movlw	0
  3307  00157A  6E06               	movwf	(___flmul@a+1)^0,c
  3308  00157C  0EA0               	movlw	160
  3309  00157E  6E07               	movwf	(___flmul@a+2)^0,c
  3310  001580  0E40               	movlw	64
  3311  001582  6E08               	movwf	(___flmul@a+3)^0,c
  3312  001584  EC3D  F012         	call	___flmul	;wreg free
  3313  001588  C001  F080         	movff	?___flmul,efgtoa@l
  3314  00158C  C002  F081         	movff	?___flmul+1,efgtoa@l+1
  3315  001590  C003  F082         	movff	?___flmul+2,efgtoa@l+2
  3316  001594  C004  F083         	movff	?___flmul+3,efgtoa@l+3
  3317  001598                     
  3318                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  3319  001598  C07C  F01A         	movff	efgtoa@h,___flge@ff1
  3320  00159C  C07D  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  3321  0015A0  C07E  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  3322  0015A4  C07F  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  3323  0015A8  C080  F01E         	movff	efgtoa@l,___flge@ff2
  3324  0015AC  C081  F01F         	movff	efgtoa@l+1,___flge@ff2+1
  3325  0015B0  C082  F020         	movff	efgtoa@l+2,___flge@ff2+2
  3326  0015B4  C083  F021         	movff	efgtoa@l+3,___flge@ff2+3
  3327  0015B8  ECCA  F01A         	call	___flge	;wreg free
  3328  0015BC  B0D8               	btfsc	status,0,c
  3329  0015BE  EFE3  F00A         	goto	u4361
  3330  0015C2  EFE5  F00A         	goto	u4360
  3331  0015C6                     u4361:
  3332  0015C6  EFF0  F00A         	goto	l3553
  3333  0015CA                     u4360:
  3334  0015CA                     
  3335                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  3336  0015CA  0E00               	movlw	0
  3337  0015CC  0100               	movlb	0	; () banked
  3338  0015CE  6F80               	movwf	efgtoa@l& (0+255),b
  3339  0015D0  0E00               	movlw	0
  3340  0015D2  6F81               	movwf	(efgtoa@l+1)& (0+255),b
  3341  0015D4  0E00               	movlw	0
  3342  0015D6  6F82               	movwf	(efgtoa@l+2)& (0+255),b
  3343  0015D8  0E00               	movlw	0
  3344  0015DA  6F83               	movwf	(efgtoa@l+3)& (0+255),b
  3345                           
  3346                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 443:     } else {
  3347  0015DC  EF19  F00B         	goto	l3559
  3348  0015E0                     l3553:
  3349                           
  3350                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  3351  0015E0  C07C  F001         	movff	efgtoa@h,___fleq@ff1
  3352  0015E4  C07D  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  3353  0015E8  C07E  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  3354  0015EC  C07F  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  3355  0015F0  C080  F005         	movff	efgtoa@l,___fleq@ff2
  3356  0015F4  C081  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  3357  0015F8  C082  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  3358  0015FC  C083  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  3359  001600  EC3B  F01E         	call	___fleq	;wreg free
  3360  001604  A0D8               	btfss	status,0,c
  3361  001606  EF07  F00B         	goto	u4371
  3362  00160A  EF09  F00B         	goto	u4370
  3363  00160E                     u4371:
  3364  00160E  EF19  F00B         	goto	l3559
  3365  001612                     u4370:
  3366  001612  0100               	movlb	0	; () banked
  3367  001614  B172               	btfsc	efgtoa@d& (0+255),0,b
  3368  001616  EF0F  F00B         	goto	u4381
  3369  00161A  EF11  F00B         	goto	u4380
  3370  00161E                     u4381:
  3371  00161E  EF19  F00B         	goto	l3559
  3372  001622                     u4380:
  3373  001622                     
  3374                           ; BSR set to: 0
  3375                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  3376  001622  0E00               	movlw	0
  3377  001624  6F80               	movwf	efgtoa@l& (0+255),b
  3378  001626  0E00               	movlw	0
  3379  001628  6F81               	movwf	(efgtoa@l+1)& (0+255),b
  3380  00162A  0E00               	movlw	0
  3381  00162C  6F82               	movwf	(efgtoa@l+2)& (0+255),b
  3382  00162E  0E00               	movlw	0
  3383  001630  6F83               	movwf	(efgtoa@l+3)& (0+255),b
  3384  001632                     l3559:
  3385                           
  3386                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  3387  001632  C086  F001         	movff	efgtoa@g,___fladd@b
  3388  001636  C087  F002         	movff	efgtoa@g+1,___fladd@b+1
  3389  00163A  C088  F003         	movff	efgtoa@g+2,___fladd@b+2
  3390  00163E  C089  F004         	movff	efgtoa@g+3,___fladd@b+3
  3391  001642  C080  F005         	movff	efgtoa@l,___fladd@a
  3392  001646  C081  F006         	movff	efgtoa@l+1,___fladd@a+1
  3393  00164A  C082  F007         	movff	efgtoa@l+2,___fladd@a+2
  3394  00164E  C083  F008         	movff	efgtoa@l+3,___fladd@a+3
  3395  001652  ECAD  F00D         	call	___fladd	;wreg free
  3396  001656  C001  F07C         	movff	?___fladd,efgtoa@h
  3397  00165A  C002  F07D         	movff	?___fladd+1,efgtoa@h+1
  3398  00165E  C003  F07E         	movff	?___fladd+2,efgtoa@h+2
  3399  001662  C004  F07F         	movff	?___fladd+3,efgtoa@h+3
  3400  001666                     
  3401                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  3402  001666  C07C  F01A         	movff	efgtoa@h,___flge@ff1
  3403  00166A  C07D  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  3404  00166E  C07E  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  3405  001672  C07F  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  3406  001676  0E00               	movlw	0
  3407  001678  6E05               	movwf	___flmul@a^0,c
  3408  00167A  0E00               	movlw	0
  3409  00167C  6E06               	movwf	(___flmul@a+1)^0,c
  3410  00167E  0E20               	movlw	32
  3411  001680  6E07               	movwf	(___flmul@a+2)^0,c
  3412  001682  0E41               	movlw	65
  3413  001684  6E08               	movwf	(___flmul@a+3)^0,c
  3414  001686  C06E  F001         	movff	efgtoa@ou,___flmul@b
  3415  00168A  C06F  F002         	movff	efgtoa@ou+1,___flmul@b+1
  3416  00168E  C070  F003         	movff	efgtoa@ou+2,___flmul@b+2
  3417  001692  C071  F004         	movff	efgtoa@ou+3,___flmul@b+3
  3418  001696  EC3D  F012         	call	___flmul	;wreg free
  3419  00169A  C001  F01E         	movff	?___flmul,___flge@ff2
  3420  00169E  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  3421  0016A2  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  3422  0016A6  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  3423  0016AA  ECCA  F01A         	call	___flge	;wreg free
  3424  0016AE  A0D8               	btfss	status,0,c
  3425  0016B0  EF5C  F00B         	goto	u4391
  3426  0016B4  EF5E  F00B         	goto	u4390
  3427  0016B8                     u4391:
  3428  0016B8  EF87  F00B         	goto	l3571
  3429  0016BC                     u4390:
  3430  0016BC                     
  3431                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 454:   e++;
  3432  0016BC  0100               	movlb	0	; () banked
  3433  0016BE  4B8A               	infsnz	efgtoa@e& (0+255),f,b
  3434  0016C0  2B8B               	incf	(efgtoa@e+1)& (0+255),f,b
  3435  0016C2                     
  3436                           ; BSR set to: 0
  3437                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  3438  0016C2  C06E  F001         	movff	efgtoa@ou,___flmul@b
  3439  0016C6  C06F  F002         	movff	efgtoa@ou+1,___flmul@b+1
  3440  0016CA  C070  F003         	movff	efgtoa@ou+2,___flmul@b+2
  3441  0016CE  C071  F004         	movff	efgtoa@ou+3,___flmul@b+3
  3442  0016D2  0E00               	movlw	0
  3443  0016D4  6E05               	movwf	___flmul@a^0,c
  3444  0016D6  0E00               	movlw	0
  3445  0016D8  6E06               	movwf	(___flmul@a+1)^0,c
  3446  0016DA  0E20               	movlw	32
  3447  0016DC  6E07               	movwf	(___flmul@a+2)^0,c
  3448  0016DE  0E41               	movlw	65
  3449  0016E0  6E08               	movwf	(___flmul@a+3)^0,c
  3450  0016E2  EC3D  F012         	call	___flmul	;wreg free
  3451  0016E6  C001  F06E         	movff	?___flmul,efgtoa@ou
  3452  0016EA  C002  F06F         	movff	?___flmul+1,efgtoa@ou+1
  3453  0016EE  C003  F070         	movff	?___flmul+2,efgtoa@ou+2
  3454  0016F2  C004  F071         	movff	?___flmul+3,efgtoa@ou+3
  3455  0016F6                     
  3456                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  3457  0016F6  0E66               	movlw	102
  3458  0016F8  0100               	movlb	0	; () banked
  3459  0016FA  197A               	xorwf	efgtoa@nmode& (0+255),w,b
  3460  0016FC  A4D8               	btfss	status,2,c
  3461  0016FE  EF83  F00B         	goto	u4401
  3462  001702  EF85  F00B         	goto	u4400
  3463  001706                     u4401:
  3464  001706  EF87  F00B         	goto	l3571
  3465  00170A                     u4400:
  3466  00170A                     
  3467                           ; BSR set to: 0
  3468                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 458:    m++;
  3469  00170A  4B6C               	infsnz	efgtoa@m& (0+255),f,b
  3470  00170C  2B6D               	incf	(efgtoa@m+1)& (0+255),f,b
  3471  00170E                     l3571:
  3472                           
  3473                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  3474  00170E  C06E  F08E         	movff	efgtoa@ou,efgtoa@u
  3475  001712  C06F  F08F         	movff	efgtoa@ou+1,efgtoa@u+1
  3476  001716  C070  F090         	movff	efgtoa@ou+2,efgtoa@u+2
  3477  00171A  C071  F091         	movff	efgtoa@ou+3,efgtoa@u+3
  3478  00171E                     
  3479                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  3480  00171E  0E65               	movlw	101
  3481  001720  0100               	movlb	0	; () banked
  3482  001722  197A               	xorwf	efgtoa@nmode& (0+255),w,b
  3483  001724  B4D8               	btfsc	status,2,c
  3484  001726  EF97  F00B         	goto	u4411
  3485  00172A  EF99  F00B         	goto	u4410
  3486  00172E                     u4411:
  3487  00172E  EF9F  F00B         	goto	l3577
  3488  001732                     u4410:
  3489  001732                     
  3490                           ; BSR set to: 0
  3491  001732  C08A  F06A         	movff	efgtoa@e,efgtoa@ne
  3492  001736  C08B  F06B         	movff	efgtoa@e+1,efgtoa@ne+1
  3493  00173A  EFA3  F00B         	goto	l931
  3494  00173E                     l3577:
  3495                           
  3496                           ; BSR set to: 0
  3497  00173E  0E00               	movlw	0
  3498  001740  6F6B               	movwf	(efgtoa@ne+1)& (0+255),b
  3499  001742  0E00               	movlw	0
  3500  001744  6F6A               	movwf	efgtoa@ne& (0+255),b
  3501  001746                     l931:
  3502                           
  3503                           ; BSR set to: 0
  3504                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  3505  001746  0E00               	movlw	0
  3506  001748  6F69               	movwf	(efgtoa@pp+1)& (0+255),b
  3507  00174A  0E00               	movlw	0
  3508  00174C  6F68               	movwf	efgtoa@pp& (0+255),b
  3509                           
  3510                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  3511  00174E  0E00               	movlw	0
  3512  001750  6F67               	movwf	(efgtoa@t+1)& (0+255),b
  3513  001752  0E00               	movlw	0
  3514  001754  6F66               	movwf	efgtoa@t& (0+255),b
  3515                           
  3516                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  3517  001756  0E00               	movlw	0
  3518  001758  6F85               	movwf	(efgtoa@i+1)& (0+255),b
  3519  00175A  0E00               	movlw	0
  3520  00175C  6F84               	movwf	efgtoa@i& (0+255),b
  3521                           
  3522                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3523  00175E  EF9F  F00C         	goto	l3627
  3524  001762                     l3579:
  3525                           
  3526                           ; BSR set to: 0
  3527                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  3528  001762  C07C  F001         	movff	efgtoa@h,___fldiv@b
  3529  001766  C07D  F002         	movff	efgtoa@h+1,___fldiv@b+1
  3530  00176A  C07E  F003         	movff	efgtoa@h+2,___fldiv@b+2
  3531  00176E  C07F  F004         	movff	efgtoa@h+3,___fldiv@b+3
  3532  001772  C08E  F005         	movff	efgtoa@u,___fldiv@a
  3533  001776  C08F  F006         	movff	efgtoa@u+1,___fldiv@a+1
  3534  00177A  C090  F007         	movff	efgtoa@u+2,___fldiv@a+2
  3535  00177E  C091  F008         	movff	efgtoa@u+3,___fldiv@a+3
  3536  001782  EC52  F014         	call	___fldiv	;wreg free
  3537  001786  C001  F01A         	movff	?___fldiv,floorf@x
  3538  00178A  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  3539  00178E  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  3540  001792  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  3541  001796  EC1F  F016         	call	_floorf	;wreg free
  3542  00179A  C01A  F080         	movff	?_floorf,efgtoa@l
  3543  00179E  C01B  F081         	movff	?_floorf+1,efgtoa@l+1
  3544  0017A2  C01C  F082         	movff	?_floorf+2,efgtoa@l+2
  3545  0017A6  C01D  F083         	movff	?_floorf+3,efgtoa@l+3
  3546                           
  3547                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  3548  0017AA  C080  F001         	movff	efgtoa@l,___fltol@f1
  3549  0017AE  C081  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3550  0017B2  C082  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3551  0017B6  C083  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3552  0017BA  EC47  F01A         	call	___fltol	;wreg free
  3553  0017BE  C001  F072         	movff	?___fltol,efgtoa@d
  3554  0017C2  C002  F073         	movff	?___fltol+1,efgtoa@d+1
  3555  0017C6                     
  3556                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3557  0017C6  B85D               	btfsc	_flags^0,4,c
  3558  0017C8  EFE8  F00B         	goto	u4421
  3559  0017CC  EFEA  F00B         	goto	u4420
  3560  0017D0                     u4421:
  3561  0017D0  EF08  F00C         	goto	l3591
  3562  0017D4                     u4420:
  3563  0017D4  0100               	movlb	0	; () banked
  3564  0017D6  5172               	movf	efgtoa@d& (0+255),w,b
  3565  0017D8  1173               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3566  0017DA  A4D8               	btfss	status,2,c
  3567  0017DC  EFF2  F00B         	goto	u4431
  3568  0017E0  EFF4  F00B         	goto	u4430
  3569  0017E4                     u4431:
  3570  0017E4  EF08  F00C         	goto	l3591
  3571  0017E8                     u4430:
  3572  0017E8                     
  3573                           ; BSR set to: 0
  3574  0017E8  0E67               	movlw	103
  3575  0017EA  197B               	xorwf	efgtoa@mode& (0+255),w,b
  3576  0017EC  A4D8               	btfss	status,2,c
  3577  0017EE  EFFB  F00B         	goto	u4441
  3578  0017F2  EFFD  F00B         	goto	u4440
  3579  0017F6                     u4441:
  3580  0017F6  EF08  F00C         	goto	l3591
  3581  0017FA                     u4440:
  3582  0017FA                     
  3583                           ; BSR set to: 0
  3584  0017FA  BF6B               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3585  0017FC  EF04  F00C         	goto	u4450
  3586  001800  EF02  F00C         	goto	u4451
  3587  001804                     u4451:
  3588  001804  EF08  F00C         	goto	l3591
  3589  001808                     u4450:
  3590  001808                     
  3591                           ; BSR set to: 0
  3592                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  3593  001808  4B66               	infsnz	efgtoa@t& (0+255),f,b
  3594  00180A  2B67               	incf	(efgtoa@t+1)& (0+255),f,b
  3595                           
  3596                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  3597  00180C  EF53  F00C         	goto	l3619
  3598  001810                     l3591:
  3599                           
  3600                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  3601  001810  0100               	movlb	0	; () banked
  3602  001812  5168               	movf	efgtoa@pp& (0+255),w,b
  3603  001814  1169               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3604  001816  A4D8               	btfss	status,2,c
  3605  001818  EF10  F00C         	goto	u4461
  3606  00181C  EF12  F00C         	goto	u4460
  3607  001820                     u4461:
  3608  001820  EF3C  F00C         	goto	l3611
  3609  001824                     u4460:
  3610  001824                     
  3611                           ; BSR set to: 0
  3612  001824  BF6B               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3613  001826  EF19  F00C         	goto	u4470
  3614  00182A  EF17  F00C         	goto	u4471
  3615  00182E                     u4471:
  3616  00182E  EF3C  F00C         	goto	l3611
  3617  001832                     u4470:
  3618  001832                     
  3619                           ; BSR set to: 0
  3620                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  3621  001832  0E00               	movlw	low _dbuf
  3622  001834  258C               	addwf	efgtoa@n& (0+255),w,b
  3623  001836  6ED9               	movwf	fsr2l,c
  3624  001838  0E01               	movlw	high _dbuf
  3625  00183A  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3626  00183C  6EDA               	movwf	fsr2h,c
  3627  00183E  0E2E               	movlw	46
  3628  001840  6EDF               	movwf	indf2,c
  3629  001842                     
  3630                           ; BSR set to: 0
  3631  001842  4B8C               	infsnz	efgtoa@n& (0+255),f,b
  3632  001844  2B8D               	incf	(efgtoa@n+1)& (0+255),f,b
  3633  001846                     
  3634                           ; BSR set to: 0
  3635                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  3636  001846  0778               	decf	efgtoa@w& (0+255),f,b
  3637  001848  A0D8               	btfss	status,0,c
  3638  00184A  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  3639  00184C                     
  3640                           ; BSR set to: 0
  3641                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  3642  00184C  0E00               	movlw	0
  3643  00184E  6F69               	movwf	(efgtoa@pp+1)& (0+255),b
  3644  001850  0E01               	movlw	1
  3645  001852  6F68               	movwf	efgtoa@pp& (0+255),b
  3646  001854  EF3C  F00C         	goto	l3611
  3647  001858                     l3603:
  3648                           
  3649                           ; BSR set to: 0
  3650                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  3651  001858  0E00               	movlw	low _dbuf
  3652  00185A  258C               	addwf	efgtoa@n& (0+255),w,b
  3653  00185C  6ED9               	movwf	fsr2l,c
  3654  00185E  0E01               	movlw	high _dbuf
  3655  001860  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3656  001862  6EDA               	movwf	fsr2h,c
  3657  001864  0E30               	movlw	48
  3658  001866  6EDF               	movwf	indf2,c
  3659  001868                     
  3660                           ; BSR set to: 0
  3661  001868  4B8C               	infsnz	efgtoa@n& (0+255),f,b
  3662  00186A  2B8D               	incf	(efgtoa@n+1)& (0+255),f,b
  3663  00186C                     
  3664                           ; BSR set to: 0
  3665                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  3666  00186C  0778               	decf	efgtoa@w& (0+255),f,b
  3667  00186E  A0D8               	btfss	status,0,c
  3668  001870  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  3669  001872                     
  3670                           ; BSR set to: 0
  3671                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  3672  001872  0766               	decf	efgtoa@t& (0+255),f,b
  3673  001874  A0D8               	btfss	status,0,c
  3674  001876  0767               	decf	(efgtoa@t+1)& (0+255),f,b
  3675  001878                     l3611:
  3676                           
  3677                           ; BSR set to: 0
  3678                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  3679  001878  5166               	movf	efgtoa@t& (0+255),w,b
  3680  00187A  1167               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3681  00187C  A4D8               	btfss	status,2,c
  3682  00187E  EF43  F00C         	goto	u4481
  3683  001882  EF45  F00C         	goto	u4480
  3684  001886                     u4481:
  3685  001886  EF2C  F00C         	goto	l3603
  3686  00188A                     u4480:
  3687  00188A                     
  3688                           ; BSR set to: 0
  3689                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3690  00188A  0E00               	movlw	low _dbuf
  3691  00188C  258C               	addwf	efgtoa@n& (0+255),w,b
  3692  00188E  6ED9               	movwf	fsr2l,c
  3693  001890  0E01               	movlw	high _dbuf
  3694  001892  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3695  001894  6EDA               	movwf	fsr2h,c
  3696  001896  5172               	movf	efgtoa@d& (0+255),w,b
  3697  001898  0F30               	addlw	48
  3698  00189A  6EDF               	movwf	indf2,c
  3699  00189C                     
  3700                           ; BSR set to: 0
  3701  00189C  4B8C               	infsnz	efgtoa@n& (0+255),f,b
  3702  00189E  2B8D               	incf	(efgtoa@n+1)& (0+255),f,b
  3703  0018A0                     
  3704                           ; BSR set to: 0
  3705                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  3706  0018A0  0778               	decf	efgtoa@w& (0+255),f,b
  3707  0018A2  A0D8               	btfss	status,0,c
  3708  0018A4  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  3709  0018A6                     l3619:
  3710                           
  3711                           ; BSR set to: 0
  3712                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  3713  0018A6  C07C  F01A         	movff	efgtoa@h,___flsub@b
  3714  0018AA  C07D  F01B         	movff	efgtoa@h+1,___flsub@b+1
  3715  0018AE  C07E  F01C         	movff	efgtoa@h+2,___flsub@b+2
  3716  0018B2  C07F  F01D         	movff	efgtoa@h+3,___flsub@b+3
  3717  0018B6  C08E  F005         	movff	efgtoa@u,___flmul@a
  3718  0018BA  C08F  F006         	movff	efgtoa@u+1,___flmul@a+1
  3719  0018BE  C090  F007         	movff	efgtoa@u+2,___flmul@a+2
  3720  0018C2  C091  F008         	movff	efgtoa@u+3,___flmul@a+3
  3721  0018C6  C080  F001         	movff	efgtoa@l,___flmul@b
  3722  0018CA  C081  F002         	movff	efgtoa@l+1,___flmul@b+1
  3723  0018CE  C082  F003         	movff	efgtoa@l+2,___flmul@b+2
  3724  0018D2  C083  F004         	movff	efgtoa@l+3,___flmul@b+3
  3725  0018D6  EC3D  F012         	call	___flmul	;wreg free
  3726  0018DA  C001  F01E         	movff	?___flmul,___flsub@a
  3727  0018DE  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  3728  0018E2  C003  F020         	movff	?___flmul+2,___flsub@a+2
  3729  0018E6  C004  F021         	movff	?___flmul+3,___flsub@a+3
  3730  0018EA  EC18  F020         	call	___flsub	;wreg free
  3731  0018EE  C01A  F07C         	movff	?___flsub,efgtoa@h
  3732  0018F2  C01B  F07D         	movff	?___flsub+1,efgtoa@h+1
  3733  0018F6  C01C  F07E         	movff	?___flsub+2,efgtoa@h+2
  3734  0018FA  C01D  F07F         	movff	?___flsub+3,efgtoa@h+3
  3735  0018FE                     
  3736                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  3737  0018FE  C08E  F001         	movff	efgtoa@u,___fldiv@b
  3738  001902  C08F  F002         	movff	efgtoa@u+1,___fldiv@b+1
  3739  001906  C090  F003         	movff	efgtoa@u+2,___fldiv@b+2
  3740  00190A  C091  F004         	movff	efgtoa@u+3,___fldiv@b+3
  3741  00190E  0E00               	movlw	0
  3742  001910  6E05               	movwf	___fldiv@a^0,c
  3743  001912  0E00               	movlw	0
  3744  001914  6E06               	movwf	(___fldiv@a+1)^0,c
  3745  001916  0E20               	movlw	32
  3746  001918  6E07               	movwf	(___fldiv@a+2)^0,c
  3747  00191A  0E41               	movlw	65
  3748  00191C  6E08               	movwf	(___fldiv@a+3)^0,c
  3749  00191E  EC52  F014         	call	___fldiv	;wreg free
  3750  001922  C001  F08E         	movff	?___fldiv,efgtoa@u
  3751  001926  C002  F08F         	movff	?___fldiv+1,efgtoa@u+1
  3752  00192A  C003  F090         	movff	?___fldiv+2,efgtoa@u+2
  3753  00192E  C004  F091         	movff	?___fldiv+3,efgtoa@u+3
  3754  001932                     
  3755                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  3756  001932  0100               	movlb	0	; () banked
  3757  001934  076A               	decf	efgtoa@ne& (0+255),f,b
  3758  001936  A0D8               	btfss	status,0,c
  3759  001938  076B               	decf	(efgtoa@ne+1)& (0+255),f,b
  3760  00193A                     
  3761                           ; BSR set to: 0
  3762                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 490:         ++i;
  3763  00193A  4B84               	infsnz	efgtoa@i& (0+255),f,b
  3764  00193C  2B85               	incf	(efgtoa@i+1)& (0+255),f,b
  3765  00193E                     l3627:
  3766                           
  3767                           ; BSR set to: 0
  3768                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3769  00193E  516C               	movf	efgtoa@m& (0+255),w,b
  3770  001940  5D84               	subwf	efgtoa@i& (0+255),w,b
  3771  001942  5185               	movf	(efgtoa@i+1)& (0+255),w,b
  3772  001944  0A80               	xorlw	128
  3773  001946  6E35               	movwf	??_efgtoa^0,c
  3774  001948  516D               	movf	(efgtoa@m+1)& (0+255),w,b
  3775  00194A  0A80               	xorlw	128
  3776  00194C  5835               	subwfb	??_efgtoa^0,w,c
  3777  00194E  B0D8               	btfsc	status,0,c
  3778  001950  EFAC  F00C         	goto	u4491
  3779  001954  EFAE  F00C         	goto	u4490
  3780  001958                     u4491:
  3781  001958  EFBC  F00C         	goto	l3631
  3782  00195C                     u4490:
  3783  00195C                     
  3784                           ; BSR set to: 0
  3785  00195C  BF8D               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3786  00195E  EFBA  F00C         	goto	u4501
  3787  001962  518D               	movf	(efgtoa@n+1)& (0+255),w,b
  3788  001964  E109               	bnz	u4500
  3789  001966  0E4B               	movlw	75
  3790  001968  5D8C               	subwf	efgtoa@n& (0+255),w,b
  3791  00196A  A0D8               	btfss	status,0,c
  3792  00196C  EFBA  F00C         	goto	u4501
  3793  001970  EFBC  F00C         	goto	u4500
  3794  001974                     u4501:
  3795  001974  EFB1  F00B         	goto	l3579
  3796  001978                     u4500:
  3797  001978                     l3631:
  3798                           
  3799                           ; BSR set to: 0
  3800                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  3801  001978  5168               	movf	efgtoa@pp& (0+255),w,b
  3802  00197A  1169               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3803  00197C  A4D8               	btfss	status,2,c
  3804  00197E  EFC3  F00C         	goto	u4511
  3805  001982  EFC5  F00C         	goto	u4510
  3806  001986                     u4511:
  3807  001986  EFD6  F00C         	goto	l3639
  3808  00198A                     u4510:
  3809  00198A                     
  3810                           ; BSR set to: 0
  3811  00198A  A85D               	btfss	_flags^0,4,c
  3812  00198C  EFCA  F00C         	goto	u4521
  3813  001990  EFCC  F00C         	goto	u4520
  3814  001994                     u4521:
  3815  001994  EFD6  F00C         	goto	l3639
  3816  001998                     u4520:
  3817  001998                     
  3818                           ; BSR set to: 0
  3819                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  3820  001998  0E00               	movlw	low _dbuf
  3821  00199A  258C               	addwf	efgtoa@n& (0+255),w,b
  3822  00199C  6ED9               	movwf	fsr2l,c
  3823  00199E  0E01               	movlw	high _dbuf
  3824  0019A0  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3825  0019A2  6EDA               	movwf	fsr2h,c
  3826  0019A4  0E2E               	movlw	46
  3827  0019A6  6EDF               	movwf	indf2,c
  3828  0019A8                     
  3829                           ; BSR set to: 0
  3830  0019A8  4B8C               	infsnz	efgtoa@n& (0+255),f,b
  3831  0019AA  2B8D               	incf	(efgtoa@n+1)& (0+255),f,b
  3832  0019AC                     l3639:
  3833                           
  3834                           ; BSR set to: 0
  3835                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  3836  0019AC  0E00               	movlw	low _dbuf
  3837  0019AE  258C               	addwf	efgtoa@n& (0+255),w,b
  3838  0019B0  6ED9               	movwf	fsr2l,c
  3839  0019B2  0E01               	movlw	high _dbuf
  3840  0019B4  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3841  0019B6  6EDA               	movwf	fsr2h,c
  3842  0019B8  0E00               	movlw	0
  3843  0019BA  6EDF               	movwf	indf2,c
  3844  0019BC                     
  3845                           ; BSR set to: 0
  3846                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  3847  0019BC  0E65               	movlw	101
  3848  0019BE  197A               	xorwf	efgtoa@nmode& (0+255),w,b
  3849  0019C0  A4D8               	btfss	status,2,c
  3850  0019C2  EFE5  F00C         	goto	u4531
  3851  0019C6  EFE7  F00C         	goto	u4530
  3852  0019CA                     u4531:
  3853  0019CA  EF4C  F008         	goto	l3441
  3854  0019CE                     u4530:
  3855  0019CE                     
  3856                           ; BSR set to: 0
  3857                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  3858  0019CE  0E00               	movlw	0
  3859  0019D0  6F85               	movwf	(efgtoa@i+1)& (0+255),b
  3860  0019D2  0E4F               	movlw	79
  3861  0019D4  6F84               	movwf	efgtoa@i& (0+255),b
  3862  0019D6                     
  3863                           ; BSR set to: 0
  3864                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  3865  0019D6  0E00               	movlw	low _dbuf
  3866  0019D8  2584               	addwf	efgtoa@i& (0+255),w,b
  3867  0019DA  6ED9               	movwf	fsr2l,c
  3868  0019DC  0E01               	movlw	high _dbuf
  3869  0019DE  2185               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3870  0019E0  6EDA               	movwf	fsr2h,c
  3871  0019E2  0E00               	movlw	0
  3872  0019E4  6EDF               	movwf	indf2,c
  3873  0019E6                     
  3874                           ; BSR set to: 0
  3875                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  3876  0019E6  0E00               	movlw	0
  3877  0019E8  6F75               	movwf	(efgtoa@sign+1)& (0+255),b
  3878  0019EA  0E00               	movlw	0
  3879  0019EC  6F74               	movwf	efgtoa@sign& (0+255),b
  3880  0019EE                     
  3881                           ; BSR set to: 0
  3882                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  3883  0019EE  BF8B               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3884  0019F0  EFFE  F00C         	goto	u4540
  3885  0019F4  EFFC  F00C         	goto	u4541
  3886  0019F8                     u4541:
  3887  0019F8  EF06  F00D         	goto	l3655
  3888  0019FC                     u4540:
  3889  0019FC                     
  3890                           ; BSR set to: 0
  3891                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  3892  0019FC  0E00               	movlw	0
  3893  0019FE  6F75               	movwf	(efgtoa@sign+1)& (0+255),b
  3894  001A00  0E01               	movlw	1
  3895  001A02  6F74               	movwf	efgtoa@sign& (0+255),b
  3896  001A04                     
  3897                           ; BSR set to: 0
  3898                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  3899  001A04  6D8A               	negf	efgtoa@e& (0+255),b
  3900  001A06  1F8B               	comf	(efgtoa@e+1)& (0+255),f,b
  3901  001A08  B0D8               	btfsc	status,0,c
  3902  001A0A  2B8B               	incf	(efgtoa@e+1)& (0+255),f,b
  3903  001A0C                     l3655:
  3904                           
  3905                           ; BSR set to: 0
  3906                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  3907  001A0C  0E00               	movlw	0
  3908  001A0E  6F77               	movwf	(efgtoa@p+1)& (0+255),b
  3909  001A10  0E02               	movlw	2
  3910  001A12  6F76               	movwf	efgtoa@p& (0+255),b
  3911                           
  3912                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  3913  001A14  EF37  F00D         	goto	l3667
  3914  001A18                     l3657:
  3915                           
  3916                           ; BSR set to: 0
  3917                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  3918  001A18  0784               	decf	efgtoa@i& (0+255),f,b
  3919  001A1A  A0D8               	btfss	status,0,c
  3920  001A1C  0785               	decf	(efgtoa@i+1)& (0+255),f,b
  3921  001A1E                     
  3922                           ; BSR set to: 0
  3923                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  3924  001A1E  0E00               	movlw	low _dbuf
  3925  001A20  2584               	addwf	efgtoa@i& (0+255),w,b
  3926  001A22  6ED9               	movwf	fsr2l,c
  3927  001A24  0E01               	movlw	high _dbuf
  3928  001A26  2185               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3929  001A28  6EDA               	movwf	fsr2h,c
  3930  001A2A  C08A  F001         	movff	efgtoa@e,___awmod@dividend
  3931  001A2E  C08B  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  3932  001A32  0E00               	movlw	0
  3933  001A34  6E04               	movwf	(___awmod@divisor+1)^0,c
  3934  001A36  0E0A               	movlw	10
  3935  001A38  6E03               	movwf	___awmod@divisor^0,c
  3936  001A3A  ECE3  F01D         	call	___awmod	;wreg free
  3937  001A3E  5001               	movf	?___awmod^0,w,c
  3938  001A40  0F30               	addlw	48
  3939  001A42  6EDF               	movwf	indf2,c
  3940  001A44                     
  3941                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  3942  001A44  C08A  F001         	movff	efgtoa@e,___awdiv@dividend
  3943  001A48  C08B  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  3944  001A4C  0E00               	movlw	0
  3945  001A4E  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3946  001A50  0E0A               	movlw	10
  3947  001A52  6E03               	movwf	___awdiv@divisor^0,c
  3948  001A54  EC20  F01D         	call	___awdiv	;wreg free
  3949  001A58  C001  F08A         	movff	?___awdiv,efgtoa@e
  3950  001A5C  C002  F08B         	movff	?___awdiv+1,efgtoa@e+1
  3951  001A60                     
  3952                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  3953  001A60  0100               	movlb	0	; () banked
  3954  001A62  0776               	decf	efgtoa@p& (0+255),f,b
  3955  001A64  A0D8               	btfss	status,0,c
  3956  001A66  0777               	decf	(efgtoa@p+1)& (0+255),f,b
  3957  001A68                     
  3958                           ; BSR set to: 0
  3959                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  3960  001A68  0778               	decf	efgtoa@w& (0+255),f,b
  3961  001A6A  A0D8               	btfss	status,0,c
  3962  001A6C  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  3963  001A6E                     l3667:
  3964                           
  3965                           ; BSR set to: 0
  3966                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  3967  001A6E  518A               	movf	efgtoa@e& (0+255),w,b
  3968  001A70  118B               	iorwf	(efgtoa@e+1)& (0+255),w,b
  3969  001A72  A4D8               	btfss	status,2,c
  3970  001A74  EF3E  F00D         	goto	u4551
  3971  001A78  EF40  F00D         	goto	u4550
  3972  001A7C                     u4551:
  3973  001A7C  EF0C  F00D         	goto	l3657
  3974  001A80                     u4550:
  3975  001A80                     
  3976                           ; BSR set to: 0
  3977  001A80  BF77               	btfsc	(efgtoa@p+1)& (0+255),7,b
  3978  001A82  EF4D  F00D         	goto	u4560
  3979  001A86  5177               	movf	(efgtoa@p+1)& (0+255),w,b
  3980  001A88  E106               	bnz	u4561
  3981  001A8A  0576               	decf	efgtoa@p& (0+255),w,b
  3982  001A8C  B0D8               	btfsc	status,0,c
  3983  001A8E  EF4B  F00D         	goto	u4561
  3984  001A92  EF4D  F00D         	goto	u4560
  3985  001A96                     u4561:
  3986  001A96  EF0C  F00D         	goto	l3657
  3987  001A9A                     u4560:
  3988  001A9A                     
  3989                           ; BSR set to: 0
  3990                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 514:         --i;
  3991  001A9A  0784               	decf	efgtoa@i& (0+255),f,b
  3992  001A9C  A0D8               	btfss	status,0,c
  3993  001A9E  0785               	decf	(efgtoa@i+1)& (0+255),f,b
  3994  001AA0                     
  3995                           ; BSR set to: 0
  3996                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  3997  001AA0  5174               	movf	efgtoa@sign& (0+255),w,b
  3998  001AA2  1175               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3999  001AA4  A4D8               	btfss	status,2,c
  4000  001AA6  EF57  F00D         	goto	u4571
  4001  001AAA  EF59  F00D         	goto	u4570
  4002  001AAE                     u4571:
  4003  001AAE  EF5F  F00D         	goto	l3677
  4004  001AB2                     u4570:
  4005  001AB2                     
  4006                           ; BSR set to: 0
  4007  001AB2  0E00               	movlw	0
  4008  001AB4  6F63               	movwf	(_efgtoa$1440+1)& (0+255),b
  4009  001AB6  0E2B               	movlw	43
  4010  001AB8  6F62               	movwf	_efgtoa$1440& (0+255),b
  4011  001ABA  EF63  F00D         	goto	l3679
  4012  001ABE                     l3677:
  4013                           
  4014                           ; BSR set to: 0
  4015  001ABE  0E00               	movlw	0
  4016  001AC0  6F63               	movwf	(_efgtoa$1440+1)& (0+255),b
  4017  001AC2  0E2D               	movlw	45
  4018  001AC4  6F62               	movwf	_efgtoa$1440& (0+255),b
  4019  001AC6                     l3679:
  4020                           
  4021                           ; BSR set to: 0
  4022  001AC6  0E00               	movlw	low _dbuf
  4023  001AC8  2584               	addwf	efgtoa@i& (0+255),w,b
  4024  001ACA  6ED9               	movwf	fsr2l,c
  4025  001ACC  0E01               	movlw	high _dbuf
  4026  001ACE  2185               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4027  001AD0  6EDA               	movwf	fsr2h,c
  4028  001AD2  C062  FFDF         	movff	_efgtoa$1440,indf2
  4029  001AD6                     
  4030                           ; BSR set to: 0
  4031                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 516:         --w;
  4032  001AD6  0778               	decf	efgtoa@w& (0+255),f,b
  4033  001AD8  A0D8               	btfss	status,0,c
  4034  001ADA  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  4035  001ADC                     
  4036                           ; BSR set to: 0
  4037                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 517:         --i;
  4038  001ADC  0784               	decf	efgtoa@i& (0+255),f,b
  4039  001ADE  A0D8               	btfss	status,0,c
  4040  001AE0  0785               	decf	(efgtoa@i+1)& (0+255),f,b
  4041  001AE2                     
  4042                           ; BSR set to: 0
  4043  001AE2  0EBF               	movlw	191
  4044  001AE4  6E35               	movwf	??_efgtoa^0,c
  4045  001AE6  0EFF               	movlw	255
  4046  001AE8  6E36               	movwf	(??_efgtoa+1)^0,c
  4047  001AEA  5034               	movf	efgtoa@c^0,w,c
  4048  001AEC  6E37               	movwf	(??_efgtoa+2)^0,c
  4049  001AEE  6A38               	clrf	(??_efgtoa+3)^0,c
  4050  001AF0  5035               	movf	??_efgtoa^0,w,c
  4051  001AF2  2637               	addwf	(??_efgtoa+2)^0,f,c
  4052  001AF4  5036               	movf	(??_efgtoa+1)^0,w,c
  4053  001AF6  2238               	addwfc	(??_efgtoa+3)^0,f,c
  4054  001AF8  5038               	movf	(??_efgtoa+3)^0,w,c
  4055  001AFA  E109               	bnz	u4580
  4056  001AFC  0E1A               	movlw	26
  4057  001AFE  5C37               	subwf	(??_efgtoa+2)^0,w,c
  4058  001B00  A0D8               	btfss	status,0,c
  4059  001B02  EF85  F00D         	goto	u4581
  4060  001B06  EF87  F00D         	goto	u4580
  4061  001B0A                     u4581:
  4062  001B0A  EF8D  F00D         	goto	l3691
  4063  001B0E                     u4580:
  4064  001B0E                     
  4065                           ; BSR set to: 0
  4066  001B0E  0E00               	movlw	0
  4067  001B10  6F65               	movwf	(_efgtoa$1441+1)& (0+255),b
  4068  001B12  0E65               	movlw	101
  4069  001B14  6F64               	movwf	_efgtoa$1441& (0+255),b
  4070  001B16  EF91  F00D         	goto	l3693
  4071  001B1A                     l3691:
  4072                           
  4073                           ; BSR set to: 0
  4074  001B1A  0E00               	movlw	0
  4075  001B1C  6F65               	movwf	(_efgtoa$1441+1)& (0+255),b
  4076  001B1E  0E45               	movlw	69
  4077  001B20  6F64               	movwf	_efgtoa$1441& (0+255),b
  4078  001B22                     l3693:
  4079                           
  4080                           ; BSR set to: 0
  4081  001B22  0E00               	movlw	low _dbuf
  4082  001B24  2584               	addwf	efgtoa@i& (0+255),w,b
  4083  001B26  6ED9               	movwf	fsr2l,c
  4084  001B28  0E01               	movlw	high _dbuf
  4085  001B2A  2185               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4086  001B2C  6EDA               	movwf	fsr2h,c
  4087  001B2E  C064  FFDF         	movff	_efgtoa$1441,indf2
  4088  001B32                     
  4089                           ; BSR set to: 0
  4090                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 519:         --w;
  4091  001B32  0778               	decf	efgtoa@w& (0+255),f,b
  4092  001B34  A0D8               	btfss	status,0,c
  4093  001B36  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  4094  001B38                     
  4095                           ; BSR set to: 0
  4096                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  4097  001B38  0E00               	movlw	low _dbuf
  4098  001B3A  258C               	addwf	efgtoa@n& (0+255),w,b
  4099  001B3C  6E01               	movwf	strcpy@dest^0,c
  4100  001B3E  0E01               	movlw	high _dbuf
  4101  001B40  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4102  001B42  6E02               	movwf	(strcpy@dest+1)^0,c
  4103  001B44  0E00               	movlw	low _dbuf
  4104  001B46  2584               	addwf	efgtoa@i& (0+255),w,b
  4105  001B48  6E03               	movwf	strcpy@src^0,c
  4106  001B4A  0E01               	movlw	high _dbuf
  4107  001B4C  2185               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4108  001B4E  6E04               	movwf	(strcpy@src+1)^0,c
  4109  001B50  EC4C  F01F         	call	_strcpy	;wreg free
  4110  001B54  EF4C  F008         	goto	l3441
  4111  001B58                     l887:
  4112  001B58  0012               	return		;funcret
  4113  001B5A                     __end_of_efgtoa:
  4114                           	callstack 0
  4115                           
  4116 ;; *************** function _tolower *****************
  4117 ;; Defined at:
  4118 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\tolower.c"
  4119 ;; Parameters:    Size  Location     Type
  4120 ;;  c               2    6[COMRAM] int 
  4121 ;; Auto vars:     Size  Location     Type
  4122 ;;		None
  4123 ;; Return value:  Size  Location     Type
  4124 ;;                  2    6[COMRAM] int 
  4125 ;; Registers used:
  4126 ;;		wreg, status,2, status,0
  4127 ;; Tracked objects:
  4128 ;;		On entry : 0/0
  4129 ;;		On exit  : 0/0
  4130 ;;		Unchanged: 0/0
  4131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4132 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4134 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4135 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4136 ;;Total ram usage:        6 bytes
  4137 ;; Hardware stack levels used: 1
  4138 ;; Hardware stack levels required when called: 1
  4139 ;; This function calls:
  4140 ;;		_isupper
  4141 ;; This function is called by:
  4142 ;;		_efgtoa
  4143 ;;		_vfpfcnvrt
  4144 ;; This function uses a non-reentrant model
  4145 ;;
  4146                           
  4147                           	psect	text10
  4148  003FEA                     __ptext10:
  4149                           	callstack 0
  4150  003FEA                     _tolower:
  4151                           	callstack 25
  4152  003FEA  0EBF               	movlw	191
  4153  003FEC  6E09               	movwf	??_tolower^0,c
  4154  003FEE  0EFF               	movlw	255
  4155  003FF0  6E0A               	movwf	(??_tolower+1)^0,c
  4156  003FF2  C007  F00B         	movff	tolower@c,??_tolower+2
  4157  003FF6  C008  F00C         	movff	tolower@c+1,??_tolower+3
  4158  003FFA  5009               	movf	??_tolower^0,w,c
  4159  003FFC  260B               	addwf	(??_tolower+2)^0,f,c
  4160  003FFE  500A               	movf	(??_tolower+1)^0,w,c
  4161  004000  220C               	addwfc	(??_tolower+3)^0,f,c
  4162  004002  500C               	movf	(??_tolower+3)^0,w,c
  4163  004004  E107               	bnz	u3961
  4164  004006  0E1A               	movlw	26
  4165  004008  5C0B               	subwf	(??_tolower+2)^0,w,c
  4166  00400A  B0D8               	btfsc	status,0,c
  4167  00400C  EF0A  F020         	goto	u3961
  4168  004010  EF0C  F020         	goto	u3960
  4169  004014                     u3961:
  4170  004014  EF13  F020         	goto	l1103
  4171  004018                     u3960:
  4172  004018  0E20               	movlw	32
  4173  00401A  1007               	iorwf	tolower@c^0,w,c
  4174  00401C  6E07               	movwf	?_tolower^0,c
  4175  00401E  5008               	movf	(tolower@c+1)^0,w,c
  4176  004020  6E08               	movwf	(?_tolower+1)^0,c
  4177  004022  EF17  F020         	goto	l1106
  4178  004026                     l1103:
  4179  004026  C007  F007         	movff	tolower@c,?_tolower
  4180  00402A  C008  F008         	movff	tolower@c+1,?_tolower+1
  4181  00402E                     l1106:
  4182  00402E  0012               	return		;funcret
  4183  004030                     __end_of_tolower:
  4184                           	callstack 0
  4185                           
  4186 ;; *************** function _isupper *****************
  4187 ;; Defined at:
  4188 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isupper.c"
  4189 ;; Parameters:    Size  Location     Type
  4190 ;;  c               2    0[COMRAM] int 
  4191 ;; Auto vars:     Size  Location     Type
  4192 ;;		None
  4193 ;; Return value:  Size  Location     Type
  4194 ;;                  2    0[COMRAM] int 
  4195 ;; Registers used:
  4196 ;;		wreg, status,2, status,0
  4197 ;; Tracked objects:
  4198 ;;		On entry : 0/0
  4199 ;;		On exit  : 0/0
  4200 ;;		Unchanged: 0/0
  4201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4202 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4204 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4205 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4206 ;;Total ram usage:        6 bytes
  4207 ;; Hardware stack levels used: 1
  4208 ;; This function calls:
  4209 ;;		Nothing
  4210 ;; This function is called by:
  4211 ;;		_efgtoa
  4212 ;;		_vfpfcnvrt
  4213 ;;		_tolower
  4214 ;; This function uses a non-reentrant model
  4215 ;;
  4216                           
  4217                           	psect	text11
  4218  0040BA                     __ptext11:
  4219                           	callstack 0
  4220  0040BA                     _isupper:
  4221                           	callstack 25
  4222  0040BA  0EBF               	movlw	191
  4223  0040BC  6E03               	movwf	??_isupper^0,c
  4224  0040BE  0EFF               	movlw	255
  4225  0040C0  6E04               	movwf	(??_isupper+1)^0,c
  4226  0040C2  C001  F005         	movff	isupper@c,??_isupper+2
  4227  0040C6  C002  F006         	movff	isupper@c+1,??_isupper+3
  4228  0040CA  5003               	movf	??_isupper^0,w,c
  4229  0040CC  2605               	addwf	(??_isupper+2)^0,f,c
  4230  0040CE  5004               	movf	(??_isupper+1)^0,w,c
  4231  0040D0  2206               	addwfc	(??_isupper+3)^0,f,c
  4232  0040D2  5006               	movf	(??_isupper+3)^0,w,c
  4233  0040D4  E10A               	bnz	u3110
  4234  0040D6  0E1A               	movlw	26
  4235  0040D8  5C05               	subwf	(??_isupper+2)^0,w,c
  4236  0040DA  A0D8               	btfss	status,0,c
  4237  0040DC  EF72  F020         	goto	u3111
  4238  0040E0  EF75  F020         	goto	u3110
  4239  0040E4                     u3111:
  4240  0040E4  0E01               	movlw	1
  4241  0040E6  EF76  F020         	goto	u3120
  4242  0040EA                     u3110:
  4243  0040EA  0E00               	movlw	0
  4244  0040EC                     u3120:
  4245  0040EC  6E01               	movwf	?_isupper^0,c
  4246  0040EE  6A02               	clrf	(?_isupper+1)^0,c
  4247  0040F0  0012               	return		;funcret
  4248  0040F2                     __end_of_isupper:
  4249                           	callstack 0
  4250                           
  4251 ;; *************** function _strcpy *****************
  4252 ;; Defined at:
  4253 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strcpy.c"
  4254 ;; Parameters:    Size  Location     Type
  4255 ;;  dest            2    0[COMRAM] PTR unsigned char 
  4256 ;;		 -> dbuf(80), 
  4257 ;;  src             2    2[COMRAM] PTR const unsigned char 
  4258 ;;		 -> STR_11(4), STR_10(4), STR_7(4), STR_6(4), 
  4259 ;;		 -> dbuf(80), 
  4260 ;; Auto vars:     Size  Location     Type
  4261 ;;  d               2    8[COMRAM] PTR unsigned char 
  4262 ;;		 -> dbuf(80), 
  4263 ;;  s               2    6[COMRAM] PTR const unsigned char 
  4264 ;;		 -> STR_11(4), STR_10(4), STR_7(4), STR_6(4), 
  4265 ;;		 -> dbuf(80), 
  4266 ;; Return value:  Size  Location     Type
  4267 ;;                  2    0[COMRAM] PTR unsigned char 
  4268 ;; Registers used:
  4269 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4270 ;; Tracked objects:
  4271 ;;		On entry : 0/0
  4272 ;;		On exit  : 0/0
  4273 ;;		Unchanged: 0/0
  4274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4275 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4276 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4277 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4278 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4279 ;;Total ram usage:       10 bytes
  4280 ;; Hardware stack levels used: 1
  4281 ;; This function calls:
  4282 ;;		Nothing
  4283 ;; This function is called by:
  4284 ;;		_efgtoa
  4285 ;; This function uses a non-reentrant model
  4286 ;;
  4287                           
  4288                           	psect	text12
  4289  003E98                     __ptext12:
  4290                           	callstack 0
  4291  003E98                     _strcpy:
  4292                           	callstack 25
  4293  003E98  C003  F007         	movff	strcpy@src,strcpy@s
  4294  003E9C  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  4295  003EA0  C001  F009         	movff	strcpy@dest,strcpy@d
  4296  003EA4  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  4297  003EA8                     l3341:
  4298  003EA8  5007               	movf	strcpy@s^0,w,c
  4299  003EAA  6E05               	movwf	??_strcpy^0,c
  4300  003EAC  5008               	movf	(strcpy@s+1)^0,w,c
  4301  003EAE  6E06               	movwf	(??_strcpy+1)^0,c
  4302  003EB0  4A07               	infsnz	strcpy@s^0,f,c
  4303  003EB2  2A08               	incf	(strcpy@s+1)^0,f,c
  4304  003EB4  C005  FFF6         	movff	??_strcpy,tblptrl
  4305  003EB8  C006  FFF7         	movff	??_strcpy+1,tblptrh
  4306  003EBC  0E00               	movlw	low (__smallconst shr (0+16))
  4307  003EBE  6EF8               	movwf	tblptru,c
  4308  003EC0  C009  FFD9         	movff	strcpy@d,fsr2l
  4309  003EC4  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  4310  003EC8  4A09               	infsnz	strcpy@d^0,f,c
  4311  003ECA  2A0A               	incf	(strcpy@d+1)^0,f,c
  4312  003ECC  0E0E               	movlw	(high __ramtop+-1)
  4313  003ECE  64F7               	cpfsgt	tblptrh,c
  4314  003ED0  D003               	bra	u3947
  4315  003ED2  0008               	tblrd		*
  4316  003ED4  50F5               	movf	tablat,w,c
  4317  003ED6  D005               	bra	u3940
  4318  003ED8                     u3947:
  4319  003ED8  CFF6 FFE1          	movff	tblptrl,fsr1l
  4320  003EDC  CFF7 FFE2          	movff	tblptrh,fsr1h
  4321  003EE0  50E7               	movf	indf1,w,c
  4322  003EE2                     u3940:
  4323  003EE2  6EDF               	movwf	indf2,c
  4324  003EE4  50DF               	movf	indf2,w,c
  4325  003EE6  A4D8               	btfss	status,2,c
  4326  003EE8  EF78  F01F         	goto	u3951
  4327  003EEC  EF7A  F01F         	goto	u3950
  4328  003EF0                     u3951:
  4329  003EF0  EF54  F01F         	goto	l3341
  4330  003EF4                     u3950:
  4331  003EF4  0012               	return		;funcret
  4332  003EF6                     __end_of_strcpy:
  4333                           	callstack 0
  4334                           
  4335 ;; *************** function _pad *****************
  4336 ;; Defined at:
  4337 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  4338 ;; Parameters:    Size  Location     Type
  4339 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  4340 ;;		 -> sprintf@f(11), 
  4341 ;;  buf             2   18[COMRAM] PTR unsigned char 
  4342 ;;		 -> dbuf(80), 
  4343 ;;  p               2   20[COMRAM] int 
  4344 ;; Auto vars:     Size  Location     Type
  4345 ;;  w               2   25[COMRAM] int 
  4346 ;;  i               2   23[COMRAM] int 
  4347 ;; Return value:  Size  Location     Type
  4348 ;;                  2   16[COMRAM] int 
  4349 ;; Registers used:
  4350 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4351 ;; Tracked objects:
  4352 ;;		On entry : 0/0
  4353 ;;		On exit  : 0/0
  4354 ;;		Unchanged: 0/0
  4355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4356 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4357 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4358 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4359 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4360 ;;Total ram usage:       11 bytes
  4361 ;; Hardware stack levels used: 1
  4362 ;; Hardware stack levels required when called: 3
  4363 ;; This function calls:
  4364 ;;		_fputc
  4365 ;;		_fputs
  4366 ;;		_strlen
  4367 ;; This function is called by:
  4368 ;;		_efgtoa
  4369 ;; This function uses a non-reentrant model
  4370 ;;
  4371                           
  4372                           	psect	text13
  4373  003B04                     __ptext13:
  4374                           	callstack 0
  4375  003B04                     _pad:
  4376                           	callstack 22
  4377  003B04                     
  4378                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  4379  003B04  A05D               	btfss	_flags^0,0,c
  4380  003B06  EF87  F01D         	goto	u3831
  4381  003B0A  EF89  F01D         	goto	u3830
  4382  003B0E                     u3831:
  4383  003B0E  EF93  F01D         	goto	l3299
  4384  003B12                     u3830:
  4385  003B12                     
  4386                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  4387  003B12  C013  F00A         	movff	pad@buf,fputs@s
  4388  003B16  C014  F00B         	movff	pad@buf+1,fputs@s+1
  4389  003B1A  C011  F00C         	movff	pad@fp,fputs@fp
  4390  003B1E  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  4391  003B22  EC3B  F020         	call	_fputs	;wreg free
  4392  003B26                     l3299:
  4393                           
  4394                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  4395  003B26  BE16               	btfsc	(pad@p+1)^0,7,c
  4396  003B28  EF98  F01D         	goto	u3841
  4397  003B2C  EF9A  F01D         	goto	u3840
  4398  003B30                     u3841:
  4399  003B30  EFA0  F01D         	goto	l3303
  4400  003B34                     u3840:
  4401  003B34  C015  F01A         	movff	pad@p,pad@w
  4402  003B38  C016  F01B         	movff	pad@p+1,pad@w+1
  4403  003B3C  EFA4  F01D         	goto	l866
  4404  003B40                     l3303:
  4405  003B40  0E00               	movlw	0
  4406  003B42  6E1B               	movwf	(pad@w+1)^0,c
  4407  003B44  0E00               	movlw	0
  4408  003B46  6E1A               	movwf	pad@w^0,c
  4409  003B48                     l866:
  4410                           
  4411                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  4412  003B48  0E00               	movlw	0
  4413  003B4A  6E19               	movwf	(pad@i+1)^0,c
  4414  003B4C  0E00               	movlw	0
  4415  003B4E  6E18               	movwf	pad@i^0,c
  4416                           
  4417                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4418  003B50  EFB6  F01D         	goto	l3309
  4419  003B54                     l3305:
  4420                           
  4421                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  4422  003B54  0E00               	movlw	0
  4423  003B56  6E02               	movwf	(fputc@c+1)^0,c
  4424  003B58  0E20               	movlw	32
  4425  003B5A  6E01               	movwf	fputc@c^0,c
  4426  003B5C  C011  F003         	movff	pad@fp,fputc@fp
  4427  003B60  C012  F004         	movff	pad@fp+1,fputc@fp+1
  4428  003B64  ECBB  F01C         	call	_fputc	;wreg free
  4429  003B68                     
  4430                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 86:         ++i;
  4431  003B68  4A18               	infsnz	pad@i^0,f,c
  4432  003B6A  2A19               	incf	(pad@i+1)^0,f,c
  4433  003B6C                     l3309:
  4434                           
  4435                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4436  003B6C  501A               	movf	pad@w^0,w,c
  4437  003B6E  5C18               	subwf	pad@i^0,w,c
  4438  003B70  5019               	movf	(pad@i+1)^0,w,c
  4439  003B72  0A80               	xorlw	128
  4440  003B74  6E17               	movwf	??_pad^0,c
  4441  003B76  501B               	movf	(pad@w+1)^0,w,c
  4442  003B78  0A80               	xorlw	128
  4443  003B7A  5817               	subwfb	??_pad^0,w,c
  4444  003B7C  A0D8               	btfss	status,0,c
  4445  003B7E  EFC3  F01D         	goto	u3851
  4446  003B82  EFC5  F01D         	goto	u3850
  4447  003B86                     u3851:
  4448  003B86  EFAA  F01D         	goto	l3305
  4449  003B8A                     u3850:
  4450  003B8A                     
  4451                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  4452  003B8A  B05D               	btfsc	_flags^0,0,c
  4453  003B8C  EFCA  F01D         	goto	u3861
  4454  003B90  EFCC  F01D         	goto	u3860
  4455  003B94                     u3861:
  4456  003B94  EFD6  F01D         	goto	l3313
  4457  003B98                     u3860:
  4458  003B98                     
  4459                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  4460  003B98  C013  F00A         	movff	pad@buf,fputs@s
  4461  003B9C  C014  F00B         	movff	pad@buf+1,fputs@s+1
  4462  003BA0  C011  F00C         	movff	pad@fp,fputs@fp
  4463  003BA4  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  4464  003BA8  EC3B  F020         	call	_fputs	;wreg free
  4465  003BAC                     l3313:
  4466                           
  4467                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  4468  003BAC  C013  F001         	movff	pad@buf,strlen@s
  4469  003BB0  C014  F002         	movff	pad@buf+1,strlen@s+1
  4470  003BB4  ECCD  F01F         	call	_strlen	;wreg free
  4471  003BB8  501A               	movf	pad@w^0,w,c
  4472  003BBA  2401               	addwf	?_strlen^0,w,c
  4473  003BBC  6E11               	movwf	?_pad^0,c
  4474  003BBE  501B               	movf	(pad@w+1)^0,w,c
  4475  003BC0  2002               	addwfc	(?_strlen+1)^0,w,c
  4476  003BC2  6E12               	movwf	(?_pad+1)^0,c
  4477  003BC4  0012               	return		;funcret
  4478  003BC6                     __end_of_pad:
  4479                           	callstack 0
  4480                           
  4481 ;; *************** function _fputs *****************
  4482 ;; Defined at:
  4483 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputs.c"
  4484 ;; Parameters:    Size  Location     Type
  4485 ;;  s               2    9[COMRAM] PTR const unsigned char 
  4486 ;;		 -> dbuf(80), 
  4487 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  4488 ;;		 -> sprintf@f(11), 
  4489 ;; Auto vars:     Size  Location     Type
  4490 ;;  i               2   14[COMRAM] int 
  4491 ;;  c               1   13[COMRAM] unsigned char 
  4492 ;; Return value:  Size  Location     Type
  4493 ;;                  2    9[COMRAM] int 
  4494 ;; Registers used:
  4495 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4496 ;; Tracked objects:
  4497 ;;		On entry : 0/0
  4498 ;;		On exit  : 0/0
  4499 ;;		Unchanged: 0/0
  4500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4501 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4502 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4504 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4505 ;;Total ram usage:        7 bytes
  4506 ;; Hardware stack levels used: 1
  4507 ;; Hardware stack levels required when called: 2
  4508 ;; This function calls:
  4509 ;;		_fputc
  4510 ;; This function is called by:
  4511 ;;		_pad
  4512 ;; This function uses a non-reentrant model
  4513 ;;
  4514                           
  4515                           	psect	text14
  4516  004076                     __ptext14:
  4517                           	callstack 0
  4518  004076                     _fputs:
  4519                           	callstack 22
  4520  004076  0E00               	movlw	0
  4521  004078  6E10               	movwf	(fputs@i+1)^0,c
  4522  00407A  0E00               	movlw	0
  4523  00407C  6E0F               	movwf	fputs@i^0,c
  4524  00407E  EF4C  F020         	goto	l2839
  4525  004082                     l2835:
  4526  004082  C00E  F001         	movff	fputs@c,fputc@c
  4527  004086  6A02               	clrf	(fputc@c+1)^0,c
  4528  004088  C00C  F003         	movff	fputs@fp,fputc@fp
  4529  00408C  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  4530  004090  ECBB  F01C         	call	_fputc	;wreg free
  4531  004094  4A0F               	infsnz	fputs@i^0,f,c
  4532  004096  2A10               	incf	(fputs@i+1)^0,f,c
  4533  004098                     l2839:
  4534  004098  500F               	movf	fputs@i^0,w,c
  4535  00409A  240A               	addwf	fputs@s^0,w,c
  4536  00409C  6ED9               	movwf	fsr2l,c
  4537  00409E  5010               	movf	(fputs@i+1)^0,w,c
  4538  0040A0  200B               	addwfc	(fputs@s+1)^0,w,c
  4539  0040A2  6EDA               	movwf	fsr2h,c
  4540  0040A4  50DF               	movf	indf2,w,c
  4541  0040A6  6E0E               	movwf	fputs@c^0,c
  4542  0040A8  500E               	movf	fputs@c^0,w,c
  4543  0040AA  A4D8               	btfss	status,2,c
  4544  0040AC  EF5A  F020         	goto	u3101
  4545  0040B0  EF5C  F020         	goto	u3100
  4546  0040B4                     u3101:
  4547  0040B4  EF41  F020         	goto	l2835
  4548  0040B8                     u3100:
  4549  0040B8  0012               	return		;funcret
  4550  0040BA                     __end_of_fputs:
  4551                           	callstack 0
  4552                           
  4553 ;; *************** function _fputc *****************
  4554 ;; Defined at:
  4555 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputc.c"
  4556 ;; Parameters:    Size  Location     Type
  4557 ;;  c               2    0[COMRAM] int 
  4558 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  4559 ;;		 -> sprintf@f(11), 
  4560 ;; Auto vars:     Size  Location     Type
  4561 ;;		None
  4562 ;; Return value:  Size  Location     Type
  4563 ;;                  2    0[COMRAM] int 
  4564 ;; Registers used:
  4565 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4566 ;; Tracked objects:
  4567 ;;		On entry : 0/0
  4568 ;;		On exit  : 0/0
  4569 ;;		Unchanged: 0/0
  4570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4571 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4573 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4574 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4575 ;;Total ram usage:        9 bytes
  4576 ;; Hardware stack levels used: 1
  4577 ;; Hardware stack levels required when called: 1
  4578 ;; This function calls:
  4579 ;;		_putch
  4580 ;; This function is called by:
  4581 ;;		_pad
  4582 ;;		_vfpfcnvrt
  4583 ;;		_fputs
  4584 ;; This function uses a non-reentrant model
  4585 ;;
  4586                           
  4587                           	psect	text15
  4588  003976                     __ptext15:
  4589                           	callstack 0
  4590  003976                     _fputc:
  4591                           	callstack 25
  4592  003976  5003               	movf	fputc@fp^0,w,c
  4593  003978  1004               	iorwf	(fputc@fp+1)^0,w,c
  4594  00397A  B4D8               	btfsc	status,2,c
  4595  00397C  EFC2  F01C         	goto	u2651
  4596  003980  EFC4  F01C         	goto	u2650
  4597  003984                     u2651:
  4598  003984  EFCD  F01C         	goto	l2611
  4599  003988                     u2650:
  4600  003988  5003               	movf	fputc@fp^0,w,c
  4601  00398A  1004               	iorwf	(fputc@fp+1)^0,w,c
  4602  00398C  A4D8               	btfss	status,2,c
  4603  00398E  EFCB  F01C         	goto	u2661
  4604  003992  EFCD  F01C         	goto	u2660
  4605  003996                     u2661:
  4606  003996  EFD2  F01C         	goto	l2613
  4607  00399A                     u2660:
  4608  00399A                     l2611:
  4609  00399A  5001               	movf	fputc@c^0,w,c
  4610  00399C  EC33  F021         	call	_putch
  4611  0039A0  EF1F  F01D         	goto	l1066
  4612  0039A4                     l2613:
  4613  0039A4  EE20 F009          	lfsr	2,9
  4614  0039A8  5003               	movf	fputc@fp^0,w,c
  4615  0039AA  26D9               	addwf	fsr2l,f,c
  4616  0039AC  5004               	movf	(fputc@fp+1)^0,w,c
  4617  0039AE  22DA               	addwfc	fsr2h,f,c
  4618  0039B0  50DE               	movf	postinc2,w,c
  4619  0039B2  10DE               	iorwf	postinc2,w,c
  4620  0039B4  B4D8               	btfsc	status,2,c
  4621  0039B6  EFDF  F01C         	goto	u2671
  4622  0039BA  EFE1  F01C         	goto	u2670
  4623  0039BE                     u2671:
  4624  0039BE  EFFC  F01C         	goto	l2617
  4625  0039C2                     u2670:
  4626  0039C2  EE20 F009          	lfsr	2,9
  4627  0039C6  5003               	movf	fputc@fp^0,w,c
  4628  0039C8  26D9               	addwf	fsr2l,f,c
  4629  0039CA  5004               	movf	(fputc@fp+1)^0,w,c
  4630  0039CC  22DA               	addwfc	fsr2h,f,c
  4631  0039CE  EE10 F003          	lfsr	1,3
  4632  0039D2  5003               	movf	fputc@fp^0,w,c
  4633  0039D4  26E1               	addwf	fsr1l,f,c
  4634  0039D6  5004               	movf	(fputc@fp+1)^0,w,c
  4635  0039D8  22E2               	addwfc	fsr1h,f,c
  4636  0039DA  50DE               	movf	postinc2,w,c
  4637  0039DC  5CE6               	subwf	postinc1,w,c
  4638  0039DE  50E6               	movf	postinc1,w,c
  4639  0039E0  0A80               	xorlw	128
  4640  0039E2  6E09               	movwf	(??_fputc+4)^0,c
  4641  0039E4  50DE               	movf	postinc2,w,c
  4642  0039E6  0A80               	xorlw	128
  4643  0039E8  5809               	subwfb	(??_fputc+4)^0,w,c
  4644  0039EA  B0D8               	btfsc	status,0,c
  4645  0039EC  EFFA  F01C         	goto	u2681
  4646  0039F0  EFFC  F01C         	goto	u2680
  4647  0039F4                     u2681:
  4648  0039F4  EF1F  F01D         	goto	l1066
  4649  0039F8                     u2680:
  4650  0039F8                     l2617:
  4651  0039F8  EE20 F003          	lfsr	2,3
  4652  0039FC  5003               	movf	fputc@fp^0,w,c
  4653  0039FE  26D9               	addwf	fsr2l,f,c
  4654  003A00  5004               	movf	(fputc@fp+1)^0,w,c
  4655  003A02  22DA               	addwfc	fsr2h,f,c
  4656  003A04  CFDE F005          	movff	postinc2,??_fputc
  4657  003A08  CFDD F006          	movff	postdec2,??_fputc+1
  4658  003A0C  C003  FFD9         	movff	fputc@fp,fsr2l
  4659  003A10  C004  FFDA         	movff	fputc@fp+1,fsr2h
  4660  003A14  CFDE F007          	movff	postinc2,??_fputc+2
  4661  003A18  CFDD F008          	movff	postdec2,??_fputc+3
  4662  003A1C  5005               	movf	??_fputc^0,w,c
  4663  003A1E  2407               	addwf	(??_fputc+2)^0,w,c
  4664  003A20  6ED9               	movwf	fsr2l,c
  4665  003A22  5006               	movf	(??_fputc+1)^0,w,c
  4666  003A24  2008               	addwfc	(??_fputc+3)^0,w,c
  4667  003A26  6EDA               	movwf	fsr2h,c
  4668  003A28  C001  FFDF         	movff	fputc@c,indf2
  4669  003A2C  EE20 F003          	lfsr	2,3
  4670  003A30  5003               	movf	fputc@fp^0,w,c
  4671  003A32  26D9               	addwf	fsr2l,f,c
  4672  003A34  5004               	movf	(fputc@fp+1)^0,w,c
  4673  003A36  22DA               	addwfc	fsr2h,f,c
  4674  003A38  2ADE               	incf	postinc2,f,c
  4675  003A3A  0E00               	movlw	0
  4676  003A3C  22DD               	addwfc	postdec2,f,c
  4677  003A3E                     l1066:
  4678  003A3E  0012               	return		;funcret
  4679  003A40                     __end_of_fputc:
  4680                           	callstack 0
  4681                           
  4682 ;; *************** function _putch *****************
  4683 ;; Defined at:
  4684 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\putch.c"
  4685 ;; Parameters:    Size  Location     Type
  4686 ;;  c               1    wreg     unsigned char 
  4687 ;; Auto vars:     Size  Location     Type
  4688 ;;  c               1    0[COMRAM] unsigned char 
  4689 ;; Return value:  Size  Location     Type
  4690 ;;                  1    wreg      void 
  4691 ;; Registers used:
  4692 ;;		wreg
  4693 ;; Tracked objects:
  4694 ;;		On entry : 0/0
  4695 ;;		On exit  : 0/0
  4696 ;;		Unchanged: 0/0
  4697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4702 ;;Total ram usage:        0 bytes
  4703 ;; Hardware stack levels used: 1
  4704 ;; This function calls:
  4705 ;;		Nothing
  4706 ;; This function is called by:
  4707 ;;		_fputc
  4708 ;; This function uses a non-reentrant model
  4709 ;;
  4710                           
  4711                           	psect	text16
  4712  004266                     __ptext16:
  4713                           	callstack 0
  4714  004266                     _putch:
  4715                           	callstack 25
  4716  004266  0012               	return		;funcret
  4717  004268                     __end_of_putch:
  4718                           	callstack 0
  4719                           
  4720 ;; *************** function _floorf *****************
  4721 ;; Defined at:
  4722 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\floorf.c"
  4723 ;; Parameters:    Size  Location     Type
  4724 ;;  x               4   25[COMRAM] float 
  4725 ;; Auto vars:     Size  Location     Type
  4726 ;;  u               4   41[COMRAM] struct .
  4727 ;;  m               4   35[COMRAM] unsigned long 
  4728 ;;  e               2   39[COMRAM] int 
  4729 ;; Return value:  Size  Location     Type
  4730 ;;                  4   25[COMRAM] float 
  4731 ;; Registers used:
  4732 ;;		wreg, status,2, status,0
  4733 ;; Tracked objects:
  4734 ;;		On entry : 0/0
  4735 ;;		On exit  : 0/0
  4736 ;;		Unchanged: 0/0
  4737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4738 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4739 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4740 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4741 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4742 ;;Total ram usage:       20 bytes
  4743 ;; Hardware stack levels used: 1
  4744 ;; This function calls:
  4745 ;;		Nothing
  4746 ;; This function is called by:
  4747 ;;		_efgtoa
  4748 ;; This function uses a non-reentrant model
  4749 ;;
  4750                           
  4751                           	psect	text17
  4752  002C3E                     __ptext17:
  4753                           	callstack 0
  4754  002C3E                     _floorf:
  4755                           	callstack 25
  4756  002C3E  C0BE  F02A         	movff	floorf@F526,floorf@u
  4757  002C42  C0BF  F02B         	movff	floorf@F526+1,floorf@u+1
  4758  002C46  C0C0  F02C         	movff	floorf@F526+2,floorf@u+2
  4759  002C4A  C0C1  F02D         	movff	floorf@F526+3,floorf@u+3
  4760  002C4E  C01A  F02A         	movff	floorf@x,floorf@u
  4761  002C52  C01B  F02B         	movff	floorf@x+1,floorf@u+1
  4762  002C56  C01C  F02C         	movff	floorf@x+2,floorf@u+2
  4763  002C5A  C01D  F02D         	movff	floorf@x+3,floorf@u+3
  4764  002C5E  0E81               	movlw	129
  4765  002C60  6E1E               	movwf	??_floorf^0,c
  4766  002C62  0EFF               	movlw	255
  4767  002C64  6E1F               	movwf	(??_floorf+1)^0,c
  4768  002C66  C02A  F020         	movff	floorf@u,??_floorf+2
  4769  002C6A  C02B  F021         	movff	floorf@u+1,??_floorf+3
  4770  002C6E  C02C  F022         	movff	floorf@u+2,??_floorf+4
  4771  002C72  C02D  F023         	movff	floorf@u+3,??_floorf+5
  4772  002C76  0E18               	movlw	24
  4773  002C78  EF43  F016         	goto	u3970
  4774  002C7C                     u3975:
  4775  002C7C  90D8               	bcf	status,0,c
  4776  002C7E  3223               	rrcf	(??_floorf+5)^0,f,c
  4777  002C80  3222               	rrcf	(??_floorf+4)^0,f,c
  4778  002C82  3221               	rrcf	(??_floorf+3)^0,f,c
  4779  002C84  3220               	rrcf	(??_floorf+2)^0,f,c
  4780  002C86                     u3970:
  4781  002C86  2EE8               	decfsz	wreg,f,c
  4782  002C88  EF3E  F016         	goto	u3975
  4783  002C8C  5020               	movf	(??_floorf+2)^0,w,c
  4784  002C8E  241E               	addwf	??_floorf^0,w,c
  4785  002C90  6E28               	movwf	floorf@e^0,c
  4786  002C92  0E00               	movlw	0
  4787  002C94  201F               	addwfc	(??_floorf+1)^0,w,c
  4788  002C96  6E29               	movwf	(floorf@e+1)^0,c
  4789  002C98  BE29               	btfsc	(floorf@e+1)^0,7,c
  4790  002C9A  EF58  F016         	goto	u3981
  4791  002C9E  5029               	movf	(floorf@e+1)^0,w,c
  4792  002CA0  E109               	bnz	u3980
  4793  002CA2  0E17               	movlw	23
  4794  002CA4  5C28               	subwf	floorf@e^0,w,c
  4795  002CA6  A0D8               	btfss	status,0,c
  4796  002CA8  EF58  F016         	goto	u3981
  4797  002CAC  EF5A  F016         	goto	u3980
  4798  002CB0                     u3981:
  4799  002CB0  EF64  F016         	goto	l3359
  4800  002CB4                     u3980:
  4801  002CB4                     l3357:
  4802  002CB4  C01A  F01A         	movff	floorf@x,?_floorf
  4803  002CB8  C01B  F01B         	movff	floorf@x+1,?_floorf+1
  4804  002CBC  C01C  F01C         	movff	floorf@x+2,?_floorf+2
  4805  002CC0  C01D  F01D         	movff	floorf@x+3,?_floorf+3
  4806  002CC4  EF27  F017         	goto	l1027
  4807  002CC8                     l3359:
  4808  002CC8  BE29               	btfsc	(floorf@e+1)^0,7,c
  4809  002CCA  EF69  F016         	goto	u3991
  4810  002CCE  EF6B  F016         	goto	u3990
  4811  002CD2                     u3991:
  4812  002CD2  EFDB  F016         	goto	l3369
  4813  002CD6                     u3990:
  4814  002CD6  C028  F01E         	movff	floorf@e,??_floorf
  4815  002CDA  0EFF               	movlw	255
  4816  002CDC  6E1F               	movwf	(??_floorf+1)^0,c
  4817  002CDE  0EFF               	movlw	255
  4818  002CE0  6E20               	movwf	(??_floorf+2)^0,c
  4819  002CE2  0E7F               	movlw	127
  4820  002CE4  6E21               	movwf	(??_floorf+3)^0,c
  4821  002CE6  0E00               	movlw	0
  4822  002CE8  6E22               	movwf	(??_floorf+4)^0,c
  4823  002CEA                     u4005:
  4824  002CEA  661E               	tstfsz	??_floorf^0,c
  4825  002CEC  EF7A  F016         	goto	u4006
  4826  002CF0  EF82  F016         	goto	u4007
  4827  002CF4                     u4006:
  4828  002CF4  3422               	rlcf	(??_floorf+4)^0,w,c
  4829  002CF6  3222               	rrcf	(??_floorf+4)^0,f,c
  4830  002CF8  3221               	rrcf	(??_floorf+3)^0,f,c
  4831  002CFA  3220               	rrcf	(??_floorf+2)^0,f,c
  4832  002CFC  321F               	rrcf	(??_floorf+1)^0,f,c
  4833  002CFE  2E1E               	decfsz	??_floorf^0,f,c
  4834  002D00  EF75  F016         	goto	u4005
  4835  002D04                     u4007:
  4836  002D04  C01F  F024         	movff	??_floorf+1,floorf@m
  4837  002D08  C020  F025         	movff	??_floorf+2,floorf@m+1
  4838  002D0C  C021  F026         	movff	??_floorf+3,floorf@m+2
  4839  002D10  C022  F027         	movff	??_floorf+4,floorf@m+3
  4840  002D14  5024               	movf	floorf@m^0,w,c
  4841  002D16  142A               	andwf	floorf@u^0,w,c
  4842  002D18  6E1E               	movwf	??_floorf^0,c
  4843  002D1A  5025               	movf	(floorf@m+1)^0,w,c
  4844  002D1C  142B               	andwf	(floorf@u+1)^0,w,c
  4845  002D1E  6E1F               	movwf	(??_floorf+1)^0,c
  4846  002D20  5026               	movf	(floorf@m+2)^0,w,c
  4847  002D22  142C               	andwf	(floorf@u+2)^0,w,c
  4848  002D24  6E20               	movwf	(??_floorf+2)^0,c
  4849  002D26  5027               	movf	(floorf@m+3)^0,w,c
  4850  002D28  142D               	andwf	(floorf@u+3)^0,w,c
  4851  002D2A  6E21               	movwf	(??_floorf+3)^0,c
  4852  002D2C  501E               	movf	??_floorf^0,w,c
  4853  002D2E  101F               	iorwf	(??_floorf+1)^0,w,c
  4854  002D30  1020               	iorwf	(??_floorf+2)^0,w,c
  4855  002D32  1021               	iorwf	(??_floorf+3)^0,w,c
  4856  002D34  A4D8               	btfss	status,2,c
  4857  002D36  EF9F  F016         	goto	u4011
  4858  002D3A  EFA1  F016         	goto	u4010
  4859  002D3E                     u4011:
  4860  002D3E  EFA3  F016         	goto	l3365
  4861  002D42                     u4010:
  4862  002D42  EF5A  F016         	goto	l3357
  4863  002D46                     l3365:
  4864  002D46  C02A  F01E         	movff	floorf@u,??_floorf
  4865  002D4A  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  4866  002D4E  C02C  F020         	movff	floorf@u+2,??_floorf+2
  4867  002D52  C02D  F021         	movff	floorf@u+3,??_floorf+3
  4868  002D56  0E20               	movlw	32
  4869  002D58  EFB3  F016         	goto	u4020
  4870  002D5C                     u4025:
  4871  002D5C  90D8               	bcf	status,0,c
  4872  002D5E  3221               	rrcf	(??_floorf+3)^0,f,c
  4873  002D60  3220               	rrcf	(??_floorf+2)^0,f,c
  4874  002D62  321F               	rrcf	(??_floorf+1)^0,f,c
  4875  002D64  321E               	rrcf	??_floorf^0,f,c
  4876  002D66                     u4020:
  4877  002D66  2EE8               	decfsz	wreg,f,c
  4878  002D68  EFAE  F016         	goto	u4025
  4879  002D6C  501E               	movf	??_floorf^0,w,c
  4880  002D6E  101F               	iorwf	(??_floorf+1)^0,w,c
  4881  002D70  1020               	iorwf	(??_floorf+2)^0,w,c
  4882  002D72  1021               	iorwf	(??_floorf+3)^0,w,c
  4883  002D74  B4D8               	btfsc	status,2,c
  4884  002D76  EFBF  F016         	goto	u4031
  4885  002D7A  EFC1  F016         	goto	u4030
  4886  002D7E                     u4031:
  4887  002D7E  EFC9  F016         	goto	l1030
  4888  002D82                     u4030:
  4889  002D82  5024               	movf	floorf@m^0,w,c
  4890  002D84  262A               	addwf	floorf@u^0,f,c
  4891  002D86  5025               	movf	(floorf@m+1)^0,w,c
  4892  002D88  222B               	addwfc	(floorf@u+1)^0,f,c
  4893  002D8A  5026               	movf	(floorf@m+2)^0,w,c
  4894  002D8C  222C               	addwfc	(floorf@u+2)^0,f,c
  4895  002D8E  5027               	movf	(floorf@m+3)^0,w,c
  4896  002D90  222D               	addwfc	(floorf@u+3)^0,f,c
  4897  002D92                     l1030:
  4898  002D92  1C24               	comf	floorf@m^0,w,c
  4899  002D94  6E1E               	movwf	??_floorf^0,c
  4900  002D96  1C25               	comf	(floorf@m+1)^0,w,c
  4901  002D98  6E1F               	movwf	(??_floorf+1)^0,c
  4902  002D9A  1C26               	comf	(floorf@m+2)^0,w,c
  4903  002D9C  6E20               	movwf	(??_floorf+2)^0,c
  4904  002D9E  1C27               	comf	(floorf@m+3)^0,w,c
  4905  002DA0  6E21               	movwf	(??_floorf+3)^0,c
  4906  002DA2  501E               	movf	??_floorf^0,w,c
  4907  002DA4  162A               	andwf	floorf@u^0,f,c
  4908  002DA6  501F               	movf	(??_floorf+1)^0,w,c
  4909  002DA8  162B               	andwf	(floorf@u+1)^0,f,c
  4910  002DAA  5020               	movf	(??_floorf+2)^0,w,c
  4911  002DAC  162C               	andwf	(floorf@u+2)^0,f,c
  4912  002DAE  5021               	movf	(??_floorf+3)^0,w,c
  4913  002DB0  162D               	andwf	(floorf@u+3)^0,f,c
  4914  002DB2  EF1F  F017         	goto	l3377
  4915  002DB6                     l3369:
  4916  002DB6  C02A  F01E         	movff	floorf@u,??_floorf
  4917  002DBA  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  4918  002DBE  C02C  F020         	movff	floorf@u+2,??_floorf+2
  4919  002DC2  C02D  F021         	movff	floorf@u+3,??_floorf+3
  4920  002DC6  0E20               	movlw	32
  4921  002DC8  EFEB  F016         	goto	u4040
  4922  002DCC                     u4045:
  4923  002DCC  90D8               	bcf	status,0,c
  4924  002DCE  3221               	rrcf	(??_floorf+3)^0,f,c
  4925  002DD0  3220               	rrcf	(??_floorf+2)^0,f,c
  4926  002DD2  321F               	rrcf	(??_floorf+1)^0,f,c
  4927  002DD4  321E               	rrcf	??_floorf^0,f,c
  4928  002DD6                     u4040:
  4929  002DD6  2EE8               	decfsz	wreg,f,c
  4930  002DD8  EFE6  F016         	goto	u4045
  4931  002DDC  501E               	movf	??_floorf^0,w,c
  4932  002DDE  101F               	iorwf	(??_floorf+1)^0,w,c
  4933  002DE0  1020               	iorwf	(??_floorf+2)^0,w,c
  4934  002DE2  1021               	iorwf	(??_floorf+3)^0,w,c
  4935  002DE4  A4D8               	btfss	status,2,c
  4936  002DE6  EFF7  F016         	goto	u4051
  4937  002DEA  EFF9  F016         	goto	u4050
  4938  002DEE                     u4051:
  4939  002DEE  EF03  F017         	goto	l3373
  4940  002DF2                     u4050:
  4941  002DF2  0E00               	movlw	0
  4942  002DF4  6E2A               	movwf	floorf@u^0,c
  4943  002DF6  0E00               	movlw	0
  4944  002DF8  6E2B               	movwf	(floorf@u+1)^0,c
  4945  002DFA  0E00               	movlw	0
  4946  002DFC  6E2C               	movwf	(floorf@u+2)^0,c
  4947  002DFE  0E00               	movlw	0
  4948  002E00  6E2D               	movwf	(floorf@u+3)^0,c
  4949  002E02  EF1F  F017         	goto	l3377
  4950  002E06                     l3373:
  4951  002E06  90D8               	bcf	status,0,c
  4952  002E08  342A               	rlcf	floorf@u^0,w,c
  4953  002E0A  6E1E               	movwf	??_floorf^0,c
  4954  002E0C  342B               	rlcf	(floorf@u+1)^0,w,c
  4955  002E0E  6E1F               	movwf	(??_floorf+1)^0,c
  4956  002E10  342C               	rlcf	(floorf@u+2)^0,w,c
  4957  002E12  6E20               	movwf	(??_floorf+2)^0,c
  4958  002E14  342D               	rlcf	(floorf@u+3)^0,w,c
  4959  002E16  6E21               	movwf	(??_floorf+3)^0,c
  4960  002E18  501E               	movf	??_floorf^0,w,c
  4961  002E1A  101F               	iorwf	(??_floorf+1)^0,w,c
  4962  002E1C  1020               	iorwf	(??_floorf+2)^0,w,c
  4963  002E1E  1021               	iorwf	(??_floorf+3)^0,w,c
  4964  002E20  B4D8               	btfsc	status,2,c
  4965  002E22  EF15  F017         	goto	u4061
  4966  002E26  EF17  F017         	goto	u4060
  4967  002E2A                     u4061:
  4968  002E2A  EF1F  F017         	goto	l3377
  4969  002E2E                     u4060:
  4970  002E2E  0E00               	movlw	0
  4971  002E30  6E2A               	movwf	floorf@u^0,c
  4972  002E32  0E00               	movlw	0
  4973  002E34  6E2B               	movwf	(floorf@u+1)^0,c
  4974  002E36  0E80               	movlw	128
  4975  002E38  6E2C               	movwf	(floorf@u+2)^0,c
  4976  002E3A  0EBF               	movlw	191
  4977  002E3C  6E2D               	movwf	(floorf@u+3)^0,c
  4978  002E3E                     l3377:
  4979  002E3E  C02A  F01A         	movff	floorf@u,?_floorf
  4980  002E42  C02B  F01B         	movff	floorf@u+1,?_floorf+1
  4981  002E46  C02C  F01C         	movff	floorf@u+2,?_floorf+2
  4982  002E4A  C02D  F01D         	movff	floorf@u+3,?_floorf+3
  4983  002E4E                     l1027:
  4984  002E4E  0012               	return		;funcret
  4985  002E50                     __end_of_floorf:
  4986                           	callstack 0
  4987                           
  4988 ;; *************** function ___fpclassifyf *****************
  4989 ;; Defined at:
  4990 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__fpclassifyf.c"
  4991 ;; Parameters:    Size  Location     Type
  4992 ;;  x               4    0[COMRAM] float 
  4993 ;; Auto vars:     Size  Location     Type
  4994 ;;  u               4   10[COMRAM] struct .
  4995 ;;  e               2    8[COMRAM] int 
  4996 ;; Return value:  Size  Location     Type
  4997 ;;                  2    0[COMRAM] int 
  4998 ;; Registers used:
  4999 ;;		wreg, status,2, status,0
  5000 ;; Tracked objects:
  5001 ;;		On entry : 0/0
  5002 ;;		On exit  : 0/0
  5003 ;;		Unchanged: 0/0
  5004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5005 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5006 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5007 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5008 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5009 ;;Total ram usage:       14 bytes
  5010 ;; Hardware stack levels used: 1
  5011 ;; This function calls:
  5012 ;;		Nothing
  5013 ;; This function is called by:
  5014 ;;		_efgtoa
  5015 ;; This function uses a non-reentrant model
  5016 ;;
  5017                           
  5018                           	psect	text18
  5019  003796                     __ptext18:
  5020                           	callstack 0
  5021  003796                     ___fpclassifyf:
  5022                           	callstack 25
  5023  003796  C0C2  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  5024  00379A  C0C3  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  5025  00379E  C0C4  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  5026  0037A2  C0C5  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  5027  0037A6  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  5028  0037AA  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5029  0037AE  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5030  0037B2  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5031  0037B6  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5032  0037BA  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5033  0037BE  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5034  0037C2  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5035  0037C6  0E18               	movlw	24
  5036  0037C8  EFEB  F01B         	goto	u3870
  5037  0037CC                     u3875:
  5038  0037CC  90D8               	bcf	status,0,c
  5039  0037CE  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  5040  0037D0  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  5041  0037D2  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  5042  0037D4  3205               	rrcf	??___fpclassifyf^0,f,c
  5043  0037D6                     u3870:
  5044  0037D6  2EE8               	decfsz	wreg,f,c
  5045  0037D8  EFE6  F01B         	goto	u3875
  5046  0037DC  5005               	movf	??___fpclassifyf^0,w,c
  5047  0037DE  6E09               	movwf	___fpclassifyf@e^0,c
  5048  0037E0  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  5049  0037E2  5009               	movf	___fpclassifyf@e^0,w,c
  5050  0037E4  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5051  0037E6  A4D8               	btfss	status,2,c
  5052  0037E8  EFF8  F01B         	goto	u3881
  5053  0037EC  EFFA  F01B         	goto	u3880
  5054  0037F0                     u3881:
  5055  0037F0  EF1A  F01C         	goto	l3329
  5056  0037F4                     u3880:
  5057  0037F4  90D8               	bcf	status,0,c
  5058  0037F6  340B               	rlcf	___fpclassifyf@u^0,w,c
  5059  0037F8  6E05               	movwf	??___fpclassifyf^0,c
  5060  0037FA  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5061  0037FC  6E06               	movwf	(??___fpclassifyf+1)^0,c
  5062  0037FE  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5063  003800  6E07               	movwf	(??___fpclassifyf+2)^0,c
  5064  003802  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5065  003804  6E08               	movwf	(??___fpclassifyf+3)^0,c
  5066  003806  5005               	movf	??___fpclassifyf^0,w,c
  5067  003808  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5068  00380A  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5069  00380C  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5070  00380E  A4D8               	btfss	status,2,c
  5071  003810  EF0C  F01C         	goto	u3891
  5072  003814  EF0E  F01C         	goto	u3890
  5073  003818                     u3891:
  5074  003818  EF14  F01C         	goto	l3325
  5075  00381C                     u3890:
  5076  00381C  0E00               	movlw	0
  5077  00381E  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5078  003820  0E02               	movlw	2
  5079  003822  6E01               	movwf	?___fpclassifyf^0,c
  5080  003824  EF49  F01C         	goto	l995
  5081  003828                     l3325:
  5082  003828  0E00               	movlw	0
  5083  00382A  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5084  00382C  0E03               	movlw	3
  5085  00382E  6E01               	movwf	?___fpclassifyf^0,c
  5086  003830  EF49  F01C         	goto	l995
  5087  003834                     l3329:
  5088  003834  2809               	incf	___fpclassifyf@e^0,w,c
  5089  003836  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5090  003838  A4D8               	btfss	status,2,c
  5091  00383A  EF21  F01C         	goto	u3901
  5092  00383E  EF23  F01C         	goto	u3900
  5093  003842                     u3901:
  5094  003842  EF45  F01C         	goto	l3335
  5095  003846                     u3900:
  5096  003846  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5097  00384A  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5098  00384E  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5099  003852  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5100  003856  0E09               	movlw	9
  5101  003858                     u3915:
  5102  003858  90D8               	bcf	status,0,c
  5103  00385A  3605               	rlcf	??___fpclassifyf^0,f,c
  5104  00385C  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  5105  00385E  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  5106  003860  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  5107  003862  2EE8               	decfsz	wreg,f,c
  5108  003864  EF2C  F01C         	goto	u3915
  5109  003868  5005               	movf	??___fpclassifyf^0,w,c
  5110  00386A  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5111  00386C  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5112  00386E  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5113  003870  B4D8               	btfsc	status,2,c
  5114  003872  EF3D  F01C         	goto	u3921
  5115  003876  EF40  F01C         	goto	u3920
  5116  00387A                     u3921:
  5117  00387A  0E01               	movlw	1
  5118  00387C  EF41  F01C         	goto	u3930
  5119  003880                     u3920:
  5120  003880  0E00               	movlw	0
  5121  003882                     u3930:
  5122  003882  6E01               	movwf	?___fpclassifyf^0,c
  5123  003884  6A02               	clrf	(?___fpclassifyf+1)^0,c
  5124  003886  EF49  F01C         	goto	l995
  5125  00388A                     l3335:
  5126  00388A  0E00               	movlw	0
  5127  00388C  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5128  00388E  0E04               	movlw	4
  5129  003890  6E01               	movwf	?___fpclassifyf^0,c
  5130  003892                     l995:
  5131  003892  0012               	return		;funcret
  5132  003894                     __end_of___fpclassifyf:
  5133                           	callstack 0
  5134                           
  5135 ;; *************** function ___fltol *****************
  5136 ;; Defined at:
  5137 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fltol.c"
  5138 ;; Parameters:    Size  Location     Type
  5139 ;;  f1              4    0[COMRAM] int 
  5140 ;; Auto vars:     Size  Location     Type
  5141 ;;  exp1            1    9[COMRAM] unsigned char 
  5142 ;;  sign1           1    8[COMRAM] unsigned char 
  5143 ;; Return value:  Size  Location     Type
  5144 ;;                  4    0[COMRAM] long 
  5145 ;; Registers used:
  5146 ;;		wreg, status,2, status,0
  5147 ;; Tracked objects:
  5148 ;;		On entry : 0/0
  5149 ;;		On exit  : 0/0
  5150 ;;		Unchanged: 0/0
  5151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5152 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5153 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5154 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5155 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5156 ;;Total ram usage:       10 bytes
  5157 ;; Hardware stack levels used: 1
  5158 ;; This function calls:
  5159 ;;		Nothing
  5160 ;; This function is called by:
  5161 ;;		_main
  5162 ;;		_efgtoa
  5163 ;; This function uses a non-reentrant model
  5164 ;;
  5165                           
  5166                           	psect	text19
  5167  00348E                     __ptext19:
  5168                           	callstack 0
  5169  00348E                     ___fltol:
  5170                           	callstack 30
  5171  00348E  3403               	rlcf	(___fltol@f1+2)^0,w,c
  5172  003490  3404               	rlcf	(___fltol@f1+3)^0,w,c
  5173  003492  6E0A               	movwf	___fltol@exp1^0,c
  5174  003494  500A               	movf	___fltol@exp1^0,w,c
  5175  003496  A4D8               	btfss	status,2,c
  5176  003498  EF50  F01A         	goto	u3761
  5177  00349C  EF52  F01A         	goto	u3760
  5178  0034A0                     u3761:
  5179  0034A0  EF5C  F01A         	goto	l3257
  5180  0034A4                     u3760:
  5181  0034A4                     l3253:
  5182  0034A4  0E00               	movlw	0
  5183  0034A6  6E01               	movwf	?___fltol^0,c
  5184  0034A8  0E00               	movlw	0
  5185  0034AA  6E02               	movwf	(?___fltol+1)^0,c
  5186  0034AC  0E00               	movlw	0
  5187  0034AE  6E03               	movwf	(?___fltol+2)^0,c
  5188  0034B0  0E00               	movlw	0
  5189  0034B2  6E04               	movwf	(?___fltol+3)^0,c
  5190  0034B4  EFC9  F01A         	goto	l444
  5191  0034B8                     l3257:
  5192  0034B8  C001  F005         	movff	___fltol@f1,??___fltol
  5193  0034BC  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  5194  0034C0  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  5195  0034C4  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  5196  0034C8  0E20               	movlw	32
  5197  0034CA  EF6C  F01A         	goto	u3770
  5198  0034CE                     u3775:
  5199  0034CE  90D8               	bcf	status,0,c
  5200  0034D0  3208               	rrcf	(??___fltol+3)^0,f,c
  5201  0034D2  3207               	rrcf	(??___fltol+2)^0,f,c
  5202  0034D4  3206               	rrcf	(??___fltol+1)^0,f,c
  5203  0034D6  3205               	rrcf	??___fltol^0,f,c
  5204  0034D8                     u3770:
  5205  0034D8  2EE8               	decfsz	wreg,f,c
  5206  0034DA  EF67  F01A         	goto	u3775
  5207  0034DE  5005               	movf	??___fltol^0,w,c
  5208  0034E0  6E09               	movwf	___fltol@sign1^0,c
  5209  0034E2  8E03               	bsf	(___fltol@f1+2)^0,7,c
  5210  0034E4  0EFF               	movlw	255
  5211  0034E6  1601               	andwf	___fltol@f1^0,f,c
  5212  0034E8  0EFF               	movlw	255
  5213  0034EA  1602               	andwf	(___fltol@f1+1)^0,f,c
  5214  0034EC  0EFF               	movlw	255
  5215  0034EE  1603               	andwf	(___fltol@f1+2)^0,f,c
  5216  0034F0  0E00               	movlw	0
  5217  0034F2  1604               	andwf	(___fltol@f1+3)^0,f,c
  5218  0034F4  0E96               	movlw	150
  5219  0034F6  5E0A               	subwf	___fltol@exp1^0,f,c
  5220  0034F8  BE0A               	btfsc	___fltol@exp1^0,7,c
  5221  0034FA  EF83  F01A         	goto	u3780
  5222  0034FE  EF81  F01A         	goto	u3781
  5223  003502                     u3781:
  5224  003502  EF99  F01A         	goto	l3277
  5225  003506                     u3780:
  5226  003506  500A               	movf	___fltol@exp1^0,w,c
  5227  003508  0A80               	xorlw	128
  5228  00350A  0F97               	addlw	151
  5229  00350C  B0D8               	btfsc	status,0,c
  5230  00350E  EF8B  F01A         	goto	u3791
  5231  003512  EF8D  F01A         	goto	u3790
  5232  003516                     u3791:
  5233  003516  EF8F  F01A         	goto	l3273
  5234  00351A                     u3790:
  5235  00351A  EF52  F01A         	goto	l3253
  5236  00351E                     l3273:
  5237  00351E  90D8               	bcf	status,0,c
  5238  003520  3204               	rrcf	(___fltol@f1+3)^0,f,c
  5239  003522  3203               	rrcf	(___fltol@f1+2)^0,f,c
  5240  003524  3202               	rrcf	(___fltol@f1+1)^0,f,c
  5241  003526  3201               	rrcf	___fltol@f1^0,f,c
  5242  003528  3E0A               	incfsz	___fltol@exp1^0,f,c
  5243  00352A  EF8F  F01A         	goto	l3273
  5244  00352E  EFB1  F01A         	goto	l3287
  5245  003532                     l3277:
  5246  003532  0E1F               	movlw	31
  5247  003534  640A               	cpfsgt	___fltol@exp1^0,c
  5248  003536  EF9F  F01A         	goto	u3801
  5249  00353A  EFA1  F01A         	goto	u3800
  5250  00353E                     u3801:
  5251  00353E  EFA9  F01A         	goto	l3285
  5252  003542                     u3800:
  5253  003542  EF52  F01A         	goto	l3253
  5254  003546                     l3283:
  5255  003546  90D8               	bcf	status,0,c
  5256  003548  3601               	rlcf	___fltol@f1^0,f,c
  5257  00354A  3602               	rlcf	(___fltol@f1+1)^0,f,c
  5258  00354C  3603               	rlcf	(___fltol@f1+2)^0,f,c
  5259  00354E  3604               	rlcf	(___fltol@f1+3)^0,f,c
  5260  003550  060A               	decf	___fltol@exp1^0,f,c
  5261  003552                     l3285:
  5262  003552  500A               	movf	___fltol@exp1^0,w,c
  5263  003554  A4D8               	btfss	status,2,c
  5264  003556  EFAF  F01A         	goto	u3811
  5265  00355A  EFB1  F01A         	goto	u3810
  5266  00355E                     u3811:
  5267  00355E  EFA3  F01A         	goto	l3283
  5268  003562                     u3810:
  5269  003562                     l3287:
  5270  003562  5009               	movf	___fltol@sign1^0,w,c
  5271  003564  B4D8               	btfsc	status,2,c
  5272  003566  EFB7  F01A         	goto	u3821
  5273  00356A  EFB9  F01A         	goto	u3820
  5274  00356E                     u3821:
  5275  00356E  EFC1  F01A         	goto	l3291
  5276  003572                     u3820:
  5277  003572  1E04               	comf	(___fltol@f1+3)^0,f,c
  5278  003574  1E03               	comf	(___fltol@f1+2)^0,f,c
  5279  003576  1E02               	comf	(___fltol@f1+1)^0,f,c
  5280  003578  6C01               	negf	___fltol@f1^0,c
  5281  00357A  0E00               	movlw	0
  5282  00357C  2202               	addwfc	(___fltol@f1+1)^0,f,c
  5283  00357E  2203               	addwfc	(___fltol@f1+2)^0,f,c
  5284  003580  2204               	addwfc	(___fltol@f1+3)^0,f,c
  5285  003582                     l3291:
  5286  003582  C001  F001         	movff	___fltol@f1,?___fltol
  5287  003586  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  5288  00358A  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  5289  00358E  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  5290  003592                     l444:
  5291  003592  0012               	return		;funcret
  5292  003594                     __end_of___fltol:
  5293                           	callstack 0
  5294                           
  5295 ;; *************** function ___flsub *****************
  5296 ;; Defined at:
  5297 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
  5298 ;; Parameters:    Size  Location     Type
  5299 ;;  b               4   25[COMRAM] long 
  5300 ;;  a               4   29[COMRAM] long 
  5301 ;; Auto vars:     Size  Location     Type
  5302 ;;		None
  5303 ;; Return value:  Size  Location     Type
  5304 ;;                  4   25[COMRAM] long 
  5305 ;; Registers used:
  5306 ;;		wreg, status,2, status,0, cstack
  5307 ;; Tracked objects:
  5308 ;;		On entry : 0/0
  5309 ;;		On exit  : 0/0
  5310 ;;		Unchanged: 0/0
  5311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5312 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5315 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5316 ;;Total ram usage:        8 bytes
  5317 ;; Hardware stack levels used: 1
  5318 ;; Hardware stack levels required when called: 1
  5319 ;; This function calls:
  5320 ;;		___fladd
  5321 ;; This function is called by:
  5322 ;;		_efgtoa
  5323 ;; This function uses a non-reentrant model
  5324 ;;
  5325                           
  5326                           	psect	text20
  5327  004030                     __ptext20:
  5328                           	callstack 0
  5329  004030                     ___flsub:
  5330                           	callstack 24
  5331  004030  0E00               	movlw	0
  5332  004032  1A1E               	xorwf	___flsub@a^0,f,c
  5333  004034  0E00               	movlw	0
  5334  004036  1A1F               	xorwf	(___flsub@a+1)^0,f,c
  5335  004038  0E00               	movlw	0
  5336  00403A  1A20               	xorwf	(___flsub@a+2)^0,f,c
  5337  00403C  0E80               	movlw	128
  5338  00403E  1A21               	xorwf	(___flsub@a+3)^0,f,c
  5339  004040  C01A  F001         	movff	___flsub@b,___fladd@b
  5340  004044  C01B  F002         	movff	___flsub@b+1,___fladd@b+1
  5341  004048  C01C  F003         	movff	___flsub@b+2,___fladd@b+2
  5342  00404C  C01D  F004         	movff	___flsub@b+3,___fladd@b+3
  5343  004050  C01E  F005         	movff	___flsub@a,___fladd@a
  5344  004054  C01F  F006         	movff	___flsub@a+1,___fladd@a+1
  5345  004058  C020  F007         	movff	___flsub@a+2,___fladd@a+2
  5346  00405C  C021  F008         	movff	___flsub@a+3,___fladd@a+3
  5347  004060  ECAD  F00D         	call	___fladd	;wreg free
  5348  004064  C001  F01A         	movff	?___fladd,?___flsub
  5349  004068  C002  F01B         	movff	?___fladd+1,?___flsub+1
  5350  00406C  C003  F01C         	movff	?___fladd+2,?___flsub+2
  5351  004070  C004  F01D         	movff	?___fladd+3,?___flsub+3
  5352  004074  0012               	return		;funcret
  5353  004076                     __end_of___flsub:
  5354                           	callstack 0
  5355                           
  5356 ;; *************** function ___fladd *****************
  5357 ;; Defined at:
  5358 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
  5359 ;; Parameters:    Size  Location     Type
  5360 ;;  b               4    0[COMRAM] long 
  5361 ;;  a               4    4[COMRAM] long 
  5362 ;; Auto vars:     Size  Location     Type
  5363 ;;  grs             1   15[COMRAM] unsigned char 
  5364 ;;  bexp            1   14[COMRAM] unsigned char 
  5365 ;;  aexp            1   13[COMRAM] unsigned char 
  5366 ;;  signs           1   12[COMRAM] unsigned char 
  5367 ;; Return value:  Size  Location     Type
  5368 ;;                  4    0[COMRAM] unsigned char 
  5369 ;; Registers used:
  5370 ;;		wreg, status,2, status,0
  5371 ;; Tracked objects:
  5372 ;;		On entry : 0/0
  5373 ;;		On exit  : 0/0
  5374 ;;		Unchanged: 0/0
  5375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5376 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5377 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5378 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5379 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5380 ;;Total ram usage:       16 bytes
  5381 ;; Hardware stack levels used: 1
  5382 ;; This function calls:
  5383 ;;		Nothing
  5384 ;; This function is called by:
  5385 ;;		___flsub
  5386 ;;		_efgtoa
  5387 ;; This function uses a non-reentrant model
  5388 ;;
  5389                           
  5390                           	psect	text21
  5391  001B5A                     __ptext21:
  5392                           	callstack 0
  5393  001B5A                     ___fladd:
  5394                           	callstack 24
  5395  001B5A  5004               	movf	(___fladd@b+3)^0,w,c
  5396  001B5C  0B80               	andlw	128
  5397  001B5E  6E0D               	movwf	___fladd@signs^0,c
  5398  001B60  5004               	movf	(___fladd@b+3)^0,w,c
  5399  001B62  2404               	addwf	(___fladd@b+3)^0,w,c
  5400  001B64  6E0F               	movwf	___fladd@bexp^0,c
  5401  001B66  AE03               	btfss	(___fladd@b+2)^0,7,c
  5402  001B68  EFB8  F00D         	goto	u2711
  5403  001B6C  EFBA  F00D         	goto	u2710
  5404  001B70                     u2711:
  5405  001B70  EFBB  F00D         	goto	l2637
  5406  001B74                     u2710:
  5407  001B74  800F               	bsf	___fladd@bexp^0,0,c
  5408  001B76                     l2637:
  5409  001B76  500F               	movf	___fladd@bexp^0,w,c
  5410  001B78  B4D8               	btfsc	status,2,c
  5411  001B7A  EFC1  F00D         	goto	u2721
  5412  001B7E  EFC3  F00D         	goto	u2720
  5413  001B82                     u2721:
  5414  001B82  EFD8  F00D         	goto	l2647
  5415  001B86                     u2720:
  5416  001B86  280F               	incf	___fladd@bexp^0,w,c
  5417  001B88  A4D8               	btfss	status,2,c
  5418  001B8A  EFC9  F00D         	goto	u2731
  5419  001B8E  EFCB  F00D         	goto	u2730
  5420  001B92                     u2731:
  5421  001B92  EFD3  F00D         	goto	l2643
  5422  001B96                     u2730:
  5423  001B96  0E00               	movlw	0
  5424  001B98  6E01               	movwf	___fladd@b^0,c
  5425  001B9A  0E00               	movlw	0
  5426  001B9C  6E02               	movwf	(___fladd@b+1)^0,c
  5427  001B9E  0E00               	movlw	0
  5428  001BA0  6E03               	movwf	(___fladd@b+2)^0,c
  5429  001BA2  0E00               	movlw	0
  5430  001BA4  6E04               	movwf	(___fladd@b+3)^0,c
  5431  001BA6                     l2643:
  5432  001BA6  8E03               	bsf	(___fladd@b+2)^0,7,c
  5433  001BA8  0E00               	movlw	0
  5434  001BAA  6E04               	movwf	(___fladd@b+3)^0,c
  5435  001BAC  EFE0  F00D         	goto	l2649
  5436  001BB0                     l2647:
  5437  001BB0  0E00               	movlw	0
  5438  001BB2  6E01               	movwf	___fladd@b^0,c
  5439  001BB4  0E00               	movlw	0
  5440  001BB6  6E02               	movwf	(___fladd@b+1)^0,c
  5441  001BB8  0E00               	movlw	0
  5442  001BBA  6E03               	movwf	(___fladd@b+2)^0,c
  5443  001BBC  0E00               	movlw	0
  5444  001BBE  6E04               	movwf	(___fladd@b+3)^0,c
  5445  001BC0                     l2649:
  5446  001BC0  5008               	movf	(___fladd@a+3)^0,w,c
  5447  001BC2  0B80               	andlw	128
  5448  001BC4  6E0E               	movwf	___fladd@aexp^0,c
  5449  001BC6  500D               	movf	___fladd@signs^0,w,c
  5450  001BC8  180E               	xorwf	___fladd@aexp^0,w,c
  5451  001BCA  B4D8               	btfsc	status,2,c
  5452  001BCC  EFEA  F00D         	goto	u2741
  5453  001BD0  EFEC  F00D         	goto	u2740
  5454  001BD4                     u2741:
  5455  001BD4  EFED  F00D         	goto	l2655
  5456  001BD8                     u2740:
  5457  001BD8  8C0D               	bsf	___fladd@signs^0,6,c
  5458  001BDA                     l2655:
  5459  001BDA  5008               	movf	(___fladd@a+3)^0,w,c
  5460  001BDC  2408               	addwf	(___fladd@a+3)^0,w,c
  5461  001BDE  6E0E               	movwf	___fladd@aexp^0,c
  5462  001BE0  AE07               	btfss	(___fladd@a+2)^0,7,c
  5463  001BE2  EFF5  F00D         	goto	u2751
  5464  001BE6  EFF7  F00D         	goto	u2750
  5465  001BEA                     u2751:
  5466  001BEA  EFF8  F00D         	goto	l2661
  5467  001BEE                     u2750:
  5468  001BEE  800E               	bsf	___fladd@aexp^0,0,c
  5469  001BF0                     l2661:
  5470  001BF0  500E               	movf	___fladd@aexp^0,w,c
  5471  001BF2  B4D8               	btfsc	status,2,c
  5472  001BF4  EFFE  F00D         	goto	u2761
  5473  001BF8  EF00  F00E         	goto	u2760
  5474  001BFC                     u2761:
  5475  001BFC  EF15  F00E         	goto	l2671
  5476  001C00                     u2760:
  5477  001C00  280E               	incf	___fladd@aexp^0,w,c
  5478  001C02  A4D8               	btfss	status,2,c
  5479  001C04  EF06  F00E         	goto	u2771
  5480  001C08  EF08  F00E         	goto	u2770
  5481  001C0C                     u2771:
  5482  001C0C  EF10  F00E         	goto	l2667
  5483  001C10                     u2770:
  5484  001C10  0E00               	movlw	0
  5485  001C12  6E05               	movwf	___fladd@a^0,c
  5486  001C14  0E00               	movlw	0
  5487  001C16  6E06               	movwf	(___fladd@a+1)^0,c
  5488  001C18  0E00               	movlw	0
  5489  001C1A  6E07               	movwf	(___fladd@a+2)^0,c
  5490  001C1C  0E00               	movlw	0
  5491  001C1E  6E08               	movwf	(___fladd@a+3)^0,c
  5492  001C20                     l2667:
  5493  001C20  8E07               	bsf	(___fladd@a+2)^0,7,c
  5494  001C22  0E00               	movlw	0
  5495  001C24  6E08               	movwf	(___fladd@a+3)^0,c
  5496  001C26  EF1D  F00E         	goto	l2673
  5497  001C2A                     l2671:
  5498  001C2A  0E00               	movlw	0
  5499  001C2C  6E05               	movwf	___fladd@a^0,c
  5500  001C2E  0E00               	movlw	0
  5501  001C30  6E06               	movwf	(___fladd@a+1)^0,c
  5502  001C32  0E00               	movlw	0
  5503  001C34  6E07               	movwf	(___fladd@a+2)^0,c
  5504  001C36  0E00               	movlw	0
  5505  001C38  6E08               	movwf	(___fladd@a+3)^0,c
  5506  001C3A                     l2673:
  5507  001C3A  500F               	movf	___fladd@bexp^0,w,c
  5508  001C3C  5C0E               	subwf	___fladd@aexp^0,w,c
  5509  001C3E  B0D8               	btfsc	status,0,c
  5510  001C40  EF24  F00E         	goto	u2781
  5511  001C44  EF26  F00E         	goto	u2780
  5512  001C48                     u2781:
  5513  001C48  EF4D  F00E         	goto	l2709
  5514  001C4C                     u2780:
  5515  001C4C  AC0D               	btfss	___fladd@signs^0,6,c
  5516  001C4E  EF2B  F00E         	goto	u2791
  5517  001C52  EF2D  F00E         	goto	u2790
  5518  001C56                     u2791:
  5519  001C56  EF2F  F00E         	goto	l2679
  5520  001C5A                     u2790:
  5521  001C5A  0E80               	movlw	128
  5522  001C5C  1A0D               	xorwf	___fladd@signs^0,f,c
  5523  001C5E                     l2679:
  5524  001C5E  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  5525  001C62  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5526  001C66  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  5527  001C6A  C001  F010         	movff	___fladd@b,___fladd@grs
  5528  001C6E  C005  F001         	movff	___fladd@a,___fladd@b
  5529  001C72  C010  F005         	movff	___fladd@grs,___fladd@a
  5530  001C76  C002  F010         	movff	___fladd@b+1,___fladd@grs
  5531  001C7A  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  5532  001C7E  C010  F006         	movff	___fladd@grs,___fladd@a+1
  5533  001C82  C003  F010         	movff	___fladd@b+2,___fladd@grs
  5534  001C86  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  5535  001C8A  C010  F007         	movff	___fladd@grs,___fladd@a+2
  5536  001C8E  C004  F010         	movff	___fladd@b+3,___fladd@grs
  5537  001C92  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  5538  001C96  C010  F008         	movff	___fladd@grs,___fladd@a+3
  5539  001C9A                     l2709:
  5540  001C9A  0E00               	movlw	0
  5541  001C9C  6E10               	movwf	___fladd@grs^0,c
  5542  001C9E  500F               	movf	___fladd@bexp^0,w,c
  5543  001CA0  C00E  F009         	movff	___fladd@aexp,??___fladd
  5544  001CA4  6A0A               	clrf	(??___fladd+1)^0,c
  5545  001CA6  5E09               	subwf	??___fladd^0,f,c
  5546  001CA8  0E00               	movlw	0
  5547  001CAA  5A0A               	subwfb	(??___fladd+1)^0,f,c
  5548  001CAC  BE0A               	btfsc	(??___fladd+1)^0,7,c
  5549  001CAE  EF62  F00E         	goto	u2801
  5550  001CB2  500A               	movf	(??___fladd+1)^0,w,c
  5551  001CB4  E109               	bnz	u2800
  5552  001CB6  0E1A               	movlw	26
  5553  001CB8  5C09               	subwf	??___fladd^0,w,c
  5554  001CBA  A0D8               	btfss	status,0,c
  5555  001CBC  EF62  F00E         	goto	u2801
  5556  001CC0  EF64  F00E         	goto	u2800
  5557  001CC4                     u2801:
  5558  001CC4  EF9B  F00E         	goto	l676
  5559  001CC8                     u2800:
  5560  001CC8  5001               	movf	___fladd@b^0,w,c
  5561  001CCA  1002               	iorwf	(___fladd@b+1)^0,w,c
  5562  001CCC  1003               	iorwf	(___fladd@b+2)^0,w,c
  5563  001CCE  1004               	iorwf	(___fladd@b+3)^0,w,c
  5564  001CD0  A4D8               	btfss	status,2,c
  5565  001CD2  EF6D  F00E         	goto	u2811
  5566  001CD6  EF70  F00E         	goto	u2810
  5567  001CDA                     u2811:
  5568  001CDA  0E01               	movlw	1
  5569  001CDC  EF71  F00E         	goto	u2820
  5570  001CE0                     u2810:
  5571  001CE0  0E00               	movlw	0
  5572  001CE2                     u2820:
  5573  001CE2  6E10               	movwf	___fladd@grs^0,c
  5574  001CE4  0E00               	movlw	0
  5575  001CE6  6E01               	movwf	___fladd@b^0,c
  5576  001CE8  0E00               	movlw	0
  5577  001CEA  6E02               	movwf	(___fladd@b+1)^0,c
  5578  001CEC  0E00               	movlw	0
  5579  001CEE  6E03               	movwf	(___fladd@b+2)^0,c
  5580  001CF0  0E00               	movlw	0
  5581  001CF2  6E04               	movwf	(___fladd@b+3)^0,c
  5582  001CF4  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5583  001CF8  EFA4  F00E         	goto	l675
  5584  001CFC                     l677:
  5585  001CFC  A010               	btfss	___fladd@grs^0,0,c
  5586  001CFE  EF83  F00E         	goto	u2831
  5587  001D02  EF85  F00E         	goto	u2830
  5588  001D06                     u2831:
  5589  001D06  EF8B  F00E         	goto	l2721
  5590  001D0A                     u2830:
  5591  001D0A  90D8               	bcf	status,0,c
  5592  001D0C  3010               	rrcf	___fladd@grs^0,w,c
  5593  001D0E  0901               	iorlw	1
  5594  001D10  6E10               	movwf	___fladd@grs^0,c
  5595  001D12  EF8D  F00E         	goto	l2723
  5596  001D16                     l2721:
  5597  001D16  90D8               	bcf	status,0,c
  5598  001D18  3210               	rrcf	___fladd@grs^0,f,c
  5599  001D1A                     l2723:
  5600  001D1A  A001               	btfss	___fladd@b^0,0,c
  5601  001D1C  EF92  F00E         	goto	u2841
  5602  001D20  EF94  F00E         	goto	u2840
  5603  001D24                     u2841:
  5604  001D24  EF95  F00E         	goto	l2727
  5605  001D28                     u2840:
  5606  001D28  8E10               	bsf	___fladd@grs^0,7,c
  5607  001D2A                     l2727:
  5608  001D2A  3404               	rlcf	(___fladd@b+3)^0,w,c
  5609  001D2C  3204               	rrcf	(___fladd@b+3)^0,f,c
  5610  001D2E  3203               	rrcf	(___fladd@b+2)^0,f,c
  5611  001D30  3202               	rrcf	(___fladd@b+1)^0,f,c
  5612  001D32  3201               	rrcf	___fladd@b^0,f,c
  5613  001D34  2A0F               	incf	___fladd@bexp^0,f,c
  5614  001D36                     l676:
  5615  001D36  500E               	movf	___fladd@aexp^0,w,c
  5616  001D38  5C0F               	subwf	___fladd@bexp^0,w,c
  5617  001D3A  A0D8               	btfss	status,0,c
  5618  001D3C  EFA2  F00E         	goto	u2851
  5619  001D40  EFA4  F00E         	goto	u2850
  5620  001D44                     u2851:
  5621  001D44  EF7E  F00E         	goto	l677
  5622  001D48                     u2850:
  5623  001D48                     l675:
  5624  001D48  BC0D               	btfsc	___fladd@signs^0,6,c
  5625  001D4A  EFA9  F00E         	goto	u2861
  5626  001D4E  EFAB  F00E         	goto	u2860
  5627  001D52                     u2861:
  5628  001D52  EFEB  F00E         	goto	l2755
  5629  001D56                     u2860:
  5630  001D56  500F               	movf	___fladd@bexp^0,w,c
  5631  001D58  A4D8               	btfss	status,2,c
  5632  001D5A  EFB1  F00E         	goto	u2871
  5633  001D5E  EFB3  F00E         	goto	u2870
  5634  001D62                     u2871:
  5635  001D62  EFBD  F00E         	goto	l2737
  5636  001D66                     u2870:
  5637  001D66  0E00               	movlw	0
  5638  001D68  6E01               	movwf	?___fladd^0,c
  5639  001D6A  0E00               	movlw	0
  5640  001D6C  6E02               	movwf	(?___fladd+1)^0,c
  5641  001D6E  0E00               	movlw	0
  5642  001D70  6E03               	movwf	(?___fladd+2)^0,c
  5643  001D72  0E00               	movlw	0
  5644  001D74  6E04               	movwf	(?___fladd+3)^0,c
  5645  001D76  EF0C  F010         	goto	l684
  5646  001D7A                     l2737:
  5647  001D7A  5005               	movf	___fladd@a^0,w,c
  5648  001D7C  2601               	addwf	___fladd@b^0,f,c
  5649  001D7E  5006               	movf	(___fladd@a+1)^0,w,c
  5650  001D80  2202               	addwfc	(___fladd@b+1)^0,f,c
  5651  001D82  5007               	movf	(___fladd@a+2)^0,w,c
  5652  001D84  2203               	addwfc	(___fladd@b+2)^0,f,c
  5653  001D86  5008               	movf	(___fladd@a+3)^0,w,c
  5654  001D88  2204               	addwfc	(___fladd@b+3)^0,f,c
  5655  001D8A  A004               	btfss	(___fladd@b+3)^0,0,c
  5656  001D8C  EFCA  F00E         	goto	u2881
  5657  001D90  EFCC  F00E         	goto	u2880
  5658  001D94                     u2881:
  5659  001D94  EF78  F00F         	goto	l2791
  5660  001D98                     u2880:
  5661  001D98  A010               	btfss	___fladd@grs^0,0,c
  5662  001D9A  EFD1  F00E         	goto	u2891
  5663  001D9E  EFD3  F00E         	goto	u2890
  5664  001DA2                     u2891:
  5665  001DA2  EFD9  F00E         	goto	l2745
  5666  001DA6                     u2890:
  5667  001DA6  90D8               	bcf	status,0,c
  5668  001DA8  3010               	rrcf	___fladd@grs^0,w,c
  5669  001DAA  0901               	iorlw	1
  5670  001DAC  6E10               	movwf	___fladd@grs^0,c
  5671  001DAE  EFDB  F00E         	goto	l2747
  5672  001DB2                     l2745:
  5673  001DB2  90D8               	bcf	status,0,c
  5674  001DB4  3210               	rrcf	___fladd@grs^0,f,c
  5675  001DB6                     l2747:
  5676  001DB6  A001               	btfss	___fladd@b^0,0,c
  5677  001DB8  EFE0  F00E         	goto	u2901
  5678  001DBC  EFE2  F00E         	goto	u2900
  5679  001DC0                     u2901:
  5680  001DC0  EFE3  F00E         	goto	l2751
  5681  001DC4                     u2900:
  5682  001DC4  8E10               	bsf	___fladd@grs^0,7,c
  5683  001DC6                     l2751:
  5684  001DC6  3404               	rlcf	(___fladd@b+3)^0,w,c
  5685  001DC8  3204               	rrcf	(___fladd@b+3)^0,f,c
  5686  001DCA  3203               	rrcf	(___fladd@b+2)^0,f,c
  5687  001DCC  3202               	rrcf	(___fladd@b+1)^0,f,c
  5688  001DCE  3201               	rrcf	___fladd@b^0,f,c
  5689  001DD0  2A0F               	incf	___fladd@bexp^0,f,c
  5690  001DD2  EF78  F00F         	goto	l2791
  5691  001DD6                     l2755:
  5692  001DD6  5005               	movf	___fladd@a^0,w,c
  5693  001DD8  5C01               	subwf	___fladd@b^0,w,c
  5694  001DDA  5006               	movf	(___fladd@a+1)^0,w,c
  5695  001DDC  5802               	subwfb	(___fladd@b+1)^0,w,c
  5696  001DDE  5007               	movf	(___fladd@a+2)^0,w,c
  5697  001DE0  5803               	subwfb	(___fladd@b+2)^0,w,c
  5698  001DE2  5004               	movf	(___fladd@b+3)^0,w,c
  5699  001DE4  0A80               	xorlw	128
  5700  001DE6  6E09               	movwf	??___fladd^0,c
  5701  001DE8  5008               	movf	(___fladd@a+3)^0,w,c
  5702  001DEA  0A80               	xorlw	128
  5703  001DEC  5809               	subwfb	??___fladd^0,w,c
  5704  001DEE  B0D8               	btfsc	status,0,c
  5705  001DF0  EFFC  F00E         	goto	u2911
  5706  001DF4  EFFE  F00E         	goto	u2910
  5707  001DF8                     u2911:
  5708  001DF8  EF29  F00F         	goto	l2765
  5709  001DFC                     u2910:
  5710  001DFC  5001               	movf	___fladd@b^0,w,c
  5711  001DFE  5C05               	subwf	___fladd@a^0,w,c
  5712  001E00  6E09               	movwf	??___fladd^0,c
  5713  001E02  5002               	movf	(___fladd@b+1)^0,w,c
  5714  001E04  5806               	subwfb	(___fladd@a+1)^0,w,c
  5715  001E06  6E0A               	movwf	(??___fladd+1)^0,c
  5716  001E08  5003               	movf	(___fladd@b+2)^0,w,c
  5717  001E0A  5807               	subwfb	(___fladd@a+2)^0,w,c
  5718  001E0C  6E0B               	movwf	(??___fladd+2)^0,c
  5719  001E0E  5004               	movf	(___fladd@b+3)^0,w,c
  5720  001E10  5808               	subwfb	(___fladd@a+3)^0,w,c
  5721  001E12  6E0C               	movwf	(??___fladd+3)^0,c
  5722  001E14  0EFF               	movlw	255
  5723  001E16  2409               	addwf	??___fladd^0,w,c
  5724  001E18  6E01               	movwf	___fladd@b^0,c
  5725  001E1A  0EFF               	movlw	255
  5726  001E1C  200A               	addwfc	(??___fladd+1)^0,w,c
  5727  001E1E  6E02               	movwf	(___fladd@b+1)^0,c
  5728  001E20  0EFF               	movlw	255
  5729  001E22  200B               	addwfc	(??___fladd+2)^0,w,c
  5730  001E24  6E03               	movwf	(___fladd@b+2)^0,c
  5731  001E26  0EFF               	movlw	255
  5732  001E28  200C               	addwfc	(??___fladd+3)^0,w,c
  5733  001E2A  6E04               	movwf	(___fladd@b+3)^0,c
  5734  001E2C  0E80               	movlw	128
  5735  001E2E  1A0D               	xorwf	___fladd@signs^0,f,c
  5736  001E30  6C10               	negf	___fladd@grs^0,c
  5737  001E32  5010               	movf	___fladd@grs^0,w,c
  5738  001E34  A4D8               	btfss	status,2,c
  5739  001E36  EF1F  F00F         	goto	u2921
  5740  001E3A  EF21  F00F         	goto	u2920
  5741  001E3E                     u2921:
  5742  001E3E  EF31  F00F         	goto	l692
  5743  001E42                     u2920:
  5744  001E42  0E01               	movlw	1
  5745  001E44  2601               	addwf	___fladd@b^0,f,c
  5746  001E46  0E00               	movlw	0
  5747  001E48  2202               	addwfc	(___fladd@b+1)^0,f,c
  5748  001E4A  2203               	addwfc	(___fladd@b+2)^0,f,c
  5749  001E4C  2204               	addwfc	(___fladd@b+3)^0,f,c
  5750  001E4E  EF31  F00F         	goto	l692
  5751  001E52                     l2765:
  5752  001E52  5005               	movf	___fladd@a^0,w,c
  5753  001E54  5E01               	subwf	___fladd@b^0,f,c
  5754  001E56  5006               	movf	(___fladd@a+1)^0,w,c
  5755  001E58  5A02               	subwfb	(___fladd@b+1)^0,f,c
  5756  001E5A  5007               	movf	(___fladd@a+2)^0,w,c
  5757  001E5C  5A03               	subwfb	(___fladd@b+2)^0,f,c
  5758  001E5E  5008               	movf	(___fladd@a+3)^0,w,c
  5759  001E60  5A04               	subwfb	(___fladd@b+3)^0,f,c
  5760  001E62                     l692:
  5761  001E62  5001               	movf	___fladd@b^0,w,c
  5762  001E64  1002               	iorwf	(___fladd@b+1)^0,w,c
  5763  001E66  1003               	iorwf	(___fladd@b+2)^0,w,c
  5764  001E68  1004               	iorwf	(___fladd@b+3)^0,w,c
  5765  001E6A  A4D8               	btfss	status,2,c
  5766  001E6C  EF3A  F00F         	goto	u2931
  5767  001E70  EF3C  F00F         	goto	u2930
  5768  001E74                     u2931:
  5769  001E74  EF71  F00F         	goto	l2789
  5770  001E78                     u2930:
  5771  001E78  5010               	movf	___fladd@grs^0,w,c
  5772  001E7A  A4D8               	btfss	status,2,c
  5773  001E7C  EF42  F00F         	goto	u2941
  5774  001E80  EF44  F00F         	goto	u2940
  5775  001E84                     u2941:
  5776  001E84  EF71  F00F         	goto	l2789
  5777  001E88                     u2940:
  5778  001E88  0E00               	movlw	0
  5779  001E8A  6E01               	movwf	?___fladd^0,c
  5780  001E8C  0E00               	movlw	0
  5781  001E8E  6E02               	movwf	(?___fladd+1)^0,c
  5782  001E90  0E00               	movlw	0
  5783  001E92  6E03               	movwf	(?___fladd+2)^0,c
  5784  001E94  0E00               	movlw	0
  5785  001E96  6E04               	movwf	(?___fladd+3)^0,c
  5786  001E98  EF0C  F010         	goto	l684
  5787  001E9C                     l2773:
  5788  001E9C  90D8               	bcf	status,0,c
  5789  001E9E  3601               	rlcf	___fladd@b^0,f,c
  5790  001EA0  3602               	rlcf	(___fladd@b+1)^0,f,c
  5791  001EA2  3603               	rlcf	(___fladd@b+2)^0,f,c
  5792  001EA4  3604               	rlcf	(___fladd@b+3)^0,f,c
  5793  001EA6  AE10               	btfss	___fladd@grs^0,7,c
  5794  001EA8  EF58  F00F         	goto	u2951
  5795  001EAC  EF5A  F00F         	goto	u2950
  5796  001EB0                     u2951:
  5797  001EB0  EF5B  F00F         	goto	l2779
  5798  001EB4                     u2950:
  5799  001EB4  8001               	bsf	___fladd@b^0,0,c
  5800  001EB6                     l2779:
  5801  001EB6  A010               	btfss	___fladd@grs^0,0,c
  5802  001EB8  EF60  F00F         	goto	u2961
  5803  001EBC  EF62  F00F         	goto	u2960
  5804  001EC0                     u2961:
  5805  001EC0  EF66  F00F         	goto	l2783
  5806  001EC4                     u2960:
  5807  001EC4  80D8               	bsf	status,0,c
  5808  001EC6  3610               	rlcf	___fladd@grs^0,f,c
  5809  001EC8  EF68  F00F         	goto	l2785
  5810  001ECC                     l2783:
  5811  001ECC  90D8               	bcf	status,0,c
  5812  001ECE  3610               	rlcf	___fladd@grs^0,f,c
  5813  001ED0                     l2785:
  5814  001ED0  500F               	movf	___fladd@bexp^0,w,c
  5815  001ED2  B4D8               	btfsc	status,2,c
  5816  001ED4  EF6E  F00F         	goto	u2971
  5817  001ED8  EF70  F00F         	goto	u2970
  5818  001EDC                     u2971:
  5819  001EDC  EF71  F00F         	goto	l2789
  5820  001EE0                     u2970:
  5821  001EE0  060F               	decf	___fladd@bexp^0,f,c
  5822  001EE2                     l2789:
  5823  001EE2  AE03               	btfss	(___fladd@b+2)^0,7,c
  5824  001EE4  EF76  F00F         	goto	u2981
  5825  001EE8  EF78  F00F         	goto	u2980
  5826  001EEC                     u2981:
  5827  001EEC  EF4E  F00F         	goto	l2773
  5828  001EF0                     u2980:
  5829  001EF0                     l2791:
  5830  001EF0  0E00               	movlw	0
  5831  001EF2  6E0E               	movwf	___fladd@aexp^0,c
  5832  001EF4  AE10               	btfss	___fladd@grs^0,7,c
  5833  001EF6  EF7F  F00F         	goto	u2991
  5834  001EFA  EF81  F00F         	goto	u2990
  5835  001EFE                     u2991:
  5836  001EFE  EF99  F00F         	goto	l701
  5837  001F02                     u2990:
  5838  001F02  C010  F009         	movff	___fladd@grs,??___fladd
  5839  001F06  0E7F               	movlw	127
  5840  001F08  1609               	andwf	??___fladd^0,f,c
  5841  001F0A  B4D8               	btfsc	status,2,c
  5842  001F0C  EF8A  F00F         	goto	u3001
  5843  001F10  EF8C  F00F         	goto	u3000
  5844  001F14                     u3001:
  5845  001F14  EF90  F00F         	goto	l702
  5846  001F18                     u3000:
  5847  001F18                     l2797:
  5848  001F18  0E01               	movlw	1
  5849  001F1A  6E0E               	movwf	___fladd@aexp^0,c
  5850  001F1C  EF99  F00F         	goto	l701
  5851  001F20                     l702:
  5852  001F20  A001               	btfss	___fladd@b^0,0,c
  5853  001F22  EF95  F00F         	goto	u3011
  5854  001F26  EF97  F00F         	goto	u3010
  5855  001F2A                     u3011:
  5856  001F2A  EF99  F00F         	goto	l701
  5857  001F2E                     u3010:
  5858  001F2E  EF8C  F00F         	goto	l2797
  5859  001F32                     l701:
  5860  001F32  500E               	movf	___fladd@aexp^0,w,c
  5861  001F34  B4D8               	btfsc	status,2,c
  5862  001F36  EF9F  F00F         	goto	u3021
  5863  001F3A  EFA1  F00F         	goto	u3020
  5864  001F3E                     u3021:
  5865  001F3E  EFCC  F00F         	goto	l2809
  5866  001F42                     u3020:
  5867  001F42  0E01               	movlw	1
  5868  001F44  2601               	addwf	___fladd@b^0,f,c
  5869  001F46  0E00               	movlw	0
  5870  001F48  2202               	addwfc	(___fladd@b+1)^0,f,c
  5871  001F4A  2203               	addwfc	(___fladd@b+2)^0,f,c
  5872  001F4C  2204               	addwfc	(___fladd@b+3)^0,f,c
  5873  001F4E  A004               	btfss	(___fladd@b+3)^0,0,c
  5874  001F50  EFAC  F00F         	goto	u3031
  5875  001F54  EFAE  F00F         	goto	u3030
  5876  001F58                     u3031:
  5877  001F58  EFCC  F00F         	goto	l2809
  5878  001F5C                     u3030:
  5879  001F5C  C001  F009         	movff	___fladd@b,??___fladd
  5880  001F60  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  5881  001F64  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  5882  001F68  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  5883  001F6C  340C               	rlcf	(??___fladd+3)^0,w,c
  5884  001F6E  320C               	rrcf	(??___fladd+3)^0,f,c
  5885  001F70  320B               	rrcf	(??___fladd+2)^0,f,c
  5886  001F72  320A               	rrcf	(??___fladd+1)^0,f,c
  5887  001F74  3209               	rrcf	??___fladd^0,f,c
  5888  001F76  C009  F001         	movff	??___fladd,___fladd@b
  5889  001F7A  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  5890  001F7E  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  5891  001F82  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  5892  001F86  280F               	incf	___fladd@bexp^0,w,c
  5893  001F88  B4D8               	btfsc	status,2,c
  5894  001F8A  EFC9  F00F         	goto	u3041
  5895  001F8E  EFCB  F00F         	goto	u3040
  5896  001F92                     u3041:
  5897  001F92  EFCC  F00F         	goto	l2809
  5898  001F96                     u3040:
  5899  001F96  2A0F               	incf	___fladd@bexp^0,f,c
  5900  001F98                     l2809:
  5901  001F98  280F               	incf	___fladd@bexp^0,w,c
  5902  001F9A  B4D8               	btfsc	status,2,c
  5903  001F9C  EFD2  F00F         	goto	u3051
  5904  001FA0  EFD4  F00F         	goto	u3050
  5905  001FA4                     u3051:
  5906  001FA4  EFDC  F00F         	goto	l2813
  5907  001FA8                     u3050:
  5908  001FA8  500F               	movf	___fladd@bexp^0,w,c
  5909  001FAA  A4D8               	btfss	status,2,c
  5910  001FAC  EFDA  F00F         	goto	u3061
  5911  001FB0  EFDC  F00F         	goto	u3060
  5912  001FB4                     u3061:
  5913  001FB4  EFEE  F00F         	goto	l2817
  5914  001FB8                     u3060:
  5915  001FB8                     l2813:
  5916  001FB8  0E00               	movlw	0
  5917  001FBA  6E01               	movwf	___fladd@b^0,c
  5918  001FBC  0E00               	movlw	0
  5919  001FBE  6E02               	movwf	(___fladd@b+1)^0,c
  5920  001FC0  0E00               	movlw	0
  5921  001FC2  6E03               	movwf	(___fladd@b+2)^0,c
  5922  001FC4  0E00               	movlw	0
  5923  001FC6  6E04               	movwf	(___fladd@b+3)^0,c
  5924  001FC8  500F               	movf	___fladd@bexp^0,w,c
  5925  001FCA  A4D8               	btfss	status,2,c
  5926  001FCC  EFEA  F00F         	goto	u3071
  5927  001FD0  EFEC  F00F         	goto	u3070
  5928  001FD4                     u3071:
  5929  001FD4  EFEE  F00F         	goto	l2817
  5930  001FD8                     u3070:
  5931  001FD8  0E00               	movlw	0
  5932  001FDA  6E0D               	movwf	___fladd@signs^0,c
  5933  001FDC                     l2817:
  5934  001FDC  A00F               	btfss	___fladd@bexp^0,0,c
  5935  001FDE  EFF3  F00F         	goto	u3081
  5936  001FE2  EFF5  F00F         	goto	u3080
  5937  001FE6                     u3081:
  5938  001FE6  EFF8  F00F         	goto	l2821
  5939  001FEA                     u3080:
  5940  001FEA  8E03               	bsf	(___fladd@b+2)^0,7,c
  5941  001FEC  EFF9  F00F         	goto	l2823
  5942  001FF0                     l2821:
  5943  001FF0  9E03               	bcf	(___fladd@b+2)^0,7,c
  5944  001FF2                     l2823:
  5945  001FF2  90D8               	bcf	status,0,c
  5946  001FF4  300F               	rrcf	___fladd@bexp^0,w,c
  5947  001FF6  6E04               	movwf	(___fladd@b+3)^0,c
  5948  001FF8  AE0D               	btfss	___fladd@signs^0,7,c
  5949  001FFA  EF01  F010         	goto	u3091
  5950  001FFE  EF03  F010         	goto	u3090
  5951  002002                     u3091:
  5952  002002  EF04  F010         	goto	l2829
  5953  002006                     u3090:
  5954  002006  8E04               	bsf	(___fladd@b+3)^0,7,c
  5955  002008                     l2829:
  5956  002008  C001  F001         	movff	___fladd@b,?___fladd
  5957  00200C  C002  F002         	movff	___fladd@b+1,?___fladd+1
  5958  002010  C003  F003         	movff	___fladd@b+2,?___fladd+2
  5959  002014  C004  F004         	movff	___fladd@b+3,?___fladd+3
  5960  002018                     l684:
  5961  002018  0012               	return		;funcret
  5962  00201A                     __end_of___fladd:
  5963                           	callstack 0
  5964                           
  5965 ;; *************** function ___flneg *****************
  5966 ;; Defined at:
  5967 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\flneg.c"
  5968 ;; Parameters:    Size  Location     Type
  5969 ;;  f1              4    0[COMRAM] unsigned char 
  5970 ;; Auto vars:     Size  Location     Type
  5971 ;;		None
  5972 ;; Return value:  Size  Location     Type
  5973 ;;                  4    0[COMRAM] unsigned char 
  5974 ;; Registers used:
  5975 ;;		wreg, status,2, status,0
  5976 ;; Tracked objects:
  5977 ;;		On entry : 0/0
  5978 ;;		On exit  : 0/0
  5979 ;;		Unchanged: 0/0
  5980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5981 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5984 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5985 ;;Total ram usage:        4 bytes
  5986 ;; Hardware stack levels used: 1
  5987 ;; This function calls:
  5988 ;;		Nothing
  5989 ;; This function is called by:
  5990 ;;		_efgtoa
  5991 ;; This function uses a non-reentrant model
  5992 ;;
  5993                           
  5994                           	psect	text22
  5995  0040F2                     __ptext22:
  5996                           	callstack 0
  5997  0040F2                     ___flneg:
  5998                           	callstack 25
  5999  0040F2  5001               	movf	___flneg@f1^0,w,c
  6000  0040F4  1002               	iorwf	(___flneg@f1+1)^0,w,c
  6001  0040F6  1003               	iorwf	(___flneg@f1+2)^0,w,c
  6002  0040F8  1004               	iorwf	(___flneg@f1+3)^0,w,c
  6003  0040FA  B4D8               	btfsc	status,2,c
  6004  0040FC  EF82  F020         	goto	u3751
  6005  004100  EF84  F020         	goto	u3750
  6006  004104                     u3751:
  6007  004104  EF8C  F020         	goto	l3247
  6008  004108                     u3750:
  6009  004108  0E00               	movlw	0
  6010  00410A  1A01               	xorwf	___flneg@f1^0,f,c
  6011  00410C  0E00               	movlw	0
  6012  00410E  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  6013  004110  0E00               	movlw	0
  6014  004112  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  6015  004114  0E80               	movlw	128
  6016  004116  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  6017  004118                     l3247:
  6018  004118  C001  F001         	movff	___flneg@f1,?___flneg
  6019  00411C  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  6020  004120  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  6021  004124  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  6022  004128  0012               	return		;funcret
  6023  00412A                     __end_of___flneg:
  6024                           	callstack 0
  6025                           
  6026 ;; *************** function ___flmul *****************
  6027 ;; Defined at:
  6028 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcmul.c"
  6029 ;; Parameters:    Size  Location     Type
  6030 ;;  b               4    0[COMRAM] unsigned char 
  6031 ;;  a               4    4[COMRAM] unsigned char 
  6032 ;; Auto vars:     Size  Location     Type
  6033 ;;  prod            4   19[COMRAM] struct .
  6034 ;;  grs             4   13[COMRAM] unsigned long 
  6035 ;;  temp            2   23[COMRAM] struct .
  6036 ;;  bexp            1   18[COMRAM] unsigned char 
  6037 ;;  aexp            1   17[COMRAM] unsigned char 
  6038 ;;  sign            1   12[COMRAM] unsigned char 
  6039 ;; Return value:  Size  Location     Type
  6040 ;;                  4    0[COMRAM] unsigned char 
  6041 ;; Registers used:
  6042 ;;		wreg, status,2, status,0, prodl, prodh
  6043 ;; Tracked objects:
  6044 ;;		On entry : 0/0
  6045 ;;		On exit  : 0/0
  6046 ;;		Unchanged: 0/0
  6047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6048 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6049 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6050 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6051 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6052 ;;Total ram usage:       25 bytes
  6053 ;; Hardware stack levels used: 1
  6054 ;; This function calls:
  6055 ;;		Nothing
  6056 ;; This function is called by:
  6057 ;;		_main
  6058 ;;		_efgtoa
  6059 ;; This function uses a non-reentrant model
  6060 ;;
  6061                           
  6062                           	psect	text23
  6063  00247A                     __ptext23:
  6064                           	callstack 0
  6065  00247A                     ___flmul:
  6066                           	callstack 30
  6067  00247A  5004               	movf	(___flmul@b+3)^0,w,c
  6068  00247C  0B80               	andlw	128
  6069  00247E  6E0D               	movwf	___flmul@sign^0,c
  6070  002480  5004               	movf	(___flmul@b+3)^0,w,c
  6071  002482  2404               	addwf	(___flmul@b+3)^0,w,c
  6072  002484  6E13               	movwf	___flmul@bexp^0,c
  6073  002486  AE03               	btfss	(___flmul@b+2)^0,7,c
  6074  002488  EF48  F012         	goto	u3361
  6075  00248C  EF4A  F012         	goto	u3360
  6076  002490                     u3361:
  6077  002490  EF4B  F012         	goto	l2995
  6078  002494                     u3360:
  6079  002494  8013               	bsf	___flmul@bexp^0,0,c
  6080  002496                     l2995:
  6081  002496  5013               	movf	___flmul@bexp^0,w,c
  6082  002498  B4D8               	btfsc	status,2,c
  6083  00249A  EF51  F012         	goto	u3371
  6084  00249E  EF53  F012         	goto	u3370
  6085  0024A2                     u3371:
  6086  0024A2  EF66  F012         	goto	l3003
  6087  0024A6                     u3370:
  6088  0024A6  2813               	incf	___flmul@bexp^0,w,c
  6089  0024A8  A4D8               	btfss	status,2,c
  6090  0024AA  EF59  F012         	goto	u3381
  6091  0024AE  EF5B  F012         	goto	u3380
  6092  0024B2                     u3381:
  6093  0024B2  EF63  F012         	goto	l3001
  6094  0024B6                     u3380:
  6095  0024B6  0E00               	movlw	0
  6096  0024B8  6E01               	movwf	___flmul@b^0,c
  6097  0024BA  0E00               	movlw	0
  6098  0024BC  6E02               	movwf	(___flmul@b+1)^0,c
  6099  0024BE  0E00               	movlw	0
  6100  0024C0  6E03               	movwf	(___flmul@b+2)^0,c
  6101  0024C2  0E00               	movlw	0
  6102  0024C4  6E04               	movwf	(___flmul@b+3)^0,c
  6103  0024C6                     l3001:
  6104  0024C6  8E03               	bsf	(___flmul@b+2)^0,7,c
  6105  0024C8  EF6E  F012         	goto	l3005
  6106  0024CC                     l3003:
  6107  0024CC  0E00               	movlw	0
  6108  0024CE  6E01               	movwf	___flmul@b^0,c
  6109  0024D0  0E00               	movlw	0
  6110  0024D2  6E02               	movwf	(___flmul@b+1)^0,c
  6111  0024D4  0E00               	movlw	0
  6112  0024D6  6E03               	movwf	(___flmul@b+2)^0,c
  6113  0024D8  0E00               	movlw	0
  6114  0024DA  6E04               	movwf	(___flmul@b+3)^0,c
  6115  0024DC                     l3005:
  6116  0024DC  5008               	movf	(___flmul@a+3)^0,w,c
  6117  0024DE  0B80               	andlw	128
  6118  0024E0  1A0D               	xorwf	___flmul@sign^0,f,c
  6119  0024E2  5008               	movf	(___flmul@a+3)^0,w,c
  6120  0024E4  2408               	addwf	(___flmul@a+3)^0,w,c
  6121  0024E6  6E12               	movwf	___flmul@aexp^0,c
  6122  0024E8  AE07               	btfss	(___flmul@a+2)^0,7,c
  6123  0024EA  EF79  F012         	goto	u3391
  6124  0024EE  EF7B  F012         	goto	u3390
  6125  0024F2                     u3391:
  6126  0024F2  EF7C  F012         	goto	l3013
  6127  0024F6                     u3390:
  6128  0024F6  8012               	bsf	___flmul@aexp^0,0,c
  6129  0024F8                     l3013:
  6130  0024F8  5012               	movf	___flmul@aexp^0,w,c
  6131  0024FA  B4D8               	btfsc	status,2,c
  6132  0024FC  EF82  F012         	goto	u3401
  6133  002500  EF84  F012         	goto	u3400
  6134  002504                     u3401:
  6135  002504  EF97  F012         	goto	l3021
  6136  002508                     u3400:
  6137  002508  2812               	incf	___flmul@aexp^0,w,c
  6138  00250A  A4D8               	btfss	status,2,c
  6139  00250C  EF8A  F012         	goto	u3411
  6140  002510  EF8C  F012         	goto	u3410
  6141  002514                     u3411:
  6142  002514  EF94  F012         	goto	l3019
  6143  002518                     u3410:
  6144  002518  0E00               	movlw	0
  6145  00251A  6E05               	movwf	___flmul@a^0,c
  6146  00251C  0E00               	movlw	0
  6147  00251E  6E06               	movwf	(___flmul@a+1)^0,c
  6148  002520  0E00               	movlw	0
  6149  002522  6E07               	movwf	(___flmul@a+2)^0,c
  6150  002524  0E00               	movlw	0
  6151  002526  6E08               	movwf	(___flmul@a+3)^0,c
  6152  002528                     l3019:
  6153  002528  8E07               	bsf	(___flmul@a+2)^0,7,c
  6154  00252A  EF9F  F012         	goto	l761
  6155  00252E                     l3021:
  6156  00252E  0E00               	movlw	0
  6157  002530  6E05               	movwf	___flmul@a^0,c
  6158  002532  0E00               	movlw	0
  6159  002534  6E06               	movwf	(___flmul@a+1)^0,c
  6160  002536  0E00               	movlw	0
  6161  002538  6E07               	movwf	(___flmul@a+2)^0,c
  6162  00253A  0E00               	movlw	0
  6163  00253C  6E08               	movwf	(___flmul@a+3)^0,c
  6164  00253E                     l761:
  6165  00253E  5012               	movf	___flmul@aexp^0,w,c
  6166  002540  B4D8               	btfsc	status,2,c
  6167  002542  EFA5  F012         	goto	u3421
  6168  002546  EFA7  F012         	goto	u3420
  6169  00254A                     u3421:
  6170  00254A  EFAF  F012         	goto	l3025
  6171  00254E                     u3420:
  6172  00254E  5013               	movf	___flmul@bexp^0,w,c
  6173  002550  A4D8               	btfss	status,2,c
  6174  002552  EFAD  F012         	goto	u3431
  6175  002556  EFAF  F012         	goto	u3430
  6176  00255A                     u3431:
  6177  00255A  EFB9  F012         	goto	l3029
  6178  00255E                     u3430:
  6179  00255E                     l3025:
  6180  00255E  0E00               	movlw	0
  6181  002560  6E01               	movwf	?___flmul^0,c
  6182  002562  0E00               	movlw	0
  6183  002564  6E02               	movwf	(?___flmul+1)^0,c
  6184  002566  0E00               	movlw	0
  6185  002568  6E03               	movwf	(?___flmul+2)^0,c
  6186  00256A  0E00               	movlw	0
  6187  00256C  6E04               	movwf	(?___flmul+3)^0,c
  6188  00256E  EF51  F014         	goto	l765
  6189  002572                     l3029:
  6190  002572  5007               	movf	(___flmul@a+2)^0,w,c
  6191  002574  0201               	mulwf	___flmul@b^0,c
  6192  002576  CFF3 F018          	movff	prodl,___flmul@temp
  6193  00257A  CFF4 F019          	movff	prodh,___flmul@temp+1
  6194  00257E  5018               	movf	___flmul@temp^0,w,c
  6195  002580  6E0E               	movwf	___flmul@grs^0,c
  6196  002582  6A0F               	clrf	(___flmul@grs+1)^0,c
  6197  002584  6A10               	clrf	(___flmul@grs+2)^0,c
  6198  002586  6A11               	clrf	(___flmul@grs+3)^0,c
  6199  002588  5019               	movf	(___flmul@temp+1)^0,w,c
  6200  00258A  6E14               	movwf	___flmul@prod^0,c
  6201  00258C  6A15               	clrf	(___flmul@prod+1)^0,c
  6202  00258E  6A16               	clrf	(___flmul@prod+2)^0,c
  6203  002590  6A17               	clrf	(___flmul@prod+3)^0,c
  6204  002592  5006               	movf	(___flmul@a+1)^0,w,c
  6205  002594  0202               	mulwf	(___flmul@b+1)^0,c
  6206  002596  CFF3 F018          	movff	prodl,___flmul@temp
  6207  00259A  CFF4 F019          	movff	prodh,___flmul@temp+1
  6208  00259E  5018               	movf	___flmul@temp^0,w,c
  6209  0025A0  260E               	addwf	___flmul@grs^0,f,c
  6210  0025A2  0E00               	movlw	0
  6211  0025A4  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6212  0025A6  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6213  0025A8  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6214  0025AA  5019               	movf	(___flmul@temp+1)^0,w,c
  6215  0025AC  2614               	addwf	___flmul@prod^0,f,c
  6216  0025AE  0E00               	movlw	0
  6217  0025B0  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6218  0025B2  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6219  0025B4  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6220  0025B6  5005               	movf	___flmul@a^0,w,c
  6221  0025B8  0203               	mulwf	(___flmul@b+2)^0,c
  6222  0025BA  CFF3 F018          	movff	prodl,___flmul@temp
  6223  0025BE  CFF4 F019          	movff	prodh,___flmul@temp+1
  6224  0025C2  5018               	movf	___flmul@temp^0,w,c
  6225  0025C4  260E               	addwf	___flmul@grs^0,f,c
  6226  0025C6  0E00               	movlw	0
  6227  0025C8  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6228  0025CA  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6229  0025CC  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6230  0025CE  5019               	movf	(___flmul@temp+1)^0,w,c
  6231  0025D0  2614               	addwf	___flmul@prod^0,f,c
  6232  0025D2  0E00               	movlw	0
  6233  0025D4  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6234  0025D6  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6235  0025D8  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6236  0025DA  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  6237  0025DE  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  6238  0025E2  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  6239  0025E6  6A0E               	clrf	___flmul@grs^0,c
  6240  0025E8  5005               	movf	___flmul@a^0,w,c
  6241  0025EA  0202               	mulwf	(___flmul@b+1)^0,c
  6242  0025EC  CFF3 F018          	movff	prodl,___flmul@temp
  6243  0025F0  CFF4 F019          	movff	prodh,___flmul@temp+1
  6244  0025F4  5018               	movf	___flmul@temp^0,w,c
  6245  0025F6  260E               	addwf	___flmul@grs^0,f,c
  6246  0025F8  5019               	movf	(___flmul@temp+1)^0,w,c
  6247  0025FA  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6248  0025FC  0E00               	movlw	0
  6249  0025FE  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6250  002600  0E00               	movlw	0
  6251  002602  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6252  002604  5006               	movf	(___flmul@a+1)^0,w,c
  6253  002606  0201               	mulwf	___flmul@b^0,c
  6254  002608  CFF3 F018          	movff	prodl,___flmul@temp
  6255  00260C  CFF4 F019          	movff	prodh,___flmul@temp+1
  6256  002610  5018               	movf	___flmul@temp^0,w,c
  6257  002612  260E               	addwf	___flmul@grs^0,f,c
  6258  002614  5019               	movf	(___flmul@temp+1)^0,w,c
  6259  002616  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6260  002618  0E00               	movlw	0
  6261  00261A  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6262  00261C  0E00               	movlw	0
  6263  00261E  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6264  002620  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  6265  002624  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  6266  002628  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  6267  00262C  6A0E               	clrf	___flmul@grs^0,c
  6268  00262E  5005               	movf	___flmul@a^0,w,c
  6269  002630  0201               	mulwf	___flmul@b^0,c
  6270  002632  CFF3 F018          	movff	prodl,___flmul@temp
  6271  002636  CFF4 F019          	movff	prodh,___flmul@temp+1
  6272  00263A  5018               	movf	___flmul@temp^0,w,c
  6273  00263C  260E               	addwf	___flmul@grs^0,f,c
  6274  00263E  5019               	movf	(___flmul@temp+1)^0,w,c
  6275  002640  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6276  002642  0E00               	movlw	0
  6277  002644  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6278  002646  0E00               	movlw	0
  6279  002648  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6280  00264A  5007               	movf	(___flmul@a+2)^0,w,c
  6281  00264C  0202               	mulwf	(___flmul@b+1)^0,c
  6282  00264E  CFF3 F018          	movff	prodl,___flmul@temp
  6283  002652  CFF4 F019          	movff	prodh,___flmul@temp+1
  6284  002656  5018               	movf	___flmul@temp^0,w,c
  6285  002658  2614               	addwf	___flmul@prod^0,f,c
  6286  00265A  5019               	movf	(___flmul@temp+1)^0,w,c
  6287  00265C  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6288  00265E  0E00               	movlw	0
  6289  002660  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6290  002662  0E00               	movlw	0
  6291  002664  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6292  002666  5006               	movf	(___flmul@a+1)^0,w,c
  6293  002668  0203               	mulwf	(___flmul@b+2)^0,c
  6294  00266A  CFF3 F018          	movff	prodl,___flmul@temp
  6295  00266E  CFF4 F019          	movff	prodh,___flmul@temp+1
  6296  002672  5018               	movf	___flmul@temp^0,w,c
  6297  002674  2614               	addwf	___flmul@prod^0,f,c
  6298  002676  5019               	movf	(___flmul@temp+1)^0,w,c
  6299  002678  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6300  00267A  0E00               	movlw	0
  6301  00267C  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6302  00267E  0E00               	movlw	0
  6303  002680  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6304  002682  5007               	movf	(___flmul@a+2)^0,w,c
  6305  002684  0203               	mulwf	(___flmul@b+2)^0,c
  6306  002686  CFF3 F018          	movff	prodl,___flmul@temp
  6307  00268A  CFF4 F019          	movff	prodh,___flmul@temp+1
  6308  00268E  5018               	movf	___flmul@temp^0,w,c
  6309  002690  6E09               	movwf	??___flmul^0,c
  6310  002692  5019               	movf	(___flmul@temp+1)^0,w,c
  6311  002694  6E0A               	movwf	(??___flmul+1)^0,c
  6312  002696  6A0B               	clrf	(??___flmul+2)^0,c
  6313  002698  6A0C               	clrf	(??___flmul+3)^0,c
  6314  00269A  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  6315  00269E  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  6316  0026A2  C009  F00A         	movff	??___flmul,??___flmul+1
  6317  0026A6  6A09               	clrf	??___flmul^0,c
  6318  0026A8  5009               	movf	??___flmul^0,w,c
  6319  0026AA  2614               	addwf	___flmul@prod^0,f,c
  6320  0026AC  500A               	movf	(??___flmul+1)^0,w,c
  6321  0026AE  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6322  0026B0  500B               	movf	(??___flmul+2)^0,w,c
  6323  0026B2  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6324  0026B4  500C               	movf	(??___flmul+3)^0,w,c
  6325  0026B6  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6326  0026B8  C00E  F009         	movff	___flmul@grs,??___flmul
  6327  0026BC  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
  6328  0026C0  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
  6329  0026C4  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
  6330  0026C8  0E19               	movlw	25
  6331  0026CA  EF6C  F013         	goto	u3440
  6332  0026CE                     u3445:
  6333  0026CE  90D8               	bcf	status,0,c
  6334  0026D0  320C               	rrcf	(??___flmul+3)^0,f,c
  6335  0026D2  320B               	rrcf	(??___flmul+2)^0,f,c
  6336  0026D4  320A               	rrcf	(??___flmul+1)^0,f,c
  6337  0026D6  3209               	rrcf	??___flmul^0,f,c
  6338  0026D8                     u3440:
  6339  0026D8  2EE8               	decfsz	wreg,f,c
  6340  0026DA  EF67  F013         	goto	u3445
  6341  0026DE  5009               	movf	??___flmul^0,w,c
  6342  0026E0  2614               	addwf	___flmul@prod^0,f,c
  6343  0026E2  500A               	movf	(??___flmul+1)^0,w,c
  6344  0026E4  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6345  0026E6  500B               	movf	(??___flmul+2)^0,w,c
  6346  0026E8  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6347  0026EA  500C               	movf	(??___flmul+3)^0,w,c
  6348  0026EC  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6349  0026EE  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  6350  0026F2  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  6351  0026F6  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  6352  0026FA  6A0E               	clrf	___flmul@grs^0,c
  6353  0026FC  5012               	movf	___flmul@aexp^0,w,c
  6354  0026FE  C013  F009         	movff	___flmul@bexp,??___flmul
  6355  002702  6A0A               	clrf	(??___flmul+1)^0,c
  6356  002704  2609               	addwf	??___flmul^0,f,c
  6357  002706  0E00               	movlw	0
  6358  002708  220A               	addwfc	(??___flmul+1)^0,f,c
  6359  00270A  0E82               	movlw	130
  6360  00270C  2409               	addwf	??___flmul^0,w,c
  6361  00270E  6E18               	movwf	___flmul@temp^0,c
  6362  002710  0EFF               	movlw	255
  6363  002712  200A               	addwfc	(??___flmul+1)^0,w,c
  6364  002714  6E19               	movwf	(___flmul@temp+1)^0,c
  6365  002716  EFA2  F013         	goto	l3077
  6366  00271A                     l3071:
  6367  00271A  90D8               	bcf	status,0,c
  6368  00271C  3614               	rlcf	___flmul@prod^0,f,c
  6369  00271E  3615               	rlcf	(___flmul@prod+1)^0,f,c
  6370  002720  3616               	rlcf	(___flmul@prod+2)^0,f,c
  6371  002722  3617               	rlcf	(___flmul@prod+3)^0,f,c
  6372  002724  AE11               	btfss	(___flmul@grs+3)^0,7,c
  6373  002726  EF97  F013         	goto	u3451
  6374  00272A  EF99  F013         	goto	u3450
  6375  00272E                     u3451:
  6376  00272E  EF9A  F013         	goto	l768
  6377  002732                     u3450:
  6378  002732  8014               	bsf	___flmul@prod^0,0,c
  6379  002734                     l768:
  6380  002734  90D8               	bcf	status,0,c
  6381  002736  360E               	rlcf	___flmul@grs^0,f,c
  6382  002738  360F               	rlcf	(___flmul@grs+1)^0,f,c
  6383  00273A  3610               	rlcf	(___flmul@grs+2)^0,f,c
  6384  00273C  3611               	rlcf	(___flmul@grs+3)^0,f,c
  6385  00273E  0618               	decf	___flmul@temp^0,f,c
  6386  002740  A0D8               	btfss	status,0,c
  6387  002742  0619               	decf	(___flmul@temp+1)^0,f,c
  6388  002744                     l3077:
  6389  002744  AE16               	btfss	(___flmul@prod+2)^0,7,c
  6390  002746  EFA7  F013         	goto	u3461
  6391  00274A  EFA9  F013         	goto	u3460
  6392  00274E                     u3461:
  6393  00274E  EF8D  F013         	goto	l3071
  6394  002752                     u3460:
  6395  002752  0E00               	movlw	0
  6396  002754  6E12               	movwf	___flmul@aexp^0,c
  6397  002756  AE11               	btfss	(___flmul@grs+3)^0,7,c
  6398  002758  EFB0  F013         	goto	u3471
  6399  00275C  EFB2  F013         	goto	u3470
  6400  002760                     u3471:
  6401  002760  EFD6  F013         	goto	l770
  6402  002764                     u3470:
  6403  002764  0EFF               	movlw	255
  6404  002766  140E               	andwf	___flmul@grs^0,w,c
  6405  002768  6E09               	movwf	??___flmul^0,c
  6406  00276A  0EFF               	movlw	255
  6407  00276C  140F               	andwf	(___flmul@grs+1)^0,w,c
  6408  00276E  6E0A               	movwf	(??___flmul+1)^0,c
  6409  002770  0EFF               	movlw	255
  6410  002772  1410               	andwf	(___flmul@grs+2)^0,w,c
  6411  002774  6E0B               	movwf	(??___flmul+2)^0,c
  6412  002776  0E7F               	movlw	127
  6413  002778  1411               	andwf	(___flmul@grs+3)^0,w,c
  6414  00277A  6E0C               	movwf	(??___flmul+3)^0,c
  6415  00277C  5009               	movf	??___flmul^0,w,c
  6416  00277E  100A               	iorwf	(??___flmul+1)^0,w,c
  6417  002780  100B               	iorwf	(??___flmul+2)^0,w,c
  6418  002782  100C               	iorwf	(??___flmul+3)^0,w,c
  6419  002784  B4D8               	btfsc	status,2,c
  6420  002786  EFC7  F013         	goto	u3481
  6421  00278A  EFC9  F013         	goto	u3480
  6422  00278E                     u3481:
  6423  00278E  EFCD  F013         	goto	l771
  6424  002792                     u3480:
  6425  002792                     l3085:
  6426  002792  0E01               	movlw	1
  6427  002794  6E12               	movwf	___flmul@aexp^0,c
  6428  002796  EFD6  F013         	goto	l770
  6429  00279A                     l771:
  6430  00279A  A014               	btfss	___flmul@prod^0,0,c
  6431  00279C  EFD2  F013         	goto	u3491
  6432  0027A0  EFD4  F013         	goto	u3490
  6433  0027A4                     u3491:
  6434  0027A4  EFD6  F013         	goto	l770
  6435  0027A8                     u3490:
  6436  0027A8  EFC9  F013         	goto	l3085
  6437  0027AC                     l770:
  6438  0027AC  5012               	movf	___flmul@aexp^0,w,c
  6439  0027AE  B4D8               	btfsc	status,2,c
  6440  0027B0  EFDC  F013         	goto	u3501
  6441  0027B4  EFDE  F013         	goto	u3500
  6442  0027B8                     u3501:
  6443  0027B8  EF02  F014         	goto	l3097
  6444  0027BC                     u3500:
  6445  0027BC  0E01               	movlw	1
  6446  0027BE  2614               	addwf	___flmul@prod^0,f,c
  6447  0027C0  0E00               	movlw	0
  6448  0027C2  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6449  0027C4  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6450  0027C6  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6451  0027C8  A017               	btfss	(___flmul@prod+3)^0,0,c
  6452  0027CA  EFE9  F013         	goto	u3511
  6453  0027CE  EFEB  F013         	goto	u3510
  6454  0027D2                     u3511:
  6455  0027D2  EF02  F014         	goto	l3097
  6456  0027D6                     u3510:
  6457  0027D6  C014  F009         	movff	___flmul@prod,??___flmul
  6458  0027DA  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
  6459  0027DE  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
  6460  0027E2  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
  6461  0027E6  340C               	rlcf	(??___flmul+3)^0,w,c
  6462  0027E8  320C               	rrcf	(??___flmul+3)^0,f,c
  6463  0027EA  320B               	rrcf	(??___flmul+2)^0,f,c
  6464  0027EC  320A               	rrcf	(??___flmul+1)^0,f,c
  6465  0027EE  3209               	rrcf	??___flmul^0,f,c
  6466  0027F0  C009  F014         	movff	??___flmul,___flmul@prod
  6467  0027F4  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
  6468  0027F8  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
  6469  0027FC  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
  6470  002800  4A18               	infsnz	___flmul@temp^0,f,c
  6471  002802  2A19               	incf	(___flmul@temp+1)^0,f,c
  6472  002804                     l3097:
  6473  002804  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  6474  002806  EF0D  F014         	goto	u3521
  6475  00280A  5019               	movf	(___flmul@temp+1)^0,w,c
  6476  00280C  E108               	bnz	u3520
  6477  00280E  2818               	incf	___flmul@temp^0,w,c
  6478  002810  A0D8               	btfss	status,0,c
  6479  002812  EF0D  F014         	goto	u3521
  6480  002816  EF0F  F014         	goto	u3520
  6481  00281A                     u3521:
  6482  00281A  EF19  F014         	goto	l3101
  6483  00281E                     u3520:
  6484  00281E  0E00               	movlw	0
  6485  002820  6E14               	movwf	___flmul@prod^0,c
  6486  002822  0E00               	movlw	0
  6487  002824  6E15               	movwf	(___flmul@prod+1)^0,c
  6488  002826  0E80               	movlw	128
  6489  002828  6E16               	movwf	(___flmul@prod+2)^0,c
  6490  00282A  0E7F               	movlw	127
  6491  00282C  6E17               	movwf	(___flmul@prod+3)^0,c
  6492  00282E  EF47  F014         	goto	l3113
  6493  002832                     l3101:
  6494  002832  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  6495  002834  EF26  F014         	goto	u3530
  6496  002838  5019               	movf	(___flmul@temp+1)^0,w,c
  6497  00283A  E106               	bnz	u3531
  6498  00283C  0418               	decf	___flmul@temp^0,w,c
  6499  00283E  B0D8               	btfsc	status,0,c
  6500  002840  EF24  F014         	goto	u3531
  6501  002844  EF26  F014         	goto	u3530
  6502  002848                     u3531:
  6503  002848  EF32  F014         	goto	l778
  6504  00284C                     u3530:
  6505  00284C  0E00               	movlw	0
  6506  00284E  6E14               	movwf	___flmul@prod^0,c
  6507  002850  0E00               	movlw	0
  6508  002852  6E15               	movwf	(___flmul@prod+1)^0,c
  6509  002854  0E00               	movlw	0
  6510  002856  6E16               	movwf	(___flmul@prod+2)^0,c
  6511  002858  0E00               	movlw	0
  6512  00285A  6E17               	movwf	(___flmul@prod+3)^0,c
  6513  00285C  0E00               	movlw	0
  6514  00285E  6E0D               	movwf	___flmul@sign^0,c
  6515  002860  EF47  F014         	goto	l3113
  6516  002864                     l778:
  6517  002864  C018  F013         	movff	___flmul@temp,___flmul@bexp
  6518  002868  0EFF               	movlw	255
  6519  00286A  1614               	andwf	___flmul@prod^0,f,c
  6520  00286C  0EFF               	movlw	255
  6521  00286E  1615               	andwf	(___flmul@prod+1)^0,f,c
  6522  002870  0E7F               	movlw	127
  6523  002872  1616               	andwf	(___flmul@prod+2)^0,f,c
  6524  002874  0E00               	movlw	0
  6525  002876  1617               	andwf	(___flmul@prod+3)^0,f,c
  6526  002878  A013               	btfss	___flmul@bexp^0,0,c
  6527  00287A  EF41  F014         	goto	u3541
  6528  00287E  EF43  F014         	goto	u3540
  6529  002882                     u3541:
  6530  002882  EF44  F014         	goto	l3111
  6531  002886                     u3540:
  6532  002886  8E16               	bsf	(___flmul@prod+2)^0,7,c
  6533  002888                     l3111:
  6534  002888  90D8               	bcf	status,0,c
  6535  00288A  3013               	rrcf	___flmul@bexp^0,w,c
  6536  00288C  6E17               	movwf	(___flmul@prod+3)^0,c
  6537  00288E                     l3113:
  6538  00288E  500D               	movf	___flmul@sign^0,w,c
  6539  002890  1217               	iorwf	(___flmul@prod+3)^0,f,c
  6540  002892  C014  F001         	movff	___flmul@prod,?___flmul
  6541  002896  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  6542  00289A  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  6543  00289E  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  6544  0028A2                     l765:
  6545  0028A2  0012               	return		;funcret
  6546  0028A4                     __end_of___flmul:
  6547                           	callstack 0
  6548                           
  6549 ;; *************** function ___flge *****************
  6550 ;; Defined at:
  6551 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\flge.c"
  6552 ;; Parameters:    Size  Location     Type
  6553 ;;  ff1             4   25[COMRAM] unsigned char 
  6554 ;;  ff2             4   29[COMRAM] unsigned char 
  6555 ;; Auto vars:     Size  Location     Type
  6556 ;;		None
  6557 ;; Return value:  Size  Location     Type
  6558 ;;		None               void
  6559 ;; Registers used:
  6560 ;;		wreg, status,2, status,0
  6561 ;; Tracked objects:
  6562 ;;		On entry : 0/0
  6563 ;;		On exit  : 0/0
  6564 ;;		Unchanged: 0/0
  6565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6566 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6568 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6569 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6570 ;;Total ram usage:       12 bytes
  6571 ;; Hardware stack levels used: 1
  6572 ;; This function calls:
  6573 ;;		Nothing
  6574 ;; This function is called by:
  6575 ;;		_efgtoa
  6576 ;; This function uses a non-reentrant model
  6577 ;;
  6578                           
  6579                           	psect	text24
  6580  003594                     __ptext24:
  6581                           	callstack 0
  6582  003594                     ___flge:
  6583                           	callstack 25
  6584  003594  0E00               	movlw	0
  6585  003596  141A               	andwf	___flge@ff1^0,w,c
  6586  003598  6E22               	movwf	??___flge^0,c
  6587  00359A  0E00               	movlw	0
  6588  00359C  141B               	andwf	(___flge@ff1+1)^0,w,c
  6589  00359E  6E23               	movwf	(??___flge+1)^0,c
  6590  0035A0  0E80               	movlw	128
  6591  0035A2  141C               	andwf	(___flge@ff1+2)^0,w,c
  6592  0035A4  6E24               	movwf	(??___flge+2)^0,c
  6593  0035A6  0E7F               	movlw	127
  6594  0035A8  141D               	andwf	(___flge@ff1+3)^0,w,c
  6595  0035AA  6E25               	movwf	(??___flge+3)^0,c
  6596  0035AC  5022               	movf	??___flge^0,w,c
  6597  0035AE  1023               	iorwf	(??___flge+1)^0,w,c
  6598  0035B0  1024               	iorwf	(??___flge+2)^0,w,c
  6599  0035B2  1025               	iorwf	(??___flge+3)^0,w,c
  6600  0035B4  A4D8               	btfss	status,2,c
  6601  0035B6  EFDF  F01A         	goto	u3701
  6602  0035BA  EFE1  F01A         	goto	u3700
  6603  0035BE                     u3701:
  6604  0035BE  EFE9  F01A         	goto	l3225
  6605  0035C2                     u3700:
  6606  0035C2  0E00               	movlw	0
  6607  0035C4  6E1A               	movwf	___flge@ff1^0,c
  6608  0035C6  0E00               	movlw	0
  6609  0035C8  6E1B               	movwf	(___flge@ff1+1)^0,c
  6610  0035CA  0E00               	movlw	0
  6611  0035CC  6E1C               	movwf	(___flge@ff1+2)^0,c
  6612  0035CE  0E00               	movlw	0
  6613  0035D0  6E1D               	movwf	(___flge@ff1+3)^0,c
  6614  0035D2                     l3225:
  6615  0035D2  0E00               	movlw	0
  6616  0035D4  141E               	andwf	___flge@ff2^0,w,c
  6617  0035D6  6E22               	movwf	??___flge^0,c
  6618  0035D8  0E00               	movlw	0
  6619  0035DA  141F               	andwf	(___flge@ff2+1)^0,w,c
  6620  0035DC  6E23               	movwf	(??___flge+1)^0,c
  6621  0035DE  0E80               	movlw	128
  6622  0035E0  1420               	andwf	(___flge@ff2+2)^0,w,c
  6623  0035E2  6E24               	movwf	(??___flge+2)^0,c
  6624  0035E4  0E7F               	movlw	127
  6625  0035E6  1421               	andwf	(___flge@ff2+3)^0,w,c
  6626  0035E8  6E25               	movwf	(??___flge+3)^0,c
  6627  0035EA  5022               	movf	??___flge^0,w,c
  6628  0035EC  1023               	iorwf	(??___flge+1)^0,w,c
  6629  0035EE  1024               	iorwf	(??___flge+2)^0,w,c
  6630  0035F0  1025               	iorwf	(??___flge+3)^0,w,c
  6631  0035F2  A4D8               	btfss	status,2,c
  6632  0035F4  EFFE  F01A         	goto	u3711
  6633  0035F8  EF00  F01B         	goto	u3710
  6634  0035FC                     u3711:
  6635  0035FC  EF08  F01B         	goto	l3229
  6636  003600                     u3710:
  6637  003600  0E00               	movlw	0
  6638  003602  6E1E               	movwf	___flge@ff2^0,c
  6639  003604  0E00               	movlw	0
  6640  003606  6E1F               	movwf	(___flge@ff2+1)^0,c
  6641  003608  0E00               	movlw	0
  6642  00360A  6E20               	movwf	(___flge@ff2+2)^0,c
  6643  00360C  0E00               	movlw	0
  6644  00360E  6E21               	movwf	(___flge@ff2+3)^0,c
  6645  003610                     l3229:
  6646  003610  AE1D               	btfss	(___flge@ff1+3)^0,7,c
  6647  003612  EF0D  F01B         	goto	u3721
  6648  003616  EF0F  F01B         	goto	u3720
  6649  00361A                     u3721:
  6650  00361A  EF18  F01B         	goto	l3233
  6651  00361E                     u3720:
  6652  00361E  6C1A               	negf	___flge@ff1^0,c
  6653  003620  1E1B               	comf	(___flge@ff1+1)^0,f,c
  6654  003622  B0D8               	btfsc	status,0,c
  6655  003624  2A1B               	incf	(___flge@ff1+1)^0,f,c
  6656  003626  1E1C               	comf	(___flge@ff1+2)^0,f,c
  6657  003628  B0D8               	btfsc	status,0,c
  6658  00362A  2A1C               	incf	(___flge@ff1+2)^0,f,c
  6659  00362C  0E80               	movlw	128
  6660  00362E  561D               	subfwb	(___flge@ff1+3)^0,f,c
  6661  003630                     l3233:
  6662  003630  AE21               	btfss	(___flge@ff2+3)^0,7,c
  6663  003632  EF1D  F01B         	goto	u3731
  6664  003636  EF1F  F01B         	goto	u3730
  6665  00363A                     u3731:
  6666  00363A  EF28  F01B         	goto	l412
  6667  00363E                     u3730:
  6668  00363E  6C1E               	negf	___flge@ff2^0,c
  6669  003640  1E1F               	comf	(___flge@ff2+1)^0,f,c
  6670  003642  B0D8               	btfsc	status,0,c
  6671  003644  2A1F               	incf	(___flge@ff2+1)^0,f,c
  6672  003646  1E20               	comf	(___flge@ff2+2)^0,f,c
  6673  003648  B0D8               	btfsc	status,0,c
  6674  00364A  2A20               	incf	(___flge@ff2+2)^0,f,c
  6675  00364C  0E80               	movlw	128
  6676  00364E  5621               	subfwb	(___flge@ff2+3)^0,f,c
  6677  003650                     l412:
  6678  003650  0E00               	movlw	0
  6679  003652  1A1A               	xorwf	___flge@ff1^0,f,c
  6680  003654  0E00               	movlw	0
  6681  003656  1A1B               	xorwf	(___flge@ff1+1)^0,f,c
  6682  003658  0E00               	movlw	0
  6683  00365A  1A1C               	xorwf	(___flge@ff1+2)^0,f,c
  6684  00365C  0E80               	movlw	128
  6685  00365E  1A1D               	xorwf	(___flge@ff1+3)^0,f,c
  6686  003660  0E00               	movlw	0
  6687  003662  1A1E               	xorwf	___flge@ff2^0,f,c
  6688  003664  0E00               	movlw	0
  6689  003666  1A1F               	xorwf	(___flge@ff2+1)^0,f,c
  6690  003668  0E00               	movlw	0
  6691  00366A  1A20               	xorwf	(___flge@ff2+2)^0,f,c
  6692  00366C  0E80               	movlw	128
  6693  00366E  1A21               	xorwf	(___flge@ff2+3)^0,f,c
  6694  003670  501E               	movf	___flge@ff2^0,w,c
  6695  003672  5C1A               	subwf	___flge@ff1^0,w,c
  6696  003674  501F               	movf	(___flge@ff2+1)^0,w,c
  6697  003676  581B               	subwfb	(___flge@ff1+1)^0,w,c
  6698  003678  5020               	movf	(___flge@ff2+2)^0,w,c
  6699  00367A  581C               	subwfb	(___flge@ff1+2)^0,w,c
  6700  00367C  5021               	movf	(___flge@ff2+3)^0,w,c
  6701  00367E  581D               	subwfb	(___flge@ff1+3)^0,w,c
  6702  003680  B0D8               	btfsc	status,0,c
  6703  003682  EF45  F01B         	goto	u3741
  6704  003686  EF47  F01B         	goto	u3740
  6705  00368A                     u3741:
  6706  00368A  EF4A  F01B         	goto	l3239
  6707  00368E                     u3740:
  6708  00368E  90D8               	bcf	status,0,c
  6709  003690  EF4B  F01B         	goto	l417
  6710  003694                     l3239:
  6711  003694  80D8               	bsf	status,0,c
  6712  003696                     l417:
  6713  003696  0012               	return		;funcret
  6714  003698                     __end_of___flge:
  6715                           	callstack 0
  6716                           
  6717 ;; *************** function ___fleq *****************
  6718 ;; Defined at:
  6719 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fleq.c"
  6720 ;; Parameters:    Size  Location     Type
  6721 ;;  ff1             4    0[COMRAM] unsigned char 
  6722 ;;  ff2             4    4[COMRAM] unsigned char 
  6723 ;; Auto vars:     Size  Location     Type
  6724 ;;		None
  6725 ;; Return value:  Size  Location     Type
  6726 ;;		None               void
  6727 ;; Registers used:
  6728 ;;		wreg, status,2, status,0
  6729 ;; Tracked objects:
  6730 ;;		On entry : 0/0
  6731 ;;		On exit  : 0/0
  6732 ;;		Unchanged: 0/0
  6733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6734 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6736 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6737 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6738 ;;Total ram usage:       12 bytes
  6739 ;; Hardware stack levels used: 1
  6740 ;; This function calls:
  6741 ;;		Nothing
  6742 ;; This function is called by:
  6743 ;;		_efgtoa
  6744 ;; This function uses a non-reentrant model
  6745 ;;
  6746                           
  6747                           	psect	text25
  6748  003C76                     __ptext25:
  6749                           	callstack 0
  6750  003C76                     ___fleq:
  6751                           	callstack 25
  6752  003C76  0E00               	movlw	0
  6753  003C78  1401               	andwf	___fleq@ff1^0,w,c
  6754  003C7A  6E09               	movwf	??___fleq^0,c
  6755  003C7C  0E00               	movlw	0
  6756  003C7E  1402               	andwf	(___fleq@ff1+1)^0,w,c
  6757  003C80  6E0A               	movwf	(??___fleq+1)^0,c
  6758  003C82  0E80               	movlw	128
  6759  003C84  1403               	andwf	(___fleq@ff1+2)^0,w,c
  6760  003C86  6E0B               	movwf	(??___fleq+2)^0,c
  6761  003C88  0E7F               	movlw	127
  6762  003C8A  1404               	andwf	(___fleq@ff1+3)^0,w,c
  6763  003C8C  6E0C               	movwf	(??___fleq+3)^0,c
  6764  003C8E  5009               	movf	??___fleq^0,w,c
  6765  003C90  100A               	iorwf	(??___fleq+1)^0,w,c
  6766  003C92  100B               	iorwf	(??___fleq+2)^0,w,c
  6767  003C94  100C               	iorwf	(??___fleq+3)^0,w,c
  6768  003C96  A4D8               	btfss	status,2,c
  6769  003C98  EF50  F01E         	goto	u3671
  6770  003C9C  EF52  F01E         	goto	u3670
  6771  003CA0                     u3671:
  6772  003CA0  EF5A  F01E         	goto	l3209
  6773  003CA4                     u3670:
  6774  003CA4  0E00               	movlw	0
  6775  003CA6  6E01               	movwf	___fleq@ff1^0,c
  6776  003CA8  0E00               	movlw	0
  6777  003CAA  6E02               	movwf	(___fleq@ff1+1)^0,c
  6778  003CAC  0E00               	movlw	0
  6779  003CAE  6E03               	movwf	(___fleq@ff1+2)^0,c
  6780  003CB0  0E00               	movlw	0
  6781  003CB2  6E04               	movwf	(___fleq@ff1+3)^0,c
  6782  003CB4                     l3209:
  6783  003CB4  0E00               	movlw	0
  6784  003CB6  1405               	andwf	___fleq@ff2^0,w,c
  6785  003CB8  6E09               	movwf	??___fleq^0,c
  6786  003CBA  0E00               	movlw	0
  6787  003CBC  1406               	andwf	(___fleq@ff2+1)^0,w,c
  6788  003CBE  6E0A               	movwf	(??___fleq+1)^0,c
  6789  003CC0  0E80               	movlw	128
  6790  003CC2  1407               	andwf	(___fleq@ff2+2)^0,w,c
  6791  003CC4  6E0B               	movwf	(??___fleq+2)^0,c
  6792  003CC6  0E7F               	movlw	127
  6793  003CC8  1408               	andwf	(___fleq@ff2+3)^0,w,c
  6794  003CCA  6E0C               	movwf	(??___fleq+3)^0,c
  6795  003CCC  5009               	movf	??___fleq^0,w,c
  6796  003CCE  100A               	iorwf	(??___fleq+1)^0,w,c
  6797  003CD0  100B               	iorwf	(??___fleq+2)^0,w,c
  6798  003CD2  100C               	iorwf	(??___fleq+3)^0,w,c
  6799  003CD4  A4D8               	btfss	status,2,c
  6800  003CD6  EF6F  F01E         	goto	u3681
  6801  003CDA  EF71  F01E         	goto	u3680
  6802  003CDE                     u3681:
  6803  003CDE  EF79  F01E         	goto	l3213
  6804  003CE2                     u3680:
  6805  003CE2  0E00               	movlw	0
  6806  003CE4  6E05               	movwf	___fleq@ff2^0,c
  6807  003CE6  0E00               	movlw	0
  6808  003CE8  6E06               	movwf	(___fleq@ff2+1)^0,c
  6809  003CEA  0E00               	movlw	0
  6810  003CEC  6E07               	movwf	(___fleq@ff2+2)^0,c
  6811  003CEE  0E00               	movlw	0
  6812  003CF0  6E08               	movwf	(___fleq@ff2+3)^0,c
  6813  003CF2                     l3213:
  6814  003CF2  5005               	movf	___fleq@ff2^0,w,c
  6815  003CF4  1801               	xorwf	___fleq@ff1^0,w,c
  6816  003CF6  E10F               	bnz	u3690
  6817  003CF8  5006               	movf	(___fleq@ff2+1)^0,w,c
  6818  003CFA  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  6819  003CFC  E10C               	bnz	u3690
  6820  003CFE  5007               	movf	(___fleq@ff2+2)^0,w,c
  6821  003D00  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  6822  003D02  E109               	bnz	u3690
  6823  003D04  5008               	movf	(___fleq@ff2+3)^0,w,c
  6824  003D06  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  6825  003D08  B4D8               	btfsc	status,2,c
  6826  003D0A  EF89  F01E         	goto	u3691
  6827  003D0E  EF8B  F01E         	goto	u3690
  6828  003D12                     u3691:
  6829  003D12  EF8E  F01E         	goto	l3217
  6830  003D16                     u3690:
  6831  003D16  90D8               	bcf	status,0,c
  6832  003D18  EF8F  F01E         	goto	l406
  6833  003D1C                     l3217:
  6834  003D1C  80D8               	bsf	status,0,c
  6835  003D1E                     l406:
  6836  003D1E  0012               	return		;funcret
  6837  003D20                     __end_of___fleq:
  6838                           	callstack 0
  6839                           
  6840 ;; *************** function ___fldiv *****************
  6841 ;; Defined at:
  6842 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcdiv.c"
  6843 ;; Parameters:    Size  Location     Type
  6844 ;;  b               4    0[COMRAM] unsigned char 
  6845 ;;  a               4    4[COMRAM] unsigned char 
  6846 ;; Auto vars:     Size  Location     Type
  6847 ;;  grs             4   19[COMRAM] unsigned long 
  6848 ;;  rem             4   12[COMRAM] unsigned long 
  6849 ;;  new_exp         2   17[COMRAM] short 
  6850 ;;  aexp            1   24[COMRAM] unsigned char 
  6851 ;;  bexp            1   23[COMRAM] unsigned char 
  6852 ;;  sign            1   16[COMRAM] unsigned char 
  6853 ;; Return value:  Size  Location     Type
  6854 ;;                  4    0[COMRAM] unsigned char 
  6855 ;; Registers used:
  6856 ;;		wreg, status,2, status,0
  6857 ;; Tracked objects:
  6858 ;;		On entry : 0/0
  6859 ;;		On exit  : 0/0
  6860 ;;		Unchanged: 0/0
  6861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6862 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6863 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6864 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6865 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6866 ;;Total ram usage:       25 bytes
  6867 ;; Hardware stack levels used: 1
  6868 ;; This function calls:
  6869 ;;		Nothing
  6870 ;; This function is called by:
  6871 ;;		_efgtoa
  6872 ;; This function uses a non-reentrant model
  6873 ;;
  6874                           
  6875                           	psect	text26
  6876  0028A4                     __ptext26:
  6877                           	callstack 0
  6878  0028A4                     ___fldiv:
  6879                           	callstack 25
  6880  0028A4  5004               	movf	(___fldiv@b+3)^0,w,c
  6881  0028A6  0B80               	andlw	128
  6882  0028A8  6E11               	movwf	___fldiv@sign^0,c
  6883  0028AA  5004               	movf	(___fldiv@b+3)^0,w,c
  6884  0028AC  2404               	addwf	(___fldiv@b+3)^0,w,c
  6885  0028AE  6E18               	movwf	___fldiv@bexp^0,c
  6886  0028B0  AE03               	btfss	(___fldiv@b+2)^0,7,c
  6887  0028B2  EF5D  F014         	goto	u3131
  6888  0028B6  EF5F  F014         	goto	u3130
  6889  0028BA                     u3131:
  6890  0028BA  EF60  F014         	goto	l2857
  6891  0028BE                     u3130:
  6892  0028BE  8018               	bsf	___fldiv@bexp^0,0,c
  6893  0028C0                     l2857:
  6894  0028C0  5018               	movf	___fldiv@bexp^0,w,c
  6895  0028C2  B4D8               	btfsc	status,2,c
  6896  0028C4  EF66  F014         	goto	u3141
  6897  0028C8  EF68  F014         	goto	u3140
  6898  0028CC                     u3141:
  6899  0028CC  EF7D  F014         	goto	l2867
  6900  0028D0                     u3140:
  6901  0028D0  2818               	incf	___fldiv@bexp^0,w,c
  6902  0028D2  A4D8               	btfss	status,2,c
  6903  0028D4  EF6E  F014         	goto	u3151
  6904  0028D8  EF70  F014         	goto	u3150
  6905  0028DC                     u3151:
  6906  0028DC  EF78  F014         	goto	l2863
  6907  0028E0                     u3150:
  6908  0028E0  0E00               	movlw	0
  6909  0028E2  6E01               	movwf	___fldiv@b^0,c
  6910  0028E4  0E00               	movlw	0
  6911  0028E6  6E02               	movwf	(___fldiv@b+1)^0,c
  6912  0028E8  0E00               	movlw	0
  6913  0028EA  6E03               	movwf	(___fldiv@b+2)^0,c
  6914  0028EC  0E00               	movlw	0
  6915  0028EE  6E04               	movwf	(___fldiv@b+3)^0,c
  6916  0028F0                     l2863:
  6917  0028F0  8E03               	bsf	(___fldiv@b+2)^0,7,c
  6918  0028F2  0E00               	movlw	0
  6919  0028F4  6E04               	movwf	(___fldiv@b+3)^0,c
  6920  0028F6  EF85  F014         	goto	l2869
  6921  0028FA                     l2867:
  6922  0028FA  0E00               	movlw	0
  6923  0028FC  6E01               	movwf	___fldiv@b^0,c
  6924  0028FE  0E00               	movlw	0
  6925  002900  6E02               	movwf	(___fldiv@b+1)^0,c
  6926  002902  0E00               	movlw	0
  6927  002904  6E03               	movwf	(___fldiv@b+2)^0,c
  6928  002906  0E00               	movlw	0
  6929  002908  6E04               	movwf	(___fldiv@b+3)^0,c
  6930  00290A                     l2869:
  6931  00290A  5008               	movf	(___fldiv@a+3)^0,w,c
  6932  00290C  0B80               	andlw	128
  6933  00290E  1A11               	xorwf	___fldiv@sign^0,f,c
  6934  002910  5008               	movf	(___fldiv@a+3)^0,w,c
  6935  002912  2408               	addwf	(___fldiv@a+3)^0,w,c
  6936  002914  6E19               	movwf	___fldiv@aexp^0,c
  6937  002916  AE07               	btfss	(___fldiv@a+2)^0,7,c
  6938  002918  EF90  F014         	goto	u3161
  6939  00291C  EF92  F014         	goto	u3160
  6940  002920                     u3161:
  6941  002920  EF93  F014         	goto	l2877
  6942  002924                     u3160:
  6943  002924  8019               	bsf	___fldiv@aexp^0,0,c
  6944  002926                     l2877:
  6945  002926  5019               	movf	___fldiv@aexp^0,w,c
  6946  002928  B4D8               	btfsc	status,2,c
  6947  00292A  EF99  F014         	goto	u3171
  6948  00292E  EF9B  F014         	goto	u3170
  6949  002932                     u3171:
  6950  002932  EFB0  F014         	goto	l2887
  6951  002936                     u3170:
  6952  002936  2819               	incf	___fldiv@aexp^0,w,c
  6953  002938  A4D8               	btfss	status,2,c
  6954  00293A  EFA1  F014         	goto	u3181
  6955  00293E  EFA3  F014         	goto	u3180
  6956  002942                     u3181:
  6957  002942  EFAB  F014         	goto	l2883
  6958  002946                     u3180:
  6959  002946  0E00               	movlw	0
  6960  002948  6E05               	movwf	___fldiv@a^0,c
  6961  00294A  0E00               	movlw	0
  6962  00294C  6E06               	movwf	(___fldiv@a+1)^0,c
  6963  00294E  0E00               	movlw	0
  6964  002950  6E07               	movwf	(___fldiv@a+2)^0,c
  6965  002952  0E00               	movlw	0
  6966  002954  6E08               	movwf	(___fldiv@a+3)^0,c
  6967  002956                     l2883:
  6968  002956  8E07               	bsf	(___fldiv@a+2)^0,7,c
  6969  002958  0E00               	movlw	0
  6970  00295A  6E08               	movwf	(___fldiv@a+3)^0,c
  6971  00295C  EFB8  F014         	goto	l2889
  6972  002960                     l2887:
  6973  002960  0E00               	movlw	0
  6974  002962  6E05               	movwf	___fldiv@a^0,c
  6975  002964  0E00               	movlw	0
  6976  002966  6E06               	movwf	(___fldiv@a+1)^0,c
  6977  002968  0E00               	movlw	0
  6978  00296A  6E07               	movwf	(___fldiv@a+2)^0,c
  6979  00296C  0E00               	movlw	0
  6980  00296E  6E08               	movwf	(___fldiv@a+3)^0,c
  6981  002970                     l2889:
  6982  002970  5005               	movf	___fldiv@a^0,w,c
  6983  002972  1006               	iorwf	(___fldiv@a+1)^0,w,c
  6984  002974  1007               	iorwf	(___fldiv@a+2)^0,w,c
  6985  002976  1008               	iorwf	(___fldiv@a+3)^0,w,c
  6986  002978  A4D8               	btfss	status,2,c
  6987  00297A  EFC1  F014         	goto	u3191
  6988  00297E  EFC3  F014         	goto	u3190
  6989  002982                     u3191:
  6990  002982  EFDB  F014         	goto	l2901
  6991  002986                     u3190:
  6992  002986  0E00               	movlw	0
  6993  002988  6E01               	movwf	___fldiv@b^0,c
  6994  00298A  0E00               	movlw	0
  6995  00298C  6E02               	movwf	(___fldiv@b+1)^0,c
  6996  00298E  0E00               	movlw	0
  6997  002990  6E03               	movwf	(___fldiv@b+2)^0,c
  6998  002992  0E00               	movlw	0
  6999  002994  6E04               	movwf	(___fldiv@b+3)^0,c
  7000  002996  0E80               	movlw	128
  7001  002998  1203               	iorwf	(___fldiv@b+2)^0,f,c
  7002  00299A  0E7F               	movlw	127
  7003  00299C  1204               	iorwf	(___fldiv@b+3)^0,f,c
  7004  00299E                     l2895:
  7005  00299E  5011               	movf	___fldiv@sign^0,w,c
  7006  0029A0  1204               	iorwf	(___fldiv@b+3)^0,f,c
  7007  0029A2  C001  F001         	movff	___fldiv@b,?___fldiv
  7008  0029A6  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  7009  0029AA  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  7010  0029AE  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  7011  0029B2  EF1E  F016         	goto	l729
  7012  0029B6                     l2901:
  7013  0029B6  5018               	movf	___fldiv@bexp^0,w,c
  7014  0029B8  A4D8               	btfss	status,2,c
  7015  0029BA  EFE1  F014         	goto	u3201
  7016  0029BE  EFE3  F014         	goto	u3200
  7017  0029C2                     u3201:
  7018  0029C2  EFED  F014         	goto	l2909
  7019  0029C6                     u3200:
  7020  0029C6  0E00               	movlw	0
  7021  0029C8  6E01               	movwf	?___fldiv^0,c
  7022  0029CA  0E00               	movlw	0
  7023  0029CC  6E02               	movwf	(?___fldiv+1)^0,c
  7024  0029CE  0E00               	movlw	0
  7025  0029D0  6E03               	movwf	(?___fldiv+2)^0,c
  7026  0029D2  0E00               	movlw	0
  7027  0029D4  6E04               	movwf	(?___fldiv+3)^0,c
  7028  0029D6  EF1E  F016         	goto	l729
  7029  0029DA                     l2909:
  7030  0029DA  5019               	movf	___fldiv@aexp^0,w,c
  7031  0029DC  C018  F009         	movff	___fldiv@bexp,??___fldiv
  7032  0029E0  6A0A               	clrf	(??___fldiv+1)^0,c
  7033  0029E2  5E09               	subwf	??___fldiv^0,f,c
  7034  0029E4  0E00               	movlw	0
  7035  0029E6  5A0A               	subwfb	(??___fldiv+1)^0,f,c
  7036  0029E8  0E7F               	movlw	127
  7037  0029EA  2409               	addwf	??___fldiv^0,w,c
  7038  0029EC  6E12               	movwf	___fldiv@new_exp^0,c
  7039  0029EE  0E00               	movlw	0
  7040  0029F0  200A               	addwfc	(??___fldiv+1)^0,w,c
  7041  0029F2  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  7042  0029F4  C001  F00D         	movff	___fldiv@b,___fldiv@rem
  7043  0029F8  C002  F00E         	movff	___fldiv@b+1,___fldiv@rem+1
  7044  0029FC  C003  F00F         	movff	___fldiv@b+2,___fldiv@rem+2
  7045  002A00  C004  F010         	movff	___fldiv@b+3,___fldiv@rem+3
  7046  002A04  0E00               	movlw	0
  7047  002A06  6E01               	movwf	___fldiv@b^0,c
  7048  002A08  0E00               	movlw	0
  7049  002A0A  6E02               	movwf	(___fldiv@b+1)^0,c
  7050  002A0C  0E00               	movlw	0
  7051  002A0E  6E03               	movwf	(___fldiv@b+2)^0,c
  7052  002A10  0E00               	movlw	0
  7053  002A12  6E04               	movwf	(___fldiv@b+3)^0,c
  7054  002A14  0E00               	movlw	0
  7055  002A16  6E14               	movwf	___fldiv@grs^0,c
  7056  002A18  0E00               	movlw	0
  7057  002A1A  6E15               	movwf	(___fldiv@grs+1)^0,c
  7058  002A1C  0E00               	movlw	0
  7059  002A1E  6E16               	movwf	(___fldiv@grs+2)^0,c
  7060  002A20  0E00               	movlw	0
  7061  002A22  6E17               	movwf	(___fldiv@grs+3)^0,c
  7062  002A24  0E00               	movlw	0
  7063  002A26  6E19               	movwf	___fldiv@aexp^0,c
  7064  002A28  EF4E  F015         	goto	l731
  7065  002A2C                     l2919:
  7066  002A2C  5019               	movf	___fldiv@aexp^0,w,c
  7067  002A2E  B4D8               	btfsc	status,2,c
  7068  002A30  EF1C  F015         	goto	u3211
  7069  002A34  EF1E  F015         	goto	u3210
  7070  002A38                     u3211:
  7071  002A38  EF35  F015         	goto	l2927
  7072  002A3C                     u3210:
  7073  002A3C  90D8               	bcf	status,0,c
  7074  002A3E  360D               	rlcf	___fldiv@rem^0,f,c
  7075  002A40  360E               	rlcf	(___fldiv@rem+1)^0,f,c
  7076  002A42  360F               	rlcf	(___fldiv@rem+2)^0,f,c
  7077  002A44  3610               	rlcf	(___fldiv@rem+3)^0,f,c
  7078  002A46  90D8               	bcf	status,0,c
  7079  002A48  3601               	rlcf	___fldiv@b^0,f,c
  7080  002A4A  3602               	rlcf	(___fldiv@b+1)^0,f,c
  7081  002A4C  3603               	rlcf	(___fldiv@b+2)^0,f,c
  7082  002A4E  3604               	rlcf	(___fldiv@b+3)^0,f,c
  7083  002A50  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  7084  002A52  EF2D  F015         	goto	u3221
  7085  002A56  EF2F  F015         	goto	u3220
  7086  002A5A                     u3221:
  7087  002A5A  EF30  F015         	goto	l734
  7088  002A5E                     u3220:
  7089  002A5E  8001               	bsf	___fldiv@b^0,0,c
  7090  002A60                     l734:
  7091  002A60  90D8               	bcf	status,0,c
  7092  002A62  3614               	rlcf	___fldiv@grs^0,f,c
  7093  002A64  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  7094  002A66  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  7095  002A68  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  7096  002A6A                     l2927:
  7097  002A6A  5005               	movf	___fldiv@a^0,w,c
  7098  002A6C  5C0D               	subwf	___fldiv@rem^0,w,c
  7099  002A6E  5006               	movf	(___fldiv@a+1)^0,w,c
  7100  002A70  580E               	subwfb	(___fldiv@rem+1)^0,w,c
  7101  002A72  5007               	movf	(___fldiv@a+2)^0,w,c
  7102  002A74  580F               	subwfb	(___fldiv@rem+2)^0,w,c
  7103  002A76  5008               	movf	(___fldiv@a+3)^0,w,c
  7104  002A78  5810               	subwfb	(___fldiv@rem+3)^0,w,c
  7105  002A7A  A0D8               	btfss	status,0,c
  7106  002A7C  EF42  F015         	goto	u3231
  7107  002A80  EF44  F015         	goto	u3230
  7108  002A84                     u3231:
  7109  002A84  EF4D  F015         	goto	l2933
  7110  002A88                     u3230:
  7111  002A88  8C17               	bsf	(___fldiv@grs+3)^0,6,c
  7112  002A8A  5005               	movf	___fldiv@a^0,w,c
  7113  002A8C  5E0D               	subwf	___fldiv@rem^0,f,c
  7114  002A8E  5006               	movf	(___fldiv@a+1)^0,w,c
  7115  002A90  5A0E               	subwfb	(___fldiv@rem+1)^0,f,c
  7116  002A92  5007               	movf	(___fldiv@a+2)^0,w,c
  7117  002A94  5A0F               	subwfb	(___fldiv@rem+2)^0,f,c
  7118  002A96  5008               	movf	(___fldiv@a+3)^0,w,c
  7119  002A98  5A10               	subwfb	(___fldiv@rem+3)^0,f,c
  7120  002A9A                     l2933:
  7121  002A9A  2A19               	incf	___fldiv@aexp^0,f,c
  7122  002A9C                     l731:
  7123  002A9C  0E19               	movlw	25
  7124  002A9E  6419               	cpfsgt	___fldiv@aexp^0,c
  7125  002AA0  EF54  F015         	goto	u3241
  7126  002AA4  EF56  F015         	goto	u3240
  7127  002AA8                     u3241:
  7128  002AA8  EF16  F015         	goto	l2919
  7129  002AAC                     u3240:
  7130  002AAC  500D               	movf	___fldiv@rem^0,w,c
  7131  002AAE  100E               	iorwf	(___fldiv@rem+1)^0,w,c
  7132  002AB0  100F               	iorwf	(___fldiv@rem+2)^0,w,c
  7133  002AB2  1010               	iorwf	(___fldiv@rem+3)^0,w,c
  7134  002AB4  B4D8               	btfsc	status,2,c
  7135  002AB6  EF5F  F015         	goto	u3251
  7136  002ABA  EF61  F015         	goto	u3250
  7137  002ABE                     u3251:
  7138  002ABE  EF79  F015         	goto	l2945
  7139  002AC2                     u3250:
  7140  002AC2  8014               	bsf	___fldiv@grs^0,0,c
  7141  002AC4  EF79  F015         	goto	l2945
  7142  002AC8                     l2939:
  7143  002AC8  90D8               	bcf	status,0,c
  7144  002ACA  3601               	rlcf	___fldiv@b^0,f,c
  7145  002ACC  3602               	rlcf	(___fldiv@b+1)^0,f,c
  7146  002ACE  3603               	rlcf	(___fldiv@b+2)^0,f,c
  7147  002AD0  3604               	rlcf	(___fldiv@b+3)^0,f,c
  7148  002AD2  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  7149  002AD4  EF6E  F015         	goto	u3261
  7150  002AD8  EF70  F015         	goto	u3260
  7151  002ADC                     u3261:
  7152  002ADC  EF71  F015         	goto	l740
  7153  002AE0                     u3260:
  7154  002AE0  8001               	bsf	___fldiv@b^0,0,c
  7155  002AE2                     l740:
  7156  002AE2  90D8               	bcf	status,0,c
  7157  002AE4  3614               	rlcf	___fldiv@grs^0,f,c
  7158  002AE6  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  7159  002AE8  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  7160  002AEA  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  7161  002AEC  0612               	decf	___fldiv@new_exp^0,f,c
  7162  002AEE  A0D8               	btfss	status,0,c
  7163  002AF0  0613               	decf	(___fldiv@new_exp+1)^0,f,c
  7164  002AF2                     l2945:
  7165  002AF2  AE03               	btfss	(___fldiv@b+2)^0,7,c
  7166  002AF4  EF7E  F015         	goto	u3271
  7167  002AF8  EF80  F015         	goto	u3270
  7168  002AFC                     u3271:
  7169  002AFC  EF64  F015         	goto	l2939
  7170  002B00                     u3270:
  7171  002B00  0E00               	movlw	0
  7172  002B02  6E19               	movwf	___fldiv@aexp^0,c
  7173  002B04  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  7174  002B06  EF87  F015         	goto	u3281
  7175  002B0A  EF89  F015         	goto	u3280
  7176  002B0E                     u3281:
  7177  002B0E  EFAD  F015         	goto	l742
  7178  002B12                     u3280:
  7179  002B12  0EFF               	movlw	255
  7180  002B14  1414               	andwf	___fldiv@grs^0,w,c
  7181  002B16  6E09               	movwf	??___fldiv^0,c
  7182  002B18  0EFF               	movlw	255
  7183  002B1A  1415               	andwf	(___fldiv@grs+1)^0,w,c
  7184  002B1C  6E0A               	movwf	(??___fldiv+1)^0,c
  7185  002B1E  0EFF               	movlw	255
  7186  002B20  1416               	andwf	(___fldiv@grs+2)^0,w,c
  7187  002B22  6E0B               	movwf	(??___fldiv+2)^0,c
  7188  002B24  0E7F               	movlw	127
  7189  002B26  1417               	andwf	(___fldiv@grs+3)^0,w,c
  7190  002B28  6E0C               	movwf	(??___fldiv+3)^0,c
  7191  002B2A  5009               	movf	??___fldiv^0,w,c
  7192  002B2C  100A               	iorwf	(??___fldiv+1)^0,w,c
  7193  002B2E  100B               	iorwf	(??___fldiv+2)^0,w,c
  7194  002B30  100C               	iorwf	(??___fldiv+3)^0,w,c
  7195  002B32  B4D8               	btfsc	status,2,c
  7196  002B34  EF9E  F015         	goto	u3291
  7197  002B38  EFA0  F015         	goto	u3290
  7198  002B3C                     u3291:
  7199  002B3C  EFA4  F015         	goto	l743
  7200  002B40                     u3290:
  7201  002B40                     l2953:
  7202  002B40  0E01               	movlw	1
  7203  002B42  6E19               	movwf	___fldiv@aexp^0,c
  7204  002B44  EFAD  F015         	goto	l742
  7205  002B48                     l743:
  7206  002B48  A001               	btfss	___fldiv@b^0,0,c
  7207  002B4A  EFA9  F015         	goto	u3301
  7208  002B4E  EFAB  F015         	goto	u3300
  7209  002B52                     u3301:
  7210  002B52  EFAD  F015         	goto	l742
  7211  002B56                     u3300:
  7212  002B56  EFA0  F015         	goto	l2953
  7213  002B5A                     l742:
  7214  002B5A  5019               	movf	___fldiv@aexp^0,w,c
  7215  002B5C  B4D8               	btfsc	status,2,c
  7216  002B5E  EFB3  F015         	goto	u3311
  7217  002B62  EFB5  F015         	goto	u3310
  7218  002B66                     u3311:
  7219  002B66  EFD9  F015         	goto	l2965
  7220  002B6A                     u3310:
  7221  002B6A  0E01               	movlw	1
  7222  002B6C  2601               	addwf	___fldiv@b^0,f,c
  7223  002B6E  0E00               	movlw	0
  7224  002B70  2202               	addwfc	(___fldiv@b+1)^0,f,c
  7225  002B72  2203               	addwfc	(___fldiv@b+2)^0,f,c
  7226  002B74  2204               	addwfc	(___fldiv@b+3)^0,f,c
  7227  002B76  A004               	btfss	(___fldiv@b+3)^0,0,c
  7228  002B78  EFC0  F015         	goto	u3321
  7229  002B7C  EFC2  F015         	goto	u3320
  7230  002B80                     u3321:
  7231  002B80  EFD9  F015         	goto	l2965
  7232  002B84                     u3320:
  7233  002B84  C001  F009         	movff	___fldiv@b,??___fldiv
  7234  002B88  C002  F00A         	movff	___fldiv@b+1,??___fldiv+1
  7235  002B8C  C003  F00B         	movff	___fldiv@b+2,??___fldiv+2
  7236  002B90  C004  F00C         	movff	___fldiv@b+3,??___fldiv+3
  7237  002B94  340C               	rlcf	(??___fldiv+3)^0,w,c
  7238  002B96  320C               	rrcf	(??___fldiv+3)^0,f,c
  7239  002B98  320B               	rrcf	(??___fldiv+2)^0,f,c
  7240  002B9A  320A               	rrcf	(??___fldiv+1)^0,f,c
  7241  002B9C  3209               	rrcf	??___fldiv^0,f,c
  7242  002B9E  C009  F001         	movff	??___fldiv,___fldiv@b
  7243  002BA2  C00A  F002         	movff	??___fldiv+1,___fldiv@b+1
  7244  002BA6  C00B  F003         	movff	??___fldiv+2,___fldiv@b+2
  7245  002BAA  C00C  F004         	movff	??___fldiv+3,___fldiv@b+3
  7246  002BAE  4A12               	infsnz	___fldiv@new_exp^0,f,c
  7247  002BB0  2A13               	incf	(___fldiv@new_exp+1)^0,f,c
  7248  002BB2                     l2965:
  7249  002BB2  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7250  002BB4  EFE4  F015         	goto	u3331
  7251  002BB8  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  7252  002BBA  E108               	bnz	u3330
  7253  002BBC  2812               	incf	___fldiv@new_exp^0,w,c
  7254  002BBE  A0D8               	btfss	status,0,c
  7255  002BC0  EFE4  F015         	goto	u3331
  7256  002BC4  EFE6  F015         	goto	u3330
  7257  002BC8                     u3331:
  7258  002BC8  EFF1  F015         	goto	l2969
  7259  002BCC                     u3330:
  7260  002BCC  0E00               	movlw	0
  7261  002BCE  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  7262  002BD0  6812               	setf	___fldiv@new_exp^0,c
  7263  002BD2  0E00               	movlw	0
  7264  002BD4  6E01               	movwf	___fldiv@b^0,c
  7265  002BD6  0E00               	movlw	0
  7266  002BD8  6E02               	movwf	(___fldiv@b+1)^0,c
  7267  002BDA  0E00               	movlw	0
  7268  002BDC  6E03               	movwf	(___fldiv@b+2)^0,c
  7269  002BDE  0E00               	movlw	0
  7270  002BE0  6E04               	movwf	(___fldiv@b+3)^0,c
  7271  002BE2                     l2969:
  7272  002BE2  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7273  002BE4  EFFE  F015         	goto	u3340
  7274  002BE8  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  7275  002BEA  E106               	bnz	u3341
  7276  002BEC  0412               	decf	___fldiv@new_exp^0,w,c
  7277  002BEE  B0D8               	btfsc	status,0,c
  7278  002BF0  EFFC  F015         	goto	u3341
  7279  002BF4  EFFE  F015         	goto	u3340
  7280  002BF8                     u3341:
  7281  002BF8  EF0C  F016         	goto	l2973
  7282  002BFC                     u3340:
  7283  002BFC  0E00               	movlw	0
  7284  002BFE  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  7285  002C00  0E00               	movlw	0
  7286  002C02  6E12               	movwf	___fldiv@new_exp^0,c
  7287  002C04  0E00               	movlw	0
  7288  002C06  6E01               	movwf	___fldiv@b^0,c
  7289  002C08  0E00               	movlw	0
  7290  002C0A  6E02               	movwf	(___fldiv@b+1)^0,c
  7291  002C0C  0E00               	movlw	0
  7292  002C0E  6E03               	movwf	(___fldiv@b+2)^0,c
  7293  002C10  0E00               	movlw	0
  7294  002C12  6E04               	movwf	(___fldiv@b+3)^0,c
  7295  002C14  0E00               	movlw	0
  7296  002C16  6E11               	movwf	___fldiv@sign^0,c
  7297  002C18                     l2973:
  7298  002C18  C012  F018         	movff	___fldiv@new_exp,___fldiv@bexp
  7299  002C1C  A018               	btfss	___fldiv@bexp^0,0,c
  7300  002C1E  EF13  F016         	goto	u3351
  7301  002C22  EF15  F016         	goto	u3350
  7302  002C26                     u3351:
  7303  002C26  EF18  F016         	goto	l2979
  7304  002C2A                     u3350:
  7305  002C2A  8E03               	bsf	(___fldiv@b+2)^0,7,c
  7306  002C2C  EF19  F016         	goto	l2981
  7307  002C30                     l2979:
  7308  002C30  9E03               	bcf	(___fldiv@b+2)^0,7,c
  7309  002C32                     l2981:
  7310  002C32  90D8               	bcf	status,0,c
  7311  002C34  3018               	rrcf	___fldiv@bexp^0,w,c
  7312  002C36  6E04               	movwf	(___fldiv@b+3)^0,c
  7313  002C38  EFCF  F014         	goto	l2895
  7314  002C3C                     l729:
  7315  002C3C  0012               	return		;funcret
  7316  002C3E                     __end_of___fldiv:
  7317                           	callstack 0
  7318                           
  7319 ;; *************** function ___awmod *****************
  7320 ;; Defined at:
  7321 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awmod.c"
  7322 ;; Parameters:    Size  Location     Type
  7323 ;;  dividend        2    0[COMRAM] int 
  7324 ;;  divisor         2    2[COMRAM] int 
  7325 ;; Auto vars:     Size  Location     Type
  7326 ;;  sign            1    5[COMRAM] unsigned char 
  7327 ;;  counter         1    4[COMRAM] unsigned char 
  7328 ;; Return value:  Size  Location     Type
  7329 ;;                  2    0[COMRAM] int 
  7330 ;; Registers used:
  7331 ;;		wreg, status,2, status,0
  7332 ;; Tracked objects:
  7333 ;;		On entry : 0/0
  7334 ;;		On exit  : 0/0
  7335 ;;		Unchanged: 0/0
  7336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7337 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7338 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7340 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7341 ;;Total ram usage:        6 bytes
  7342 ;; Hardware stack levels used: 1
  7343 ;; This function calls:
  7344 ;;		Nothing
  7345 ;; This function is called by:
  7346 ;;		_efgtoa
  7347 ;; This function uses a non-reentrant model
  7348 ;;
  7349                           
  7350                           	psect	text27
  7351  003BC6                     __ptext27:
  7352                           	callstack 0
  7353  003BC6                     ___awmod:
  7354                           	callstack 25
  7355  003BC6  0E00               	movlw	0
  7356  003BC8  6E06               	movwf	___awmod@sign^0,c
  7357  003BCA  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  7358  003BCC  EFEC  F01D         	goto	u3610
  7359  003BD0  EFEA  F01D         	goto	u3611
  7360  003BD4                     u3611:
  7361  003BD4  EFF2  F01D         	goto	l3177
  7362  003BD8                     u3610:
  7363  003BD8  6C01               	negf	___awmod@dividend^0,c
  7364  003BDA  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7365  003BDC  B0D8               	btfsc	status,0,c
  7366  003BDE  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7367  003BE0  0E01               	movlw	1
  7368  003BE2  6E06               	movwf	___awmod@sign^0,c
  7369  003BE4                     l3177:
  7370  003BE4  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  7371  003BE6  EFF9  F01D         	goto	u3620
  7372  003BEA  EFF7  F01D         	goto	u3621
  7373  003BEE                     u3621:
  7374  003BEE  EFFD  F01D         	goto	l3181
  7375  003BF2                     u3620:
  7376  003BF2  6C03               	negf	___awmod@divisor^0,c
  7377  003BF4  1E04               	comf	(___awmod@divisor+1)^0,f,c
  7378  003BF6  B0D8               	btfsc	status,0,c
  7379  003BF8  2A04               	incf	(___awmod@divisor+1)^0,f,c
  7380  003BFA                     l3181:
  7381  003BFA  5003               	movf	___awmod@divisor^0,w,c
  7382  003BFC  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  7383  003BFE  B4D8               	btfsc	status,2,c
  7384  003C00  EF04  F01E         	goto	u3631
  7385  003C04  EF06  F01E         	goto	u3630
  7386  003C08                     u3631:
  7387  003C08  EF2A  F01E         	goto	l3197
  7388  003C0C                     u3630:
  7389  003C0C  0E01               	movlw	1
  7390  003C0E  6E05               	movwf	___awmod@counter^0,c
  7391  003C10  EF0E  F01E         	goto	l3187
  7392  003C14                     l3185:
  7393  003C14  90D8               	bcf	status,0,c
  7394  003C16  3603               	rlcf	___awmod@divisor^0,f,c
  7395  003C18  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  7396  003C1A  2A05               	incf	___awmod@counter^0,f,c
  7397  003C1C                     l3187:
  7398  003C1C  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  7399  003C1E  EF13  F01E         	goto	u3641
  7400  003C22  EF15  F01E         	goto	u3640
  7401  003C26                     u3641:
  7402  003C26  EF0A  F01E         	goto	l3185
  7403  003C2A                     u3640:
  7404  003C2A                     l3189:
  7405  003C2A  5003               	movf	___awmod@divisor^0,w,c
  7406  003C2C  5C01               	subwf	___awmod@dividend^0,w,c
  7407  003C2E  5004               	movf	(___awmod@divisor+1)^0,w,c
  7408  003C30  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  7409  003C32  A0D8               	btfss	status,0,c
  7410  003C34  EF1E  F01E         	goto	u3651
  7411  003C38  EF20  F01E         	goto	u3650
  7412  003C3C                     u3651:
  7413  003C3C  EF24  F01E         	goto	l3193
  7414  003C40                     u3650:
  7415  003C40  5003               	movf	___awmod@divisor^0,w,c
  7416  003C42  5E01               	subwf	___awmod@dividend^0,f,c
  7417  003C44  5004               	movf	(___awmod@divisor+1)^0,w,c
  7418  003C46  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  7419  003C48                     l3193:
  7420  003C48  90D8               	bcf	status,0,c
  7421  003C4A  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  7422  003C4C  3203               	rrcf	___awmod@divisor^0,f,c
  7423  003C4E  2E05               	decfsz	___awmod@counter^0,f,c
  7424  003C50  EF15  F01E         	goto	l3189
  7425  003C54                     l3197:
  7426  003C54  5006               	movf	___awmod@sign^0,w,c
  7427  003C56  B4D8               	btfsc	status,2,c
  7428  003C58  EF30  F01E         	goto	u3661
  7429  003C5C  EF32  F01E         	goto	u3660
  7430  003C60                     u3661:
  7431  003C60  EF36  F01E         	goto	l3201
  7432  003C64                     u3660:
  7433  003C64  6C01               	negf	___awmod@dividend^0,c
  7434  003C66  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7435  003C68  B0D8               	btfsc	status,0,c
  7436  003C6A  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7437  003C6C                     l3201:
  7438  003C6C  C001  F001         	movff	___awmod@dividend,?___awmod
  7439  003C70  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  7440  003C74  0012               	return		;funcret
  7441  003C76                     __end_of___awmod:
  7442                           	callstack 0
  7443                           
  7444 ;; *************** function ___awdiv *****************
  7445 ;; Defined at:
  7446 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
  7447 ;; Parameters:    Size  Location     Type
  7448 ;;  dividend        2    0[COMRAM] int 
  7449 ;;  divisor         2    2[COMRAM] int 
  7450 ;; Auto vars:     Size  Location     Type
  7451 ;;  quotient        2    6[COMRAM] int 
  7452 ;;  sign            1    5[COMRAM] unsigned char 
  7453 ;;  counter         1    4[COMRAM] unsigned char 
  7454 ;; Return value:  Size  Location     Type
  7455 ;;                  2    0[COMRAM] int 
  7456 ;; Registers used:
  7457 ;;		wreg, status,2, status,0
  7458 ;; Tracked objects:
  7459 ;;		On entry : 0/0
  7460 ;;		On exit  : 0/0
  7461 ;;		Unchanged: 0/0
  7462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7463 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7464 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7466 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7467 ;;Total ram usage:        8 bytes
  7468 ;; Hardware stack levels used: 1
  7469 ;; This function calls:
  7470 ;;		Nothing
  7471 ;; This function is called by:
  7472 ;;		_efgtoa
  7473 ;; This function uses a non-reentrant model
  7474 ;;
  7475                           
  7476                           	psect	text28
  7477  003A40                     __ptext28:
  7478                           	callstack 0
  7479  003A40                     ___awdiv:
  7480                           	callstack 25
  7481  003A40  0E00               	movlw	0
  7482  003A42  6E06               	movwf	___awdiv@sign^0,c
  7483  003A44  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  7484  003A46  EF29  F01D         	goto	u3550
  7485  003A4A  EF27  F01D         	goto	u3551
  7486  003A4E                     u3551:
  7487  003A4E  EF2F  F01D         	goto	l3133
  7488  003A52                     u3550:
  7489  003A52  6C03               	negf	___awdiv@divisor^0,c
  7490  003A54  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  7491  003A56  B0D8               	btfsc	status,0,c
  7492  003A58  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  7493  003A5A  0E01               	movlw	1
  7494  003A5C  6E06               	movwf	___awdiv@sign^0,c
  7495  003A5E                     l3133:
  7496  003A5E  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  7497  003A60  EF36  F01D         	goto	u3560
  7498  003A64  EF34  F01D         	goto	u3561
  7499  003A68                     u3561:
  7500  003A68  EF3C  F01D         	goto	l3139
  7501  003A6C                     u3560:
  7502  003A6C  6C01               	negf	___awdiv@dividend^0,c
  7503  003A6E  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  7504  003A70  B0D8               	btfsc	status,0,c
  7505  003A72  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  7506  003A74  0E01               	movlw	1
  7507  003A76  1A06               	xorwf	___awdiv@sign^0,f,c
  7508  003A78                     l3139:
  7509  003A78  0E00               	movlw	0
  7510  003A7A  6E08               	movwf	(___awdiv@quotient+1)^0,c
  7511  003A7C  0E00               	movlw	0
  7512  003A7E  6E07               	movwf	___awdiv@quotient^0,c
  7513  003A80  5003               	movf	___awdiv@divisor^0,w,c
  7514  003A82  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  7515  003A84  B4D8               	btfsc	status,2,c
  7516  003A86  EF47  F01D         	goto	u3571
  7517  003A8A  EF49  F01D         	goto	u3570
  7518  003A8E                     u3571:
  7519  003A8E  EF71  F01D         	goto	l3161
  7520  003A92                     u3570:
  7521  003A92  0E01               	movlw	1
  7522  003A94  6E05               	movwf	___awdiv@counter^0,c
  7523  003A96  EF51  F01D         	goto	l3147
  7524  003A9A                     l3145:
  7525  003A9A  90D8               	bcf	status,0,c
  7526  003A9C  3603               	rlcf	___awdiv@divisor^0,f,c
  7527  003A9E  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  7528  003AA0  2A05               	incf	___awdiv@counter^0,f,c
  7529  003AA2                     l3147:
  7530  003AA2  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  7531  003AA4  EF56  F01D         	goto	u3581
  7532  003AA8  EF58  F01D         	goto	u3580
  7533  003AAC                     u3581:
  7534  003AAC  EF4D  F01D         	goto	l3145
  7535  003AB0                     u3580:
  7536  003AB0                     l3149:
  7537  003AB0  90D8               	bcf	status,0,c
  7538  003AB2  3607               	rlcf	___awdiv@quotient^0,f,c
  7539  003AB4  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  7540  003AB6  5003               	movf	___awdiv@divisor^0,w,c
  7541  003AB8  5C01               	subwf	___awdiv@dividend^0,w,c
  7542  003ABA  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7543  003ABC  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  7544  003ABE  A0D8               	btfss	status,0,c
  7545  003AC0  EF64  F01D         	goto	u3591
  7546  003AC4  EF66  F01D         	goto	u3590
  7547  003AC8                     u3591:
  7548  003AC8  EF6B  F01D         	goto	l3157
  7549  003ACC                     u3590:
  7550  003ACC  5003               	movf	___awdiv@divisor^0,w,c
  7551  003ACE  5E01               	subwf	___awdiv@dividend^0,f,c
  7552  003AD0  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7553  003AD2  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  7554  003AD4  8007               	bsf	___awdiv@quotient^0,0,c
  7555  003AD6                     l3157:
  7556  003AD6  90D8               	bcf	status,0,c
  7557  003AD8  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  7558  003ADA  3203               	rrcf	___awdiv@divisor^0,f,c
  7559  003ADC  2E05               	decfsz	___awdiv@counter^0,f,c
  7560  003ADE  EF58  F01D         	goto	l3149
  7561  003AE2                     l3161:
  7562  003AE2  5006               	movf	___awdiv@sign^0,w,c
  7563  003AE4  B4D8               	btfsc	status,2,c
  7564  003AE6  EF77  F01D         	goto	u3601
  7565  003AEA  EF79  F01D         	goto	u3600
  7566  003AEE                     u3601:
  7567  003AEE  EF7D  F01D         	goto	l3165
  7568  003AF2                     u3600:
  7569  003AF2  6C07               	negf	___awdiv@quotient^0,c
  7570  003AF4  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  7571  003AF6  B0D8               	btfsc	status,0,c
  7572  003AF8  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  7573  003AFA                     l3165:
  7574  003AFA  C007  F001         	movff	___awdiv@quotient,?___awdiv
  7575  003AFE  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  7576  003B02  0012               	return		;funcret
  7577  003B04                     __end_of___awdiv:
  7578                           	callstack 0
  7579                           
  7580 ;; *************** function _atoi *****************
  7581 ;; Defined at:
  7582 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\atoi.c"
  7583 ;; Parameters:    Size  Location     Type
  7584 ;;  s               2    7[COMRAM] PTR const unsigned char 
  7585 ;;		 -> STR_1(5), 
  7586 ;; Auto vars:     Size  Location     Type
  7587 ;;  n               2   15[COMRAM] int 
  7588 ;;  neg             2   13[COMRAM] int 
  7589 ;; Return value:  Size  Location     Type
  7590 ;;                  2    7[COMRAM] int 
  7591 ;; Registers used:
  7592 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7593 ;; Tracked objects:
  7594 ;;		On entry : 0/0
  7595 ;;		On exit  : 0/0
  7596 ;;		Unchanged: 0/0
  7597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7598 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7599 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7600 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7601 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7602 ;;Total ram usage:       10 bytes
  7603 ;; Hardware stack levels used: 1
  7604 ;; Hardware stack levels required when called: 1
  7605 ;; This function calls:
  7606 ;;		___wmul
  7607 ;;		_isdigit
  7608 ;;		_isspace
  7609 ;; This function is called by:
  7610 ;;		_vfpfcnvrt
  7611 ;; This function uses a non-reentrant model
  7612 ;;
  7613                           
  7614                           	psect	text29
  7615  003324                     __ptext29:
  7616                           	callstack 0
  7617  003324                     _atoi:
  7618                           	callstack 25
  7619  003324  0E00               	movlw	0
  7620  003326  6E11               	movwf	(atoi@n+1)^0,c
  7621  003328  0E00               	movlw	0
  7622  00332A  6E10               	movwf	atoi@n^0,c
  7623  00332C  0E00               	movlw	0
  7624  00332E  6E0F               	movwf	(atoi@neg+1)^0,c
  7625  003330  0E00               	movlw	0
  7626  003332  6E0E               	movwf	atoi@neg^0,c
  7627  003334  EF9E  F019         	goto	l3709
  7628  003338                     l3705:
  7629  003338  4A08               	infsnz	atoi@s^0,f,c
  7630  00333A  2A09               	incf	(atoi@s+1)^0,f,c
  7631  00333C                     l3709:
  7632  00333C  C008  FFF6         	movff	atoi@s,tblptrl
  7633  003340  C009  FFF7         	movff	atoi@s+1,tblptrh
  7634  003344                     	if	0	;tblptru may be non-zero
  7635  003344                     	endif
  7636  003344                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7637  003344  0E00               	movlw	low (__mediumconst shr (0+16))
  7638  003346  6EF8               	movwf	tblptru,c
  7639  003348                     	endif
  7640  003348  0008               	tblrd		*
  7641  00334A  50F5               	movf	tablat,w,c
  7642  00334C  0A20               	xorlw	32
  7643  00334E  B4D8               	btfsc	status,2,c
  7644  003350  EFAC  F019         	goto	u4591
  7645  003354  EFAE  F019         	goto	u4590
  7646  003358                     u4591:
  7647  003358  EF9C  F019         	goto	l3705
  7648  00335C                     u4590:
  7649  00335C  0EF7               	movlw	247
  7650  00335E  6E0A               	movwf	??_atoi^0,c
  7651  003360  0EFF               	movlw	255
  7652  003362  6E0B               	movwf	(??_atoi+1)^0,c
  7653  003364  C008  FFF6         	movff	atoi@s,tblptrl
  7654  003368  C009  FFF7         	movff	atoi@s+1,tblptrh
  7655  00336C                     	if	0	;tblptru may be non-zero
  7656  00336C                     	endif
  7657  00336C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7658  00336C  0E00               	movlw	low (__mediumconst shr (0+16))
  7659  00336E  6EF8               	movwf	tblptru,c
  7660  003370                     	endif
  7661  003370  0008               	tblrd		*
  7662  003372  50F5               	movf	tablat,w,c
  7663  003374  6E0C               	movwf	(??_atoi+2)^0,c
  7664  003376  6A0D               	clrf	(??_atoi+3)^0,c
  7665  003378  500A               	movf	??_atoi^0,w,c
  7666  00337A  260C               	addwf	(??_atoi+2)^0,f,c
  7667  00337C  500B               	movf	(??_atoi+1)^0,w,c
  7668  00337E  220D               	addwfc	(??_atoi+3)^0,f,c
  7669  003380  500D               	movf	(??_atoi+3)^0,w,c
  7670  003382  E109               	bnz	u4600
  7671  003384  0E05               	movlw	5
  7672  003386  5C0C               	subwf	(??_atoi+2)^0,w,c
  7673  003388  A0D8               	btfss	status,0,c
  7674  00338A  EFC9  F019         	goto	u4601
  7675  00338E  EFCB  F019         	goto	u4600
  7676  003392                     u4601:
  7677  003392  EF9C  F019         	goto	l3705
  7678  003396                     u4600:
  7679  003396  EFD5  F019         	goto	l3717
  7680  00339A                     l3713:
  7681  00339A  0E00               	movlw	0
  7682  00339C  6E0F               	movwf	(atoi@neg+1)^0,c
  7683  00339E  0E01               	movlw	1
  7684  0033A0  6E0E               	movwf	atoi@neg^0,c
  7685  0033A2                     l3715:
  7686  0033A2  4A08               	infsnz	atoi@s^0,f,c
  7687  0033A4  2A09               	incf	(atoi@s+1)^0,f,c
  7688  0033A6  EF0E  F01A         	goto	l3725
  7689  0033AA                     l3717:
  7690  0033AA  C008  FFF6         	movff	atoi@s,tblptrl
  7691  0033AE  C009  FFF7         	movff	atoi@s+1,tblptrh
  7692  0033B2                     	if	0	;tblptru may be non-zero
  7693  0033B2                     	endif
  7694  0033B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7695  0033B2  0E00               	movlw	low (__mediumconst shr (0+16))
  7696  0033B4  6EF8               	movwf	tblptru,c
  7697  0033B6                     	endif
  7698  0033B6  0008               	tblrd		*
  7699  0033B8  50F5               	movf	tablat,w,c
  7700  0033BA  6E0A               	movwf	??_atoi^0,c
  7701  0033BC  6A0B               	clrf	(??_atoi+1)^0,c
  7702                           
  7703                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7704                           ; Switch size 1, requested type "simple"
  7705                           ; Number of cases is 1, Range of values is 0 to 0
  7706                           ; switch strategies available:
  7707                           ; Name         Instructions Cycles
  7708                           ; simple_byte            4     3 (average)
  7709                           ;	Chosen strategy is simple_byte
  7710  0033BE  500B               	movf	(??_atoi+1)^0,w,c
  7711  0033C0  0A00               	xorlw	0	; case 0
  7712  0033C2  B4D8               	btfsc	status,2,c
  7713  0033C4  EFE6  F019         	goto	l4103
  7714  0033C8  EF0E  F01A         	goto	l3725
  7715  0033CC                     l4103:
  7716                           
  7717                           ; Switch size 1, requested type "simple"
  7718                           ; Number of cases is 2, Range of values is 43 to 45
  7719                           ; switch strategies available:
  7720                           ; Name         Instructions Cycles
  7721                           ; simple_byte            7     4 (average)
  7722                           ;	Chosen strategy is simple_byte
  7723  0033CC  500A               	movf	??_atoi^0,w,c
  7724  0033CE  0A2B               	xorlw	43	; case 43
  7725  0033D0  B4D8               	btfsc	status,2,c
  7726  0033D2  EFD1  F019         	goto	l3715
  7727  0033D6  0A06               	xorlw	6	; case 45
  7728  0033D8  B4D8               	btfsc	status,2,c
  7729  0033DA  EFCD  F019         	goto	l3713
  7730  0033DE  EF0E  F01A         	goto	l3725
  7731  0033E2                     l3719:
  7732  0033E2  C010  F001         	movff	atoi@n,___wmul@multiplier
  7733  0033E6  C011  F002         	movff	atoi@n+1,___wmul@multiplier+1
  7734  0033EA  0E00               	movlw	0
  7735  0033EC  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  7736  0033EE  0E0A               	movlw	10
  7737  0033F0  6E03               	movwf	___wmul@multiplicand^0,c
  7738  0033F2  ECF3  F020         	call	___wmul	;wreg free
  7739  0033F6  C008  FFF6         	movff	atoi@s,tblptrl
  7740  0033FA  C009  FFF7         	movff	atoi@s+1,tblptrh
  7741  0033FE                     	if	0	;tblptru may be non-zero
  7742  0033FE                     	endif
  7743  0033FE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7744  0033FE  0E00               	movlw	low (__mediumconst shr (0+16))
  7745  003400  6EF8               	movwf	tblptru,c
  7746  003402                     	endif
  7747  003402  0008               	tblrd		*
  7748  003404  50F5               	movf	tablat,w,c
  7749  003406  5E01               	subwf	?___wmul^0,f,c
  7750  003408  0E00               	movlw	0
  7751  00340A  5A02               	subwfb	(?___wmul+1)^0,f,c
  7752  00340C  0E30               	movlw	48
  7753  00340E  2401               	addwf	?___wmul^0,w,c
  7754  003410  6E10               	movwf	atoi@n^0,c
  7755  003412  0E00               	movlw	0
  7756  003414  2002               	addwfc	(?___wmul+1)^0,w,c
  7757  003416  6E11               	movwf	(atoi@n+1)^0,c
  7758  003418  EFD1  F019         	goto	l3715
  7759  00341C                     l3725:
  7760  00341C  0ED0               	movlw	208
  7761  00341E  6E0A               	movwf	??_atoi^0,c
  7762  003420  0EFF               	movlw	255
  7763  003422  6E0B               	movwf	(??_atoi+1)^0,c
  7764  003424  C008  FFF6         	movff	atoi@s,tblptrl
  7765  003428  C009  FFF7         	movff	atoi@s+1,tblptrh
  7766  00342C                     	if	0	;tblptru may be non-zero
  7767  00342C                     	endif
  7768  00342C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7769  00342C  0E00               	movlw	low (__mediumconst shr (0+16))
  7770  00342E  6EF8               	movwf	tblptru,c
  7771  003430                     	endif
  7772  003430  0008               	tblrd		*
  7773  003432  50F5               	movf	tablat,w,c
  7774  003434  6E0C               	movwf	(??_atoi+2)^0,c
  7775  003436  6A0D               	clrf	(??_atoi+3)^0,c
  7776  003438  500A               	movf	??_atoi^0,w,c
  7777  00343A  260C               	addwf	(??_atoi+2)^0,f,c
  7778  00343C  500B               	movf	(??_atoi+1)^0,w,c
  7779  00343E  220D               	addwfc	(??_atoi+3)^0,f,c
  7780  003440  500D               	movf	(??_atoi+3)^0,w,c
  7781  003442  E109               	bnz	u4610
  7782  003444  0E0A               	movlw	10
  7783  003446  5C0C               	subwf	(??_atoi+2)^0,w,c
  7784  003448  A0D8               	btfss	status,0,c
  7785  00344A  EF29  F01A         	goto	u4611
  7786  00344E  EF2B  F01A         	goto	u4610
  7787  003452                     u4611:
  7788  003452  EFF1  F019         	goto	l3719
  7789  003456                     u4610:
  7790  003456  500E               	movf	atoi@neg^0,w,c
  7791  003458  100F               	iorwf	(atoi@neg+1)^0,w,c
  7792  00345A  A4D8               	btfss	status,2,c
  7793  00345C  EF32  F01A         	goto	u4621
  7794  003460  EF34  F01A         	goto	u4620
  7795  003464                     u4621:
  7796  003464  EF42  F01A         	goto	l1018
  7797  003468                     u4620:
  7798  003468  C010  F00A         	movff	atoi@n,??_atoi
  7799  00346C  C011  F00B         	movff	atoi@n+1,??_atoi+1
  7800  003470  1E0A               	comf	??_atoi^0,f,c
  7801  003472  1E0B               	comf	(??_atoi+1)^0,f,c
  7802  003474  4A0A               	infsnz	??_atoi^0,f,c
  7803  003476  2A0B               	incf	(??_atoi+1)^0,f,c
  7804  003478  C00A  F008         	movff	??_atoi,?_atoi
  7805  00347C  C00B  F009         	movff	??_atoi+1,?_atoi+1
  7806  003480  EF46  F01A         	goto	l1021
  7807  003484                     l1018:
  7808  003484  C010  F008         	movff	atoi@n,?_atoi
  7809  003488  C011  F009         	movff	atoi@n+1,?_atoi+1
  7810  00348C                     l1021:
  7811  00348C  0012               	return		;funcret
  7812  00348E                     __end_of_atoi:
  7813                           	callstack 0
  7814                           
  7815 ;; *************** function _isspace *****************
  7816 ;; Defined at:
  7817 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isspace.c"
  7818 ;; Parameters:    Size  Location     Type
  7819 ;;  c               2    0[COMRAM] int 
  7820 ;; Auto vars:     Size  Location     Type
  7821 ;;		None
  7822 ;; Return value:  Size  Location     Type
  7823 ;;                  2    0[COMRAM] int 
  7824 ;; Registers used:
  7825 ;;		wreg, status,2, status,0
  7826 ;; Tracked objects:
  7827 ;;		On entry : 0/0
  7828 ;;		On exit  : 0/0
  7829 ;;		Unchanged: 0/0
  7830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7831 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7832 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7833 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7834 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7835 ;;Total ram usage:        7 bytes
  7836 ;; Hardware stack levels used: 1
  7837 ;; This function calls:
  7838 ;;		Nothing
  7839 ;; This function is called by:
  7840 ;;		_atoi
  7841 ;; This function uses a non-reentrant model
  7842 ;;
  7843                           
  7844                           	psect	text30
  7845  003F48                     __ptext30:
  7846                           	callstack 0
  7847  003F48                     _isspace:
  7848                           	callstack 25
  7849  003F48  0E01               	movlw	1
  7850  003F4A  6E07               	movwf	_isspace$1519^0,c
  7851  003F4C  0E20               	movlw	32
  7852  003F4E  1801               	xorwf	isspace@c^0,w,c
  7853  003F50  1002               	iorwf	(isspace@c+1)^0,w,c
  7854  003F52  B4D8               	btfsc	status,2,c
  7855  003F54  EFAE  F01F         	goto	u4091
  7856  003F58  EFB0  F01F         	goto	u4090
  7857  003F5C                     u4091:
  7858  003F5C  EFC9  F01F         	goto	l3393
  7859  003F60                     u4090:
  7860  003F60  0EF7               	movlw	247
  7861  003F62  6E03               	movwf	??_isspace^0,c
  7862  003F64  0EFF               	movlw	255
  7863  003F66  6E04               	movwf	(??_isspace+1)^0,c
  7864  003F68  C001  F005         	movff	isspace@c,??_isspace+2
  7865  003F6C  C002  F006         	movff	isspace@c+1,??_isspace+3
  7866  003F70  5003               	movf	??_isspace^0,w,c
  7867  003F72  2605               	addwf	(??_isspace+2)^0,f,c
  7868  003F74  5004               	movf	(??_isspace+1)^0,w,c
  7869  003F76  2206               	addwfc	(??_isspace+3)^0,f,c
  7870  003F78  5006               	movf	(??_isspace+3)^0,w,c
  7871  003F7A  E109               	bnz	u4100
  7872  003F7C  0E05               	movlw	5
  7873  003F7E  5C05               	subwf	(??_isspace+2)^0,w,c
  7874  003F80  A0D8               	btfss	status,0,c
  7875  003F82  EFC5  F01F         	goto	u4101
  7876  003F86  EFC7  F01F         	goto	u4100
  7877  003F8A                     u4101:
  7878  003F8A  EFC9  F01F         	goto	l3393
  7879  003F8E                     u4100:
  7880  003F8E  0E00               	movlw	0
  7881  003F90  6E07               	movwf	_isspace$1519^0,c
  7882  003F92                     l3393:
  7883  003F92  C007  F001         	movff	_isspace$1519,?_isspace
  7884  003F96  6A02               	clrf	(?_isspace+1)^0,c
  7885  003F98  0012               	return		;funcret
  7886  003F9A                     __end_of_isspace:
  7887                           	callstack 0
  7888                           
  7889 ;; *************** function _isdigit *****************
  7890 ;; Defined at:
  7891 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isdigit.c"
  7892 ;; Parameters:    Size  Location     Type
  7893 ;;  c               2    0[COMRAM] int 
  7894 ;; Auto vars:     Size  Location     Type
  7895 ;;		None
  7896 ;; Return value:  Size  Location     Type
  7897 ;;                  2    0[COMRAM] int 
  7898 ;; Registers used:
  7899 ;;		wreg, status,2, status,0
  7900 ;; Tracked objects:
  7901 ;;		On entry : 0/0
  7902 ;;		On exit  : 0/0
  7903 ;;		Unchanged: 0/0
  7904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7905 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7907 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7908 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7909 ;;Total ram usage:        6 bytes
  7910 ;; Hardware stack levels used: 1
  7911 ;; This function calls:
  7912 ;;		Nothing
  7913 ;; This function is called by:
  7914 ;;		_vfpfcnvrt
  7915 ;;		_atoi
  7916 ;; This function uses a non-reentrant model
  7917 ;;
  7918                           
  7919                           	psect	text31
  7920  00412A                     __ptext31:
  7921                           	callstack 0
  7922  00412A                     _isdigit:
  7923                           	callstack 26
  7924  00412A  0ED0               	movlw	208
  7925  00412C  6E03               	movwf	??_isdigit^0,c
  7926  00412E  0EFF               	movlw	255
  7927  004130  6E04               	movwf	(??_isdigit+1)^0,c
  7928  004132  C001  F005         	movff	isdigit@c,??_isdigit+2
  7929  004136  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  7930  00413A  5003               	movf	??_isdigit^0,w,c
  7931  00413C  2605               	addwf	(??_isdigit+2)^0,f,c
  7932  00413E  5004               	movf	(??_isdigit+1)^0,w,c
  7933  004140  2206               	addwfc	(??_isdigit+3)^0,f,c
  7934  004142  5006               	movf	(??_isdigit+3)^0,w,c
  7935  004144  E10A               	bnz	u4070
  7936  004146  0E0A               	movlw	10
  7937  004148  5C05               	subwf	(??_isdigit+2)^0,w,c
  7938  00414A  A0D8               	btfss	status,0,c
  7939  00414C  EFAA  F020         	goto	u4071
  7940  004150  EFAD  F020         	goto	u4070
  7941  004154                     u4071:
  7942  004154  0E01               	movlw	1
  7943  004156  EFAE  F020         	goto	u4080
  7944  00415A                     u4070:
  7945  00415A  0E00               	movlw	0
  7946  00415C                     u4080:
  7947  00415C  6E01               	movwf	?_isdigit^0,c
  7948  00415E  6A02               	clrf	(?_isdigit+1)^0,c
  7949  004160  0012               	return		;funcret
  7950  004162                     __end_of_isdigit:
  7951                           	callstack 0
  7952                           
  7953 ;; *************** function ___wmul *****************
  7954 ;; Defined at:
  7955 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
  7956 ;; Parameters:    Size  Location     Type
  7957 ;;  multiplier      2    0[COMRAM] unsigned int 
  7958 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7959 ;; Auto vars:     Size  Location     Type
  7960 ;;  product         2    4[COMRAM] unsigned int 
  7961 ;; Return value:  Size  Location     Type
  7962 ;;                  2    0[COMRAM] unsigned int 
  7963 ;; Registers used:
  7964 ;;		wreg, status,2, status,0, prodl, prodh
  7965 ;; Tracked objects:
  7966 ;;		On entry : 0/0
  7967 ;;		On exit  : 0/0
  7968 ;;		Unchanged: 0/0
  7969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7970 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7971 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7973 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7974 ;;Total ram usage:        6 bytes
  7975 ;; Hardware stack levels used: 1
  7976 ;; This function calls:
  7977 ;;		Nothing
  7978 ;; This function is called by:
  7979 ;;		_atoi
  7980 ;; This function uses a non-reentrant model
  7981 ;;
  7982                           
  7983                           	psect	text32
  7984  0041E6                     __ptext32:
  7985                           	callstack 0
  7986  0041E6                     ___wmul:
  7987                           	callstack 25
  7988  0041E6  5001               	movf	___wmul@multiplier^0,w,c
  7989  0041E8  0203               	mulwf	___wmul@multiplicand^0,c
  7990  0041EA  CFF3 F005          	movff	prodl,___wmul@product
  7991  0041EE  CFF4 F006          	movff	prodh,___wmul@product+1
  7992  0041F2  5001               	movf	___wmul@multiplier^0,w,c
  7993  0041F4  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  7994  0041F6  50F3               	movf	243,w,c
  7995  0041F8  2606               	addwf	(___wmul@product+1)^0,f,c
  7996  0041FA  5002               	movf	(___wmul@multiplier+1)^0,w,c
  7997  0041FC  0203               	mulwf	___wmul@multiplicand^0,c
  7998  0041FE  50F3               	movf	243,w,c
  7999  004200  2606               	addwf	(___wmul@product+1)^0,f,c
  8000  004202  C005  F001         	movff	___wmul@product,?___wmul
  8001  004206  C006  F002         	movff	___wmul@product+1,?___wmul+1
  8002  00420A  0012               	return		;funcret
  8003  00420C                     __end_of___wmul:
  8004                           	callstack 0
  8005                           
  8006 ;; *************** function _LCD_DISPLAY *****************
  8007 ;; Defined at:
  8008 ;;		line 168 in file "./LCD.h"
  8009 ;; Parameters:    Size  Location     Type
  8010 ;;  string          2   22[COMRAM] PTR const unsigned char 
  8011 ;;		 -> STR_5(3), STR_4(11), STR_3(12), STR_2(21), 
  8012 ;;		 -> LCD_DISPLAY_DIGIT@s(20), 
  8013 ;; Auto vars:     Size  Location     Type
  8014 ;;  x               2   28[COMRAM] int 
  8015 ;;  length          2   26[COMRAM] unsigned int 
  8016 ;; Return value:  Size  Location     Type
  8017 ;;                  1    wreg      void 
  8018 ;; Registers used:
  8019 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8020 ;; Tracked objects:
  8021 ;;		On entry : 0/0
  8022 ;;		On exit  : 0/0
  8023 ;;		Unchanged: 0/0
  8024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8025 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8026 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8027 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8028 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8029 ;;Total ram usage:        8 bytes
  8030 ;; Hardware stack levels used: 1
  8031 ;; Hardware stack levels required when called: 1
  8032 ;; This function calls:
  8033 ;;		_LCD_DATA
  8034 ;;		_strlen
  8035 ;; This function is called by:
  8036 ;;		_LCD_DISPLAY_DIGIT
  8037 ;;		_main
  8038 ;; This function uses a non-reentrant model
  8039 ;;
  8040                           
  8041                           	psect	text33
  8042  003DBC                     __ptext33:
  8043                           	callstack 0
  8044  003DBC                     _LCD_DISPLAY:
  8045                           	callstack 28
  8046  003DBC                     
  8047                           ;./LCD.h: 169:  unsigned int length = strlen(string);
  8048  003DBC  C017  F001         	movff	LCD_DISPLAY@string,strlen@s
  8049  003DC0  C018  F002         	movff	LCD_DISPLAY@string+1,strlen@s+1
  8050  003DC4  ECCD  F01F         	call	_strlen	;wreg free
  8051  003DC8  C001  F01B         	movff	?_strlen,LCD_DISPLAY@length
  8052  003DCC  C002  F01C         	movff	?_strlen+1,LCD_DISPLAY@length+1
  8053  003DD0                     
  8054                           ;./LCD.h: 170:  signed int x;;./LCD.h: 171:  for(x = 0x00 ; x < length ; x-=-0x01){
  8055  003DD0  0E00               	movlw	0
  8056  003DD2  6E1E               	movwf	(LCD_DISPLAY@x+1)^0,c
  8057  003DD4  0E00               	movlw	0
  8058  003DD6  6E1D               	movwf	LCD_DISPLAY@x^0,c
  8059  003DD8  EF0D  F01F         	goto	l3937
  8060  003DDC                     l3933:
  8061                           
  8062                           ;./LCD.h: 172:   LCD_DATA(string[x],0x04);
  8063  003DDC  0E00               	movlw	0
  8064  003DDE  6E02               	movwf	(LCD_DATA@mode+1)^0,c
  8065  003DE0  0E04               	movlw	4
  8066  003DE2  6E01               	movwf	LCD_DATA@mode^0,c
  8067  003DE4  501D               	movf	LCD_DISPLAY@x^0,w,c
  8068  003DE6  2417               	addwf	LCD_DISPLAY@string^0,w,c
  8069  003DE8  6E19               	movwf	??_LCD_DISPLAY^0,c
  8070  003DEA  501E               	movf	(LCD_DISPLAY@x+1)^0,w,c
  8071  003DEC  2018               	addwfc	(LCD_DISPLAY@string+1)^0,w,c
  8072  003DEE  6E1A               	movwf	(??_LCD_DISPLAY+1)^0,c
  8073  003DF0  C019  FFF6         	movff	??_LCD_DISPLAY,tblptrl
  8074  003DF4  C01A  FFF7         	movff	??_LCD_DISPLAY+1,tblptrh
  8075  003DF8  0E00               	movlw	low (__smallconst shr (0+16))
  8076  003DFA  6EF8               	movwf	tblptru,c
  8077  003DFC  0E0E               	movlw	(high __ramtop+-1)
  8078  003DFE  64F7               	cpfsgt	tblptrh,c
  8079  003E00  D003               	bra	u5087
  8080  003E02  0008               	tblrd		*
  8081  003E04  50F5               	movf	tablat,w,c
  8082  003E06  D005               	bra	u5080
  8083  003E08                     u5087:
  8084  003E08  CFF6 FFE1          	movff	tblptrl,fsr1l
  8085  003E0C  CFF7 FFE2          	movff	tblptrh,fsr1h
  8086  003E10  50E7               	movf	indf1,w,c
  8087  003E12                     u5080:
  8088  003E12  EC02  F018         	call	_LCD_DATA
  8089  003E16                     
  8090                           ;./LCD.h: 173:  }
  8091  003E16  4A1D               	infsnz	LCD_DISPLAY@x^0,f,c
  8092  003E18  2A1E               	incf	(LCD_DISPLAY@x+1)^0,f,c
  8093  003E1A                     l3937:
  8094  003E1A  501B               	movf	LCD_DISPLAY@length^0,w,c
  8095  003E1C  5C1D               	subwf	LCD_DISPLAY@x^0,w,c
  8096  003E1E  501C               	movf	(LCD_DISPLAY@length+1)^0,w,c
  8097  003E20  581E               	subwfb	(LCD_DISPLAY@x+1)^0,w,c
  8098  003E22  A0D8               	btfss	status,0,c
  8099  003E24  EF16  F01F         	goto	u5091
  8100  003E28  EF18  F01F         	goto	u5090
  8101  003E2C                     u5091:
  8102  003E2C  EFEE  F01E         	goto	l3933
  8103  003E30                     u5090:
  8104  003E30  0012               	return		;funcret
  8105  003E32                     __end_of_LCD_DISPLAY:
  8106                           	callstack 0
  8107                           
  8108 ;; *************** function _strlen *****************
  8109 ;; Defined at:
  8110 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  8111 ;; Parameters:    Size  Location     Type
  8112 ;;  s               2    0[COMRAM] PTR const unsigned char 
  8113 ;;		 -> dbuf(80), STR_5(3), STR_4(11), STR_3(12), 
  8114 ;;		 -> STR_2(21), LCD_DISPLAY_DIGIT@s(20), 
  8115 ;; Auto vars:     Size  Location     Type
  8116 ;;  a               2    2[COMRAM] PTR const unsigned char 
  8117 ;;		 -> dbuf(80), STR_5(3), STR_4(11), STR_3(12), 
  8118 ;;		 -> STR_2(21), LCD_DISPLAY_DIGIT@s(20), 
  8119 ;; Return value:  Size  Location     Type
  8120 ;;                  2    0[COMRAM] unsigned int 
  8121 ;; Registers used:
  8122 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  8123 ;; Tracked objects:
  8124 ;;		On entry : 0/0
  8125 ;;		On exit  : 0/0
  8126 ;;		Unchanged: 0/0
  8127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8128 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8129 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8131 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8132 ;;Total ram usage:        4 bytes
  8133 ;; Hardware stack levels used: 1
  8134 ;; This function calls:
  8135 ;;		Nothing
  8136 ;; This function is called by:
  8137 ;;		_LCD_DISPLAY
  8138 ;;		_pad
  8139 ;; This function uses a non-reentrant model
  8140 ;;
  8141                           
  8142                           	psect	text34
  8143  003F9A                     __ptext34:
  8144                           	callstack 0
  8145  003F9A                     _strlen:
  8146                           	callstack 24
  8147  003F9A  C001  F003         	movff	strlen@s,strlen@a
  8148  003F9E  C002  F004         	movff	strlen@s+1,strlen@a+1
  8149  003FA2  EFD5  F01F         	goto	l2625
  8150  003FA6                     l2623:
  8151  003FA6  4A01               	infsnz	strlen@s^0,f,c
  8152  003FA8  2A02               	incf	(strlen@s+1)^0,f,c
  8153  003FAA                     l2625:
  8154  003FAA  C001  FFF6         	movff	strlen@s,tblptrl
  8155  003FAE  C002  FFF7         	movff	strlen@s+1,tblptrh
  8156  003FB2  0E00               	movlw	low (__smallconst shr (0+16))
  8157  003FB4  6EF8               	movwf	tblptru,c
  8158  003FB6  0E0E               	movlw	(high __ramtop+-1)
  8159  003FB8  64F7               	cpfsgt	tblptrh,c
  8160  003FBA  D003               	bra	u2697
  8161  003FBC  0008               	tblrd		*
  8162  003FBE  50F5               	movf	tablat,w,c
  8163  003FC0  D005               	bra	u2690
  8164  003FC2                     u2697:
  8165  003FC2  CFF6 FFE1          	movff	tblptrl,fsr1l
  8166  003FC6  CFF7 FFE2          	movff	tblptrh,fsr1h
  8167  003FCA  50E7               	movf	indf1,w,c
  8168  003FCC                     u2690:
  8169  003FCC  0900               	iorlw	0
  8170  003FCE  A4D8               	btfss	status,2,c
  8171  003FD0  EFEC  F01F         	goto	u2701
  8172  003FD4  EFEE  F01F         	goto	u2700
  8173  003FD8                     u2701:
  8174  003FD8  EFD3  F01F         	goto	l2623
  8175  003FDC                     u2700:
  8176  003FDC  5003               	movf	strlen@a^0,w,c
  8177  003FDE  5C01               	subwf	strlen@s^0,w,c
  8178  003FE0  6E01               	movwf	?_strlen^0,c
  8179  003FE2  5004               	movf	(strlen@a+1)^0,w,c
  8180  003FE4  5802               	subwfb	(strlen@s+1)^0,w,c
  8181  003FE6  6E02               	movwf	(?_strlen+1)^0,c
  8182  003FE8  0012               	return		;funcret
  8183  003FEA                     __end_of_strlen:
  8184                           	callstack 0
  8185                           
  8186 ;; *************** function _LCD_DATA *****************
  8187 ;; Defined at:
  8188 ;;		line 70 in file "./LCD.h"
  8189 ;; Parameters:    Size  Location     Type
  8190 ;;  data            1    wreg     unsigned char 
  8191 ;;  mode            2    0[COMRAM] int 
  8192 ;; Auto vars:     Size  Location     Type
  8193 ;;  data            1    8[COMRAM] unsigned char 
  8194 ;;  x               2   20[COMRAM] int 
  8195 ;;  x               2   18[COMRAM] int 
  8196 ;;  _4bit_          8    9[COMRAM] unsigned int [4]
  8197 ;;  _data           1   17[COMRAM] unsigned char 
  8198 ;; Return value:  Size  Location     Type
  8199 ;;                  1    wreg      void 
  8200 ;; Registers used:
  8201 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8202 ;; Tracked objects:
  8203 ;;		On entry : 0/0
  8204 ;;		On exit  : 0/0
  8205 ;;		Unchanged: 0/0
  8206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8207 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8208 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8209 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8210 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8211 ;;Total ram usage:       22 bytes
  8212 ;; Hardware stack levels used: 1
  8213 ;; This function calls:
  8214 ;;		Nothing
  8215 ;; This function is called by:
  8216 ;;		_LCD_DISPLAY
  8217 ;; This function uses a non-reentrant model
  8218 ;;
  8219                           
  8220                           	psect	text35
  8221  003004                     __ptext35:
  8222                           	callstack 0
  8223  003004                     _LCD_DATA:
  8224                           	callstack 28
  8225                           
  8226                           ;incstack = 0
  8227                           ;LCD_DATA@data stored from wreg
  8228  003004  6E09               	movwf	LCD_DATA@data^0,c
  8229  003006                     
  8230                           ;./LCD.h: 71:  unsigned char _data = data;
  8231  003006  C009  F012         	movff	LCD_DATA@data,LCD_DATA@_data
  8232  00300A                     
  8233                           ;./LCD.h: 72:  unsigned int _4bit_[0x04];;./LCD.h: 73:  if(mode == 0x04){
  8234  00300A  0E04               	movlw	4
  8235  00300C  1801               	xorwf	LCD_DATA@mode^0,w,c
  8236  00300E  1002               	iorwf	(LCD_DATA@mode+1)^0,w,c
  8237  003010  A4D8               	btfss	status,2,c
  8238  003012  EF0D  F018         	goto	u4781
  8239  003016  EF0F  F018         	goto	u4780
  8240  00301A                     u4781:
  8241  00301A  EFCE  F018         	goto	l75
  8242  00301E                     u4780:
  8243  00301E                     
  8244                           ;./LCD.h: 74:   _data = _data>>0x04;
  8245  00301E  3812               	swapf	LCD_DATA@_data^0,w,c
  8246  003020  0B0F               	andlw	15
  8247  003022  6E12               	movwf	LCD_DATA@_data^0,c
  8248  003024                     
  8249                           ;./LCD.h: 75:   for(int x =0x00; x < 0x04; x-=-0x01){
  8250  003024  0E00               	movlw	0
  8251  003026  6E14               	movwf	(LCD_DATA@x+1)^0,c
  8252  003028  0E00               	movlw	0
  8253  00302A  6E13               	movwf	LCD_DATA@x^0,c
  8254  00302C                     l3855:
  8255                           
  8256                           ;./LCD.h: 76:    _4bit_[x] = (_data & (0x01<<x))>>x;
  8257  00302C  C013  F003         	movff	LCD_DATA@x,??_LCD_DATA
  8258  003030  C013  F004         	movff	LCD_DATA@x,??_LCD_DATA+1
  8259  003034  0E01               	movlw	1
  8260  003036  6E05               	movwf	(??_LCD_DATA+2)^0,c
  8261  003038  2A04               	incf	(??_LCD_DATA+1)^0,f,c
  8262  00303A  EF21  F018         	goto	u4794
  8263  00303E                     u4795:
  8264  00303E  90D8               	bcf	status,0,c
  8265  003040  3605               	rlcf	(??_LCD_DATA+2)^0,f,c
  8266  003042                     u4794:
  8267  003042  2E04               	decfsz	(??_LCD_DATA+1)^0,f,c
  8268  003044  EF1F  F018         	goto	u4795
  8269  003048  5005               	movf	(??_LCD_DATA+2)^0,w,c
  8270  00304A  1412               	andwf	LCD_DATA@_data^0,w,c
  8271  00304C  6E06               	movwf	(??_LCD_DATA+3)^0,c
  8272  00304E  2A03               	incf	??_LCD_DATA^0,f,c
  8273  003050  EF2C  F018         	goto	u4804
  8274  003054                     u4805:
  8275  003054  90D8               	bcf	status,0,c
  8276  003056  3206               	rrcf	(??_LCD_DATA+3)^0,f,c
  8277  003058                     u4804:
  8278  003058  2E03               	decfsz	??_LCD_DATA^0,f,c
  8279  00305A  EF2A  F018         	goto	u4805
  8280  00305E  5006               	movf	(??_LCD_DATA+3)^0,w,c
  8281  003060  6E07               	movwf	(??_LCD_DATA+4)^0,c
  8282  003062  6A08               	clrf	(??_LCD_DATA+5)^0,c
  8283  003064  90D8               	bcf	status,0,c
  8284  003066  3413               	rlcf	LCD_DATA@x^0,w,c
  8285  003068  6ED9               	movwf	fsr2l,c
  8286  00306A  3414               	rlcf	(LCD_DATA@x+1)^0,w,c
  8287  00306C  6EDA               	movwf	fsr2h,c
  8288  00306E  0E0A               	movlw	low LCD_DATA@_4bit_
  8289  003070  26D9               	addwf	fsr2l,f,c
  8290  003072  0E00               	movlw	high LCD_DATA@_4bit_
  8291  003074  22DA               	addwfc	fsr2h,f,c
  8292  003076  C007  FFDE         	movff	??_LCD_DATA+4,postinc2
  8293  00307A  C008  FFDD         	movff	??_LCD_DATA+5,postdec2
  8294  00307E                     
  8295                           ;./LCD.h: 77:   }
  8296  00307E  4A13               	infsnz	LCD_DATA@x^0,f,c
  8297  003080  2A14               	incf	(LCD_DATA@x+1)^0,f,c
  8298  003082  BE14               	btfsc	(LCD_DATA@x+1)^0,7,c
  8299  003084  EF4D  F018         	goto	u4811
  8300  003088  5014               	movf	(LCD_DATA@x+1)^0,w,c
  8301  00308A  E109               	bnz	u4810
  8302  00308C  0E04               	movlw	4
  8303  00308E  5C13               	subwf	LCD_DATA@x^0,w,c
  8304  003090  A0D8               	btfss	status,0,c
  8305  003092  EF4D  F018         	goto	u4811
  8306  003096  EF4F  F018         	goto	u4810
  8307  00309A                     u4811:
  8308  00309A  EF16  F018         	goto	l3855
  8309  00309E                     u4810:
  8310  00309E                     
  8311                           ;./LCD.h: 78:    TRISCbits.RC0 = (char)_4bit_[0x00];
  8312  00309E  B00A               	btfsc	LCD_DATA@_4bit_^0,0,c
  8313  0030A0  D002               	bra	u4825
  8314  0030A2  9094               	bcf	148,0,c	;volatile
  8315  0030A4  D001               	bra	u4826
  8316  0030A6                     u4825:
  8317  0030A6  8094               	bsf	148,0,c	;volatile
  8318  0030A8                     u4826:
  8319                           
  8320                           ;./LCD.h: 79:    TRISCbits.RC1 = (char)_4bit_[0x01];
  8321  0030A8  B00C               	btfsc	(LCD_DATA@_4bit_+2)^0,0,c
  8322  0030AA  D002               	bra	u4835
  8323  0030AC  9294               	bcf	148,1,c	;volatile
  8324  0030AE  D001               	bra	u4836
  8325  0030B0                     u4835:
  8326  0030B0  8294               	bsf	148,1,c	;volatile
  8327  0030B2                     u4836:
  8328                           
  8329                           ;./LCD.h: 80:    TRISCbits.RC2 = (char)_4bit_[0x02];
  8330  0030B2  B00E               	btfsc	(LCD_DATA@_4bit_+4)^0,0,c
  8331  0030B4  D002               	bra	u4845
  8332  0030B6  9494               	bcf	148,2,c	;volatile
  8333  0030B8  D001               	bra	u4846
  8334  0030BA                     u4845:
  8335  0030BA  8494               	bsf	148,2,c	;volatile
  8336  0030BC                     u4846:
  8337                           
  8338                           ;./LCD.h: 81:    TRISCbits.RC3 = (char)_4bit_[0x03];
  8339  0030BC  B010               	btfsc	(LCD_DATA@_4bit_+6)^0,0,c
  8340  0030BE  D002               	bra	u4855
  8341  0030C0  9694               	bcf	148,3,c	;volatile
  8342  0030C2  D001               	bra	u4856
  8343  0030C4                     u4855:
  8344  0030C4  8694               	bsf	148,3,c	;volatile
  8345  0030C6                     u4856:
  8346                           
  8347                           ;./LCD.h: 82:   PORTJbits.RJ1 = 0x01;
  8348  0030C6  8288               	bsf	136,1,c	;volatile
  8349                           
  8350                           ;./LCD.h: 83:   PORTBbits.RB3 = 0x00;
  8351  0030C8  9681               	bcf	129,3,c	;volatile
  8352                           
  8353                           ;./LCD.h: 84:   PORTJbits.RJ0 = 0x01;
  8354  0030CA  8088               	bsf	136,0,c	;volatile
  8355  0030CC                     
  8356                           ;./LCD.h: 85:   _delay((unsigned long)((2)*(0x12BFCE0/4000.0)));
  8357  0030CC  0E0D               	movlw	13
  8358  0030CE  6E03               	movwf	??_LCD_DATA^0,c
  8359  0030D0  0EC3               	movlw	195
  8360  0030D2                     u5297:
  8361  0030D2  2EE8               	decfsz	wreg,f,c
  8362  0030D4  D7FE               	bra	u5297
  8363  0030D6  2E03               	decfsz	??_LCD_DATA^0,f,c
  8364  0030D8  D7FC               	bra	u5297
  8365  0030DA  F000               	nop	
  8366  0030DC                     
  8367                           ;./LCD.h: 86:   PORTJbits.RJ0 = 0x00;
  8368  0030DC  9088               	bcf	136,0,c	;volatile
  8369  0030DE                     
  8370                           ;./LCD.h: 88:   _data = data;
  8371  0030DE  C009  F012         	movff	LCD_DATA@data,LCD_DATA@_data
  8372  0030E2                     
  8373                           ;./LCD.h: 89:   for(int x = 0x00; x< 0x04; x-=-0x01){
  8374  0030E2  0E00               	movlw	0
  8375  0030E4  6E16               	movwf	(LCD_DATA@x_781+1)^0,c
  8376  0030E6  0E00               	movlw	0
  8377  0030E8  6E15               	movwf	LCD_DATA@x_781^0,c
  8378  0030EA                     l3873:
  8379                           
  8380                           ;./LCD.h: 90:    _4bit_[x] = (_data & (0x01<<x))>>x;
  8381  0030EA  C015  F003         	movff	LCD_DATA@x_781,??_LCD_DATA
  8382  0030EE  C015  F004         	movff	LCD_DATA@x_781,??_LCD_DATA+1
  8383  0030F2  0E01               	movlw	1
  8384  0030F4  6E05               	movwf	(??_LCD_DATA+2)^0,c
  8385  0030F6  2A04               	incf	(??_LCD_DATA+1)^0,f,c
  8386  0030F8  EF80  F018         	goto	u4864
  8387  0030FC                     u4865:
  8388  0030FC  90D8               	bcf	status,0,c
  8389  0030FE  3605               	rlcf	(??_LCD_DATA+2)^0,f,c
  8390  003100                     u4864:
  8391  003100  2E04               	decfsz	(??_LCD_DATA+1)^0,f,c
  8392  003102  EF7E  F018         	goto	u4865
  8393  003106  5005               	movf	(??_LCD_DATA+2)^0,w,c
  8394  003108  1412               	andwf	LCD_DATA@_data^0,w,c
  8395  00310A  6E06               	movwf	(??_LCD_DATA+3)^0,c
  8396  00310C  2A03               	incf	??_LCD_DATA^0,f,c
  8397  00310E  EF8B  F018         	goto	u4874
  8398  003112                     u4875:
  8399  003112  90D8               	bcf	status,0,c
  8400  003114  3206               	rrcf	(??_LCD_DATA+3)^0,f,c
  8401  003116                     u4874:
  8402  003116  2E03               	decfsz	??_LCD_DATA^0,f,c
  8403  003118  EF89  F018         	goto	u4875
  8404  00311C  5006               	movf	(??_LCD_DATA+3)^0,w,c
  8405  00311E  6E07               	movwf	(??_LCD_DATA+4)^0,c
  8406  003120  6A08               	clrf	(??_LCD_DATA+5)^0,c
  8407  003122  90D8               	bcf	status,0,c
  8408  003124  3415               	rlcf	LCD_DATA@x_781^0,w,c
  8409  003126  6ED9               	movwf	fsr2l,c
  8410  003128  3416               	rlcf	(LCD_DATA@x_781+1)^0,w,c
  8411  00312A  6EDA               	movwf	fsr2h,c
  8412  00312C  0E0A               	movlw	low LCD_DATA@_4bit_
  8413  00312E  26D9               	addwf	fsr2l,f,c
  8414  003130  0E00               	movlw	high LCD_DATA@_4bit_
  8415  003132  22DA               	addwfc	fsr2h,f,c
  8416  003134  C007  FFDE         	movff	??_LCD_DATA+4,postinc2
  8417  003138  C008  FFDD         	movff	??_LCD_DATA+5,postdec2
  8418  00313C                     
  8419                           ;./LCD.h: 91:   }
  8420  00313C  4A15               	infsnz	LCD_DATA@x_781^0,f,c
  8421  00313E  2A16               	incf	(LCD_DATA@x_781+1)^0,f,c
  8422  003140  BE16               	btfsc	(LCD_DATA@x_781+1)^0,7,c
  8423  003142  EFAC  F018         	goto	u4881
  8424  003146  5016               	movf	(LCD_DATA@x_781+1)^0,w,c
  8425  003148  E109               	bnz	u4880
  8426  00314A  0E04               	movlw	4
  8427  00314C  5C15               	subwf	LCD_DATA@x_781^0,w,c
  8428  00314E  A0D8               	btfss	status,0,c
  8429  003150  EFAC  F018         	goto	u4881
  8430  003154  EFAE  F018         	goto	u4880
  8431  003158                     u4881:
  8432  003158  EF75  F018         	goto	l3873
  8433  00315C                     u4880:
  8434  00315C                     
  8435                           ;./LCD.h: 92:    TRISCbits.RC0 = (char)_4bit_[0x00];
  8436  00315C  B00A               	btfsc	LCD_DATA@_4bit_^0,0,c
  8437  00315E  D002               	bra	u4895
  8438  003160  9094               	bcf	148,0,c	;volatile
  8439  003162  D001               	bra	u4896
  8440  003164                     u4895:
  8441  003164  8094               	bsf	148,0,c	;volatile
  8442  003166                     u4896:
  8443                           
  8444                           ;./LCD.h: 93:    TRISCbits.RC1 = (char)_4bit_[0x01];
  8445  003166  B00C               	btfsc	(LCD_DATA@_4bit_+2)^0,0,c
  8446  003168  D002               	bra	u4905
  8447  00316A  9294               	bcf	148,1,c	;volatile
  8448  00316C  D001               	bra	u4906
  8449  00316E                     u4905:
  8450  00316E  8294               	bsf	148,1,c	;volatile
  8451  003170                     u4906:
  8452                           
  8453                           ;./LCD.h: 94:    TRISCbits.RC2 = (char)_4bit_[0x02];
  8454  003170  B00E               	btfsc	(LCD_DATA@_4bit_+4)^0,0,c
  8455  003172  D002               	bra	u4915
  8456  003174  9494               	bcf	148,2,c	;volatile
  8457  003176  D001               	bra	u4916
  8458  003178                     u4915:
  8459  003178  8494               	bsf	148,2,c	;volatile
  8460  00317A                     u4916:
  8461                           
  8462                           ;./LCD.h: 95:    TRISCbits.RC3 = (char)_4bit_[0x03];
  8463  00317A  B010               	btfsc	(LCD_DATA@_4bit_+6)^0,0,c
  8464  00317C  D002               	bra	u4925
  8465  00317E  9694               	bcf	148,3,c	;volatile
  8466  003180  D001               	bra	u4926
  8467  003182                     u4925:
  8468  003182  8694               	bsf	148,3,c	;volatile
  8469  003184                     u4926:
  8470                           
  8471                           ;./LCD.h: 96:   PORTJbits.RJ1 = 0x01;
  8472  003184  8288               	bsf	136,1,c	;volatile
  8473                           
  8474                           ;./LCD.h: 97:   PORTBbits.RB3 = 0x00;
  8475  003186  9681               	bcf	129,3,c	;volatile
  8476                           
  8477                           ;./LCD.h: 98:   PORTJbits.RJ0 = 0x01;
  8478  003188  8088               	bsf	136,0,c	;volatile
  8479  00318A                     
  8480                           ;./LCD.h: 99:   _delay((unsigned long)((2)*(0x12BFCE0/4000.0)));
  8481  00318A  0E0D               	movlw	13
  8482  00318C  6E03               	movwf	??_LCD_DATA^0,c
  8483  00318E  0EC3               	movlw	195
  8484  003190                     u5307:
  8485  003190  2EE8               	decfsz	wreg,f,c
  8486  003192  D7FE               	bra	u5307
  8487  003194  2E03               	decfsz	??_LCD_DATA^0,f,c
  8488  003196  D7FC               	bra	u5307
  8489  003198  F000               	nop	
  8490  00319A                     
  8491                           ;./LCD.h: 100:   PORTJbits.RJ0 = 0x00;
  8492  00319A  9088               	bcf	136,0,c	;volatile
  8493  00319C                     l75:
  8494  00319C  0012               	return		;funcret
  8495  00319E                     __end_of_LCD_DATA:
  8496                           	callstack 0
  8497                           
  8498 ;; *************** function _LCD_20_LINE4 *****************
  8499 ;; Defined at:
  8500 ;;		line 189 in file "./LCD.h"
  8501 ;; Parameters:    Size  Location     Type
  8502 ;;		None
  8503 ;; Auto vars:     Size  Location     Type
  8504 ;;		None
  8505 ;; Return value:  Size  Location     Type
  8506 ;;                  1    wreg      void 
  8507 ;; Registers used:
  8508 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8509 ;; Tracked objects:
  8510 ;;		On entry : 0/0
  8511 ;;		On exit  : 0/0
  8512 ;;		Unchanged: 0/0
  8513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8517 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8518 ;;Total ram usage:        0 bytes
  8519 ;; Hardware stack levels used: 1
  8520 ;; Hardware stack levels required when called: 1
  8521 ;; This function calls:
  8522 ;;		_LCD_INSTRUCTION_4BIT
  8523 ;; This function is called by:
  8524 ;;		_main
  8525 ;; This function uses a non-reentrant model
  8526 ;;
  8527                           
  8528                           	psect	text36
  8529  00424E                     __ptext36:
  8530                           	callstack 0
  8531  00424E                     _LCD_20_LINE4:
  8532                           	callstack 29
  8533  00424E  0ED4               	movlw	212
  8534  004250  ECCF  F018         	call	_LCD_INSTRUCTION_4BIT
  8535  004254  0012               	return		;funcret
  8536  004256                     __end_of_LCD_20_LINE4:
  8537                           	callstack 0
  8538                           
  8539 ;; *************** function _LCD_20_LINE3 *****************
  8540 ;; Defined at:
  8541 ;;		line 188 in file "./LCD.h"
  8542 ;; Parameters:    Size  Location     Type
  8543 ;;		None
  8544 ;; Auto vars:     Size  Location     Type
  8545 ;;		None
  8546 ;; Return value:  Size  Location     Type
  8547 ;;                  1    wreg      void 
  8548 ;; Registers used:
  8549 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8550 ;; Tracked objects:
  8551 ;;		On entry : 0/0
  8552 ;;		On exit  : 0/0
  8553 ;;		Unchanged: 0/0
  8554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8558 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8559 ;;Total ram usage:        0 bytes
  8560 ;; Hardware stack levels used: 1
  8561 ;; Hardware stack levels required when called: 1
  8562 ;; This function calls:
  8563 ;;		_LCD_INSTRUCTION_4BIT
  8564 ;; This function is called by:
  8565 ;;		_main
  8566 ;; This function uses a non-reentrant model
  8567 ;;
  8568                           
  8569                           	psect	text37
  8570  004256                     __ptext37:
  8571                           	callstack 0
  8572  004256                     _LCD_20_LINE3:
  8573                           	callstack 29
  8574  004256  0E94               	movlw	148
  8575  004258  ECCF  F018         	call	_LCD_INSTRUCTION_4BIT
  8576  00425C  0012               	return		;funcret
  8577  00425E                     __end_of_LCD_20_LINE3:
  8578                           	callstack 0
  8579                           
  8580 ;; *************** function _LCD_20_LINE1 *****************
  8581 ;; Defined at:
  8582 ;;		line 186 in file "./LCD.h"
  8583 ;; Parameters:    Size  Location     Type
  8584 ;;		None
  8585 ;; Auto vars:     Size  Location     Type
  8586 ;;		None
  8587 ;; Return value:  Size  Location     Type
  8588 ;;                  1    wreg      void 
  8589 ;; Registers used:
  8590 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8591 ;; Tracked objects:
  8592 ;;		On entry : 0/0
  8593 ;;		On exit  : 0/0
  8594 ;;		Unchanged: 0/0
  8595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8599 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8600 ;;Total ram usage:        0 bytes
  8601 ;; Hardware stack levels used: 1
  8602 ;; Hardware stack levels required when called: 1
  8603 ;; This function calls:
  8604 ;;		_LCD_INSTRUCTION_4BIT
  8605 ;; This function is called by:
  8606 ;;		_main
  8607 ;; This function uses a non-reentrant model
  8608 ;;
  8609                           
  8610                           	psect	text38
  8611  00425E                     __ptext38:
  8612                           	callstack 0
  8613  00425E                     _LCD_20_LINE1:
  8614                           	callstack 29
  8615  00425E  0E80               	movlw	128
  8616  004260  ECCF  F018         	call	_LCD_INSTRUCTION_4BIT
  8617  004264  0012               	return		;funcret
  8618  004266                     __end_of_LCD_20_LINE1:
  8619                           	callstack 0
  8620                           
  8621 ;; *************** function _LCD_INSTRUCTION_4BIT *****************
  8622 ;; Defined at:
  8623 ;;		line 105 in file "./LCD.h"
  8624 ;; Parameters:    Size  Location     Type
  8625 ;;  instruction     1    wreg     unsigned char 
  8626 ;; Auto vars:     Size  Location     Type
  8627 ;;  instruction     1    6[COMRAM] unsigned char 
  8628 ;;  x               2   18[COMRAM] int 
  8629 ;;  x               2   16[COMRAM] int 
  8630 ;;  _4bit_          8    7[COMRAM] int [4]
  8631 ;;  data            1   15[COMRAM] unsigned char 
  8632 ;; Return value:  Size  Location     Type
  8633 ;;                  1    wreg      void 
  8634 ;; Registers used:
  8635 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8636 ;; Tracked objects:
  8637 ;;		On entry : 0/0
  8638 ;;		On exit  : 0/0
  8639 ;;		Unchanged: 0/0
  8640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8642 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8643 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8644 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8645 ;;Total ram usage:       20 bytes
  8646 ;; Hardware stack levels used: 1
  8647 ;; This function calls:
  8648 ;;		Nothing
  8649 ;; This function is called by:
  8650 ;;		_LCD_INITIALIZE_4BIT
  8651 ;;		_LCD_20_LINE1
  8652 ;;		_LCD_20_LINE3
  8653 ;;		_LCD_20_LINE4
  8654 ;;		_LCD_SET_CURSOR
  8655 ;;		_LCD_DISPLAY_SHITT_RIGHT
  8656 ;;		_LCD_DISPLAY_SHIFT_LEFT
  8657 ;;		_LCD_CLEAR
  8658 ;;		_LCD_20_LINE2
  8659 ;;		_LCD_16_LINE1
  8660 ;;		_LCD_16_LINE2
  8661 ;; This function uses a non-reentrant model
  8662 ;;
  8663                           
  8664                           	psect	text39
  8665  00319E                     __ptext39:
  8666                           	callstack 0
  8667  00319E                     _LCD_INSTRUCTION_4BIT:
  8668                           	callstack 29
  8669                           
  8670                           ;incstack = 0
  8671                           ;LCD_INSTRUCTION_4BIT@instruction stored from wreg
  8672  00319E  6E07               	movwf	LCD_INSTRUCTION_4BIT@instruction^0,c
  8673  0031A0                     
  8674                           ;./LCD.h: 106:  int _4bit_[0x04];;./LCD.h: 107:  unsigned char data = instruction;
  8675  0031A0  C007  F010         	movff	LCD_INSTRUCTION_4BIT@instruction,LCD_INSTRUCTION_4BIT@data
  8676  0031A4                     
  8677                           ;./LCD.h: 108:   data = data>>0x04;
  8678  0031A4  3810               	swapf	LCD_INSTRUCTION_4BIT@data^0,w,c
  8679  0031A6  0B0F               	andlw	15
  8680  0031A8  6E10               	movwf	LCD_INSTRUCTION_4BIT@data^0,c
  8681  0031AA                     
  8682                           ;./LCD.h: 109:   for(int x =0x00; x < 0x04; x-=-0x01){
  8683  0031AA  0E00               	movlw	0
  8684  0031AC  6E12               	movwf	(LCD_INSTRUCTION_4BIT@x+1)^0,c
  8685  0031AE  0E00               	movlw	0
  8686  0031B0  6E11               	movwf	LCD_INSTRUCTION_4BIT@x^0,c
  8687  0031B2                     l3901:
  8688                           
  8689                           ;./LCD.h: 110:    _4bit_[x] = (data & (0x01<<x))>>x;
  8690  0031B2  C011  F001         	movff	LCD_INSTRUCTION_4BIT@x,??_LCD_INSTRUCTION_4BIT
  8691  0031B6  C011  F002         	movff	LCD_INSTRUCTION_4BIT@x,??_LCD_INSTRUCTION_4BIT+1
  8692  0031BA  0E01               	movlw	1
  8693  0031BC  6E03               	movwf	(??_LCD_INSTRUCTION_4BIT+2)^0,c
  8694  0031BE  2A02               	incf	(??_LCD_INSTRUCTION_4BIT+1)^0,f,c
  8695  0031C0  EFE4  F018         	goto	u4944
  8696  0031C4                     u4945:
  8697  0031C4  90D8               	bcf	status,0,c
  8698  0031C6  3603               	rlcf	(??_LCD_INSTRUCTION_4BIT+2)^0,f,c
  8699  0031C8                     u4944:
  8700  0031C8  2E02               	decfsz	(??_LCD_INSTRUCTION_4BIT+1)^0,f,c
  8701  0031CA  EFE2  F018         	goto	u4945
  8702  0031CE  5003               	movf	(??_LCD_INSTRUCTION_4BIT+2)^0,w,c
  8703  0031D0  1410               	andwf	LCD_INSTRUCTION_4BIT@data^0,w,c
  8704  0031D2  6E04               	movwf	(??_LCD_INSTRUCTION_4BIT+3)^0,c
  8705  0031D4  2A01               	incf	??_LCD_INSTRUCTION_4BIT^0,f,c
  8706  0031D6  EFEF  F018         	goto	u4954
  8707  0031DA                     u4955:
  8708  0031DA  90D8               	bcf	status,0,c
  8709  0031DC  3204               	rrcf	(??_LCD_INSTRUCTION_4BIT+3)^0,f,c
  8710  0031DE                     u4954:
  8711  0031DE  2E01               	decfsz	??_LCD_INSTRUCTION_4BIT^0,f,c
  8712  0031E0  EFED  F018         	goto	u4955
  8713  0031E4  5004               	movf	(??_LCD_INSTRUCTION_4BIT+3)^0,w,c
  8714  0031E6  6E05               	movwf	(??_LCD_INSTRUCTION_4BIT+4)^0,c
  8715  0031E8  6A06               	clrf	(??_LCD_INSTRUCTION_4BIT+5)^0,c
  8716  0031EA  90D8               	bcf	status,0,c
  8717  0031EC  3411               	rlcf	LCD_INSTRUCTION_4BIT@x^0,w,c
  8718  0031EE  6ED9               	movwf	fsr2l,c
  8719  0031F0  3412               	rlcf	(LCD_INSTRUCTION_4BIT@x+1)^0,w,c
  8720  0031F2  6EDA               	movwf	fsr2h,c
  8721  0031F4  0E08               	movlw	low LCD_INSTRUCTION_4BIT@_4bit_
  8722  0031F6  26D9               	addwf	fsr2l,f,c
  8723  0031F8  0E00               	movlw	high LCD_INSTRUCTION_4BIT@_4bit_
  8724  0031FA  22DA               	addwfc	fsr2h,f,c
  8725  0031FC  C005  FFDE         	movff	??_LCD_INSTRUCTION_4BIT+4,postinc2
  8726  003200  C006  FFDD         	movff	??_LCD_INSTRUCTION_4BIT+5,postdec2
  8727  003204                     
  8728                           ;./LCD.h: 111:   }
  8729  003204  4A11               	infsnz	LCD_INSTRUCTION_4BIT@x^0,f,c
  8730  003206  2A12               	incf	(LCD_INSTRUCTION_4BIT@x+1)^0,f,c
  8731  003208  BE12               	btfsc	(LCD_INSTRUCTION_4BIT@x+1)^0,7,c
  8732  00320A  EF10  F019         	goto	u4961
  8733  00320E  5012               	movf	(LCD_INSTRUCTION_4BIT@x+1)^0,w,c
  8734  003210  E109               	bnz	u4960
  8735  003212  0E04               	movlw	4
  8736  003214  5C11               	subwf	LCD_INSTRUCTION_4BIT@x^0,w,c
  8737  003216  A0D8               	btfss	status,0,c
  8738  003218  EF10  F019         	goto	u4961
  8739  00321C  EF12  F019         	goto	u4960
  8740  003220                     u4961:
  8741  003220  EFD9  F018         	goto	l3901
  8742  003224                     u4960:
  8743  003224                     
  8744                           ;./LCD.h: 112:    TRISCbits.RC0 = (char)_4bit_[0x00];
  8745  003224  B008               	btfsc	LCD_INSTRUCTION_4BIT@_4bit_^0,0,c
  8746  003226  D002               	bra	u4975
  8747  003228  9094               	bcf	148,0,c	;volatile
  8748  00322A  D001               	bra	u4976
  8749  00322C                     u4975:
  8750  00322C  8094               	bsf	148,0,c	;volatile
  8751  00322E                     u4976:
  8752                           
  8753                           ;./LCD.h: 113:    TRISCbits.RC1 = (char)_4bit_[0x01];
  8754  00322E  B00A               	btfsc	(LCD_INSTRUCTION_4BIT@_4bit_+2)^0,0,c
  8755  003230  D002               	bra	u4985
  8756  003232  9294               	bcf	148,1,c	;volatile
  8757  003234  D001               	bra	u4986
  8758  003236                     u4985:
  8759  003236  8294               	bsf	148,1,c	;volatile
  8760  003238                     u4986:
  8761                           
  8762                           ;./LCD.h: 114:    TRISCbits.RC2 = (char)_4bit_[0x02];
  8763  003238  B00C               	btfsc	(LCD_INSTRUCTION_4BIT@_4bit_+4)^0,0,c
  8764  00323A  D002               	bra	u4995
  8765  00323C  9494               	bcf	148,2,c	;volatile
  8766  00323E  D001               	bra	u4996
  8767  003240                     u4995:
  8768  003240  8494               	bsf	148,2,c	;volatile
  8769  003242                     u4996:
  8770                           
  8771                           ;./LCD.h: 115:    TRISCbits.RC3 = (char)_4bit_[0x03];
  8772  003242  B00E               	btfsc	(LCD_INSTRUCTION_4BIT@_4bit_+6)^0,0,c
  8773  003244  D002               	bra	u5005
  8774  003246  9694               	bcf	148,3,c	;volatile
  8775  003248  D001               	bra	u5006
  8776  00324A                     u5005:
  8777  00324A  8694               	bsf	148,3,c	;volatile
  8778  00324C                     u5006:
  8779                           
  8780                           ;./LCD.h: 116:   PORTJbits.RJ1 = 0x00;
  8781  00324C  9288               	bcf	136,1,c	;volatile
  8782                           
  8783                           ;./LCD.h: 117:   PORTBbits.RB3 = 0x00;
  8784  00324E  9681               	bcf	129,3,c	;volatile
  8785                           
  8786                           ;./LCD.h: 118:   PORTJbits.RJ0 = 0x01;
  8787  003250  8088               	bsf	136,0,c	;volatile
  8788  003252                     
  8789                           ;./LCD.h: 119:   _delay((unsigned long)((2)*(0x12BFCE0/4000.0)));
  8790  003252  0E0D               	movlw	13
  8791  003254  6E01               	movwf	??_LCD_INSTRUCTION_4BIT^0,c
  8792  003256  0EC3               	movlw	195
  8793  003258                     u5317:
  8794  003258  2EE8               	decfsz	wreg,f,c
  8795  00325A  D7FE               	bra	u5317
  8796  00325C  2E01               	decfsz	??_LCD_INSTRUCTION_4BIT^0,f,c
  8797  00325E  D7FC               	bra	u5317
  8798  003260  F000               	nop	
  8799  003262                     
  8800                           ;./LCD.h: 120:   PORTJbits.RJ0 = 0x00;
  8801  003262  9088               	bcf	136,0,c	;volatile
  8802  003264                     
  8803                           ;./LCD.h: 122:   data = instruction;
  8804  003264  C007  F010         	movff	LCD_INSTRUCTION_4BIT@instruction,LCD_INSTRUCTION_4BIT@data
  8805  003268                     
  8806                           ;./LCD.h: 123:   for(int x = 0x00; x< 0x04; x-=-0x01){
  8807  003268  0E00               	movlw	0
  8808  00326A  6E14               	movwf	(LCD_INSTRUCTION_4BIT@x_787+1)^0,c
  8809  00326C  0E00               	movlw	0
  8810  00326E  6E13               	movwf	LCD_INSTRUCTION_4BIT@x_787^0,c
  8811  003270                     l3919:
  8812                           
  8813                           ;./LCD.h: 124:    _4bit_[x] = (data & (0x01<<x))>>x;
  8814  003270  C013  F001         	movff	LCD_INSTRUCTION_4BIT@x_787,??_LCD_INSTRUCTION_4BIT
  8815  003274  C013  F002         	movff	LCD_INSTRUCTION_4BIT@x_787,??_LCD_INSTRUCTION_4BIT+1
  8816  003278  0E01               	movlw	1
  8817  00327A  6E03               	movwf	(??_LCD_INSTRUCTION_4BIT+2)^0,c
  8818  00327C  2A02               	incf	(??_LCD_INSTRUCTION_4BIT+1)^0,f,c
  8819  00327E  EF43  F019         	goto	u5014
  8820  003282                     u5015:
  8821  003282  90D8               	bcf	status,0,c
  8822  003284  3603               	rlcf	(??_LCD_INSTRUCTION_4BIT+2)^0,f,c
  8823  003286                     u5014:
  8824  003286  2E02               	decfsz	(??_LCD_INSTRUCTION_4BIT+1)^0,f,c
  8825  003288  EF41  F019         	goto	u5015
  8826  00328C  5003               	movf	(??_LCD_INSTRUCTION_4BIT+2)^0,w,c
  8827  00328E  1410               	andwf	LCD_INSTRUCTION_4BIT@data^0,w,c
  8828  003290  6E04               	movwf	(??_LCD_INSTRUCTION_4BIT+3)^0,c
  8829  003292  2A01               	incf	??_LCD_INSTRUCTION_4BIT^0,f,c
  8830  003294  EF4E  F019         	goto	u5024
  8831  003298                     u5025:
  8832  003298  90D8               	bcf	status,0,c
  8833  00329A  3204               	rrcf	(??_LCD_INSTRUCTION_4BIT+3)^0,f,c
  8834  00329C                     u5024:
  8835  00329C  2E01               	decfsz	??_LCD_INSTRUCTION_4BIT^0,f,c
  8836  00329E  EF4C  F019         	goto	u5025
  8837  0032A2  5004               	movf	(??_LCD_INSTRUCTION_4BIT+3)^0,w,c
  8838  0032A4  6E05               	movwf	(??_LCD_INSTRUCTION_4BIT+4)^0,c
  8839  0032A6  6A06               	clrf	(??_LCD_INSTRUCTION_4BIT+5)^0,c
  8840  0032A8  90D8               	bcf	status,0,c
  8841  0032AA  3413               	rlcf	LCD_INSTRUCTION_4BIT@x_787^0,w,c
  8842  0032AC  6ED9               	movwf	fsr2l,c
  8843  0032AE  3414               	rlcf	(LCD_INSTRUCTION_4BIT@x_787+1)^0,w,c
  8844  0032B0  6EDA               	movwf	fsr2h,c
  8845  0032B2  0E08               	movlw	low LCD_INSTRUCTION_4BIT@_4bit_
  8846  0032B4  26D9               	addwf	fsr2l,f,c
  8847  0032B6  0E00               	movlw	high LCD_INSTRUCTION_4BIT@_4bit_
  8848  0032B8  22DA               	addwfc	fsr2h,f,c
  8849  0032BA  C005  FFDE         	movff	??_LCD_INSTRUCTION_4BIT+4,postinc2
  8850  0032BE  C006  FFDD         	movff	??_LCD_INSTRUCTION_4BIT+5,postdec2
  8851  0032C2                     
  8852                           ;./LCD.h: 125:   }
  8853  0032C2  4A13               	infsnz	LCD_INSTRUCTION_4BIT@x_787^0,f,c
  8854  0032C4  2A14               	incf	(LCD_INSTRUCTION_4BIT@x_787+1)^0,f,c
  8855  0032C6  BE14               	btfsc	(LCD_INSTRUCTION_4BIT@x_787+1)^0,7,c
  8856  0032C8  EF6F  F019         	goto	u5031
  8857  0032CC  5014               	movf	(LCD_INSTRUCTION_4BIT@x_787+1)^0,w,c
  8858  0032CE  E109               	bnz	u5030
  8859  0032D0  0E04               	movlw	4
  8860  0032D2  5C13               	subwf	LCD_INSTRUCTION_4BIT@x_787^0,w,c
  8861  0032D4  A0D8               	btfss	status,0,c
  8862  0032D6  EF6F  F019         	goto	u5031
  8863  0032DA  EF71  F019         	goto	u5030
  8864  0032DE                     u5031:
  8865  0032DE  EF38  F019         	goto	l3919
  8866  0032E2                     u5030:
  8867  0032E2                     
  8868                           ;./LCD.h: 126:    TRISCbits.RC0 = (char)_4bit_[0x00];
  8869  0032E2  B008               	btfsc	LCD_INSTRUCTION_4BIT@_4bit_^0,0,c
  8870  0032E4  D002               	bra	u5045
  8871  0032E6  9094               	bcf	148,0,c	;volatile
  8872  0032E8  D001               	bra	u5046
  8873  0032EA                     u5045:
  8874  0032EA  8094               	bsf	148,0,c	;volatile
  8875  0032EC                     u5046:
  8876                           
  8877                           ;./LCD.h: 127:    TRISCbits.RC1 = (char)_4bit_[0x01];
  8878  0032EC  B00A               	btfsc	(LCD_INSTRUCTION_4BIT@_4bit_+2)^0,0,c
  8879  0032EE  D002               	bra	u5055
  8880  0032F0  9294               	bcf	148,1,c	;volatile
  8881  0032F2  D001               	bra	u5056
  8882  0032F4                     u5055:
  8883  0032F4  8294               	bsf	148,1,c	;volatile
  8884  0032F6                     u5056:
  8885                           
  8886                           ;./LCD.h: 128:    TRISCbits.RC2 = (char)_4bit_[0x02];
  8887  0032F6  B00C               	btfsc	(LCD_INSTRUCTION_4BIT@_4bit_+4)^0,0,c
  8888  0032F8  D002               	bra	u5065
  8889  0032FA  9494               	bcf	148,2,c	;volatile
  8890  0032FC  D001               	bra	u5066
  8891  0032FE                     u5065:
  8892  0032FE  8494               	bsf	148,2,c	;volatile
  8893  003300                     u5066:
  8894                           
  8895                           ;./LCD.h: 129:    TRISCbits.RC3 = (char)_4bit_[0x03];
  8896  003300  B00E               	btfsc	(LCD_INSTRUCTION_4BIT@_4bit_+6)^0,0,c
  8897  003302  D002               	bra	u5075
  8898  003304  9694               	bcf	148,3,c	;volatile
  8899  003306  D001               	bra	u5076
  8900  003308                     u5075:
  8901  003308  8694               	bsf	148,3,c	;volatile
  8902  00330A                     u5076:
  8903                           
  8904                           ;./LCD.h: 130:   PORTJbits.RJ1 = 0x00;
  8905  00330A  9288               	bcf	136,1,c	;volatile
  8906                           
  8907                           ;./LCD.h: 131:   PORTBbits.RB3 = 0x00;
  8908  00330C  9681               	bcf	129,3,c	;volatile
  8909                           
  8910                           ;./LCD.h: 132:   PORTJbits.RJ0 = 0x01;
  8911  00330E  8088               	bsf	136,0,c	;volatile
  8912  003310                     
  8913                           ;./LCD.h: 133:   _delay((unsigned long)((2)*(0x12BFCE0/4000.0)));
  8914  003310  0E0D               	movlw	13
  8915  003312  6E01               	movwf	??_LCD_INSTRUCTION_4BIT^0,c
  8916  003314  0EC3               	movlw	195
  8917  003316                     u5327:
  8918  003316  2EE8               	decfsz	wreg,f,c
  8919  003318  D7FE               	bra	u5327
  8920  00331A  2E01               	decfsz	??_LCD_INSTRUCTION_4BIT^0,f,c
  8921  00331C  D7FC               	bra	u5327
  8922  00331E  F000               	nop	
  8923  003320                     
  8924                           ;./LCD.h: 134:   PORTJbits.RJ0 = 0x00;
  8925  003320  9088               	bcf	136,0,c	;volatile
  8926  003322  0012               	return		;funcret
  8927  003324                     __end_of_LCD_INSTRUCTION_4BIT:
  8928                           	callstack 0
  8929                           
  8930 ;; *************** function _ADC_Read *****************
  8931 ;; Defined at:
  8932 ;;		line 129 in file "main.c"
  8933 ;; Parameters:    Size  Location     Type
  8934 ;;  channel         2    0[COMRAM] int 
  8935 ;; Auto vars:     Size  Location     Type
  8936 ;;  digital         2    6[COMRAM] int 
  8937 ;; Return value:  Size  Location     Type
  8938 ;;                  2    0[COMRAM] int 
  8939 ;; Registers used:
  8940 ;;		wreg, status,2, status,0
  8941 ;; Tracked objects:
  8942 ;;		On entry : 0/0
  8943 ;;		On exit  : 0/0
  8944 ;;		Unchanged: 0/0
  8945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8946 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8947 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8948 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8949 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8950 ;;Total ram usage:        8 bytes
  8951 ;; Hardware stack levels used: 1
  8952 ;; This function calls:
  8953 ;;		Nothing
  8954 ;; This function is called by:
  8955 ;;		_main
  8956 ;; This function uses a non-reentrant model
  8957 ;;
  8958                           
  8959                           	psect	text40
  8960  003D20                     __ptext40:
  8961                           	callstack 0
  8962  003D20                     _ADC_Read:
  8963                           	callstack 30
  8964  003D20                     
  8965                           ;main.c: 130:     int digital;;main.c: 131:     ADCON0 =(ADCON0 & 0b11000011)|((channel<
      +                          <2) & 0b00111100);
  8966  003D20  C001  F003         	movff	ADC_Read@channel,??_ADC_Read
  8967  003D24  90D8               	bcf	status,0,c
  8968  003D26  3603               	rlcf	??_ADC_Read^0,f,c
  8969  003D28  90D8               	bcf	status,0,c
  8970  003D2A  3603               	rlcf	??_ADC_Read^0,f,c
  8971  003D2C  0E3C               	movlw	60
  8972  003D2E  1603               	andwf	??_ADC_Read^0,f,c
  8973  003D30  50C2               	movf	194,w,c	;volatile
  8974  003D32  0BC3               	andlw	195
  8975  003D34  1003               	iorwf	??_ADC_Read^0,w,c
  8976  003D36  6EC2               	movwf	194,c	;volatile
  8977                           
  8978                           ;main.c: 133:     ADCON0 |= ((1<<ADON)|(1<<GO));
  8979  003D38  B2C2               	btfsc	4034,1,c	;volatile
  8980  003D3A  EFA1  F01E         	goto	u5101
  8981  003D3E  EFA5  F01E         	goto	u5100
  8982  003D42                     u5101:
  8983  003D42  6A03               	clrf	??_ADC_Read^0,c
  8984  003D44  2A03               	incf	??_ADC_Read^0,f,c
  8985  003D46  EFA6  F01E         	goto	u5118
  8986  003D4A                     u5100:
  8987  003D4A  6A03               	clrf	??_ADC_Read^0,c
  8988  003D4C                     u5118:
  8989  003D4C  0E01               	movlw	1
  8990  003D4E  6E04               	movwf	(??_ADC_Read+1)^0,c
  8991  003D50  2A03               	incf	??_ADC_Read^0,f,c
  8992  003D52  EFAD  F01E         	goto	u5124
  8993  003D56                     u5125:
  8994  003D56  90D8               	bcf	status,0,c
  8995  003D58  3604               	rlcf	(??_ADC_Read+1)^0,f,c
  8996  003D5A                     u5124:
  8997  003D5A  2E03               	decfsz	??_ADC_Read^0,f,c
  8998  003D5C  EFAB  F01E         	goto	u5125
  8999  003D60  B0C2               	btfsc	4034,0,c	;volatile
  9000  003D62  EFB5  F01E         	goto	u5131
  9001  003D66  EFB9  F01E         	goto	u5130
  9002  003D6A                     u5131:
  9003  003D6A  6A05               	clrf	(??_ADC_Read+2)^0,c
  9004  003D6C  2A05               	incf	(??_ADC_Read+2)^0,f,c
  9005  003D6E  EFBA  F01E         	goto	u5148
  9006  003D72                     u5130:
  9007  003D72  6A05               	clrf	(??_ADC_Read+2)^0,c
  9008  003D74                     u5148:
  9009  003D74  0E01               	movlw	1
  9010  003D76  6E06               	movwf	(??_ADC_Read+3)^0,c
  9011  003D78  2A05               	incf	(??_ADC_Read+2)^0,f,c
  9012  003D7A  EFC1  F01E         	goto	u5154
  9013  003D7E                     u5155:
  9014  003D7E  90D8               	bcf	status,0,c
  9015  003D80  3606               	rlcf	(??_ADC_Read+3)^0,f,c
  9016  003D82                     u5154:
  9017  003D82  2E05               	decfsz	(??_ADC_Read+2)^0,f,c
  9018  003D84  EFBF  F01E         	goto	u5155
  9019  003D88  5006               	movf	(??_ADC_Read+3)^0,w,c
  9020  003D8A  1004               	iorwf	(??_ADC_Read+1)^0,w,c
  9021  003D8C  12C2               	iorwf	194,f,c	;volatile
  9022  003D8E                     l141:
  9023  003D8E  B2C2               	btfsc	194,1,c	;volatile
  9024  003D90  EFCC  F01E         	goto	u5161
  9025  003D94  EFCE  F01E         	goto	u5160
  9026  003D98                     u5161:
  9027  003D98  EFC7  F01E         	goto	l141
  9028  003D9C                     u5160:
  9029  003D9C                     
  9030                           ;main.c: 135:     digital = (ADRESH*256) | (ADRESL);
  9031  003D9C  50C3               	movf	195,w,c	;volatile
  9032  003D9E  CFC4 F003          	movff	4036,??_ADC_Read	;volatile
  9033  003DA2  6A04               	clrf	(??_ADC_Read+1)^0,c
  9034  003DA4  C003  F004         	movff	??_ADC_Read,??_ADC_Read+1
  9035  003DA8  6A03               	clrf	??_ADC_Read^0,c
  9036  003DAA  1003               	iorwf	??_ADC_Read^0,w,c
  9037  003DAC  6E07               	movwf	ADC_Read@digital^0,c
  9038  003DAE  5004               	movf	(??_ADC_Read+1)^0,w,c
  9039  003DB0  6E08               	movwf	(ADC_Read@digital+1)^0,c
  9040  003DB2                     
  9041                           ;main.c: 136:     return(digital);
  9042  003DB2  C007  F001         	movff	ADC_Read@digital,?_ADC_Read
  9043  003DB6  C008  F002         	movff	ADC_Read@digital+1,?_ADC_Read+1
  9044  003DBA  0012               	return		;funcret
  9045  003DBC                     __end_of_ADC_Read:
  9046                           	callstack 0
  9047                           
  9048 ;; *************** function _ADC_Init *****************
  9049 ;; Defined at:
  9050 ;;		line 106 in file "main.c"
  9051 ;; Parameters:    Size  Location     Type
  9052 ;;		None
  9053 ;; Auto vars:     Size  Location     Type
  9054 ;;		None
  9055 ;; Return value:  Size  Location     Type
  9056 ;;                  1    wreg      void 
  9057 ;; Registers used:
  9058 ;;		wreg, status,2
  9059 ;; Tracked objects:
  9060 ;;		On entry : 0/0
  9061 ;;		On exit  : 0/0
  9062 ;;		Unchanged: 0/0
  9063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9067 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9068 ;;Total ram usage:        0 bytes
  9069 ;; Hardware stack levels used: 1
  9070 ;; This function calls:
  9071 ;;		Nothing
  9072 ;; This function is called by:
  9073 ;;		_main
  9074 ;; This function uses a non-reentrant model
  9075 ;;
  9076                           
  9077                           	psect	text41
  9078  0041BE                     __ptext41:
  9079                           	callstack 0
  9080  0041BE                     _ADC_Init:
  9081                           	callstack 30
  9082  0041BE                     
  9083                           ;main.c: 107:      ADCON0bits.ADON = 0x01;
  9084  0041BE  80C2               	bsf	194,0,c	;volatile
  9085                           
  9086                           ;main.c: 108:     ADCON0bits.CHS0 = 0x00;
  9087  0041C0  94C2               	bcf	194,2,c	;volatile
  9088                           
  9089                           ;main.c: 109:     ADCON0bits.CHS1 = 0x00;
  9090  0041C2  96C2               	bcf	194,3,c	;volatile
  9091                           
  9092                           ;main.c: 110:     ADCON0bits.CHS2 = 0x00;
  9093  0041C4  98C2               	bcf	194,4,c	;volatile
  9094                           
  9095                           ;main.c: 111:     ADCON0bits.CHS3 = 0x00;
  9096  0041C6  9AC2               	bcf	194,5,c	;volatile
  9097                           
  9098                           ;main.c: 113:     ADCON1bits.PCFG0 = 0x01;
  9099  0041C8  80C1               	bsf	193,0,c	;volatile
  9100                           
  9101                           ;main.c: 114:     ADCON1bits.PCFG1 = 0x01;
  9102  0041CA  82C1               	bsf	193,1,c	;volatile
  9103                           
  9104                           ;main.c: 115:     ADCON1bits.PCFG2 = 0x01;
  9105  0041CC  84C1               	bsf	193,2,c	;volatile
  9106                           
  9107                           ;main.c: 116:     ADCON1bits.PCFG3 = 0x00;
  9108  0041CE  96C1               	bcf	193,3,c	;volatile
  9109                           
  9110                           ;main.c: 117:     ADCON1bits.VCFG0 = 0x00;
  9111  0041D0  98C1               	bcf	193,4,c	;volatile
  9112                           
  9113                           ;main.c: 118:     ADCON1bits.VCFG1 = 0x00;
  9114  0041D2  9AC1               	bcf	193,5,c	;volatile
  9115                           
  9116                           ;main.c: 120:     ADCON2bits.ADFM = 0x01;
  9117  0041D4  8EC0               	bsf	192,7,c	;volatile
  9118                           
  9119                           ;main.c: 121:     ADCON2bits.ADCS0 = 0;
  9120  0041D6  90C0               	bcf	192,0,c	;volatile
  9121                           
  9122                           ;main.c: 122:     ADCON2bits.ADCS1 = 1;
  9123  0041D8  82C0               	bsf	192,1,c	;volatile
  9124                           
  9125                           ;main.c: 123:     ADCON2bits.ADCS2 = 0;
  9126  0041DA  94C0               	bcf	192,2,c	;volatile
  9127  0041DC                     
  9128                           ;main.c: 124:     ADRESH = 0x00;
  9129  0041DC  0E00               	movlw	0
  9130  0041DE  6EC4               	movwf	196,c	;volatile
  9131                           
  9132                           ;main.c: 125:     ADRESL = 0x00;
  9133  0041E0  0E00               	movlw	0
  9134  0041E2  6EC3               	movwf	195,c	;volatile
  9135  0041E4  0012               	return		;funcret
  9136  0041E6                     __end_of_ADC_Init:
  9137                           	callstack 0
  9138                           
  9139                           	psect	rparam
  9140  0000                     
  9141                           	psect	idloc
  9142                           
  9143                           ;Config register IDLOC0 @ 0x200000
  9144                           ;	unspecified, using default values
  9145  200000                     	org	2097152
  9146  200000  FF                 	db	255
  9147                           
  9148                           ;Config register IDLOC1 @ 0x200001
  9149                           ;	unspecified, using default values
  9150  200001                     	org	2097153
  9151  200001  FF                 	db	255
  9152                           
  9153                           ;Config register IDLOC2 @ 0x200002
  9154                           ;	unspecified, using default values
  9155  200002                     	org	2097154
  9156  200002  FF                 	db	255
  9157                           
  9158                           ;Config register IDLOC3 @ 0x200003
  9159                           ;	unspecified, using default values
  9160  200003                     	org	2097155
  9161  200003  FF                 	db	255
  9162                           
  9163                           ;Config register IDLOC4 @ 0x200004
  9164                           ;	unspecified, using default values
  9165  200004                     	org	2097156
  9166  200004  FF                 	db	255
  9167                           
  9168                           ;Config register IDLOC5 @ 0x200005
  9169                           ;	unspecified, using default values
  9170  200005                     	org	2097157
  9171  200005  FF                 	db	255
  9172                           
  9173                           ;Config register IDLOC6 @ 0x200006
  9174                           ;	unspecified, using default values
  9175  200006                     	org	2097158
  9176  200006  FF                 	db	255
  9177                           
  9178                           ;Config register IDLOC7 @ 0x200007
  9179                           ;	unspecified, using default values
  9180  200007                     	org	2097159
  9181  200007  FF                 	db	255
  9182                           
  9183                           	psect	config
  9184                           
  9185                           ; Padding undefined space
  9186  300000                     	org	3145728
  9187  300000  FF                 	db	255
  9188                           
  9189                           ;Config register CONFIG1H @ 0x300001
  9190                           ;	Oscillator Selection bits
  9191                           ;	OSC = HS, HS oscillator
  9192                           ;	Oscillator System Clock Switch Enable bit
  9193                           ;	OSCS = OFF, Oscillator system clock switch option is disabled (main oscillator is sour
      +                          ce)
  9194  300001                     	org	3145729
  9195  300001  22                 	db	34
  9196                           
  9197                           ;Config register CONFIG2L @ 0x300002
  9198                           ;	Power-up Timer Enable bit
  9199                           ;	PWRT = OFF, PWRT disabled
  9200                           ;	Brown-out Reset Enable bit
  9201                           ;	BOR = OFF, Brown-out Reset disabled
  9202                           ;	Brown-out Reset Voltage bits
  9203                           ;	BORV = 25, VBOR set to 2.5V
  9204  300002                     	org	3145730
  9205  300002  0D                 	db	13
  9206                           
  9207                           ;Config register CONFIG2H @ 0x300003
  9208                           ;	Watchdog Timer Enable bit
  9209                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  9210                           ;	Watchdog Timer Postscale Select bits
  9211                           ;	WDTPS = 128, 1:128
  9212  300003                     	org	3145731
  9213  300003  0E                 	db	14
  9214                           
  9215                           ;Config register CONFIG3L @ 0x300004
  9216                           ;	Processor Mode Select bits
  9217                           ;	MODE = MC, Microcontroller mode
  9218                           ;	External Bus Data Wait Enable bit
  9219                           ;	WAIT = OFF, Wait selections unavailable for table reads and table writes
  9220  300004                     	org	3145732
  9221  300004  83                 	db	131
  9222                           
  9223                           ;Config register CONFIG3H @ 0x300005
  9224                           ;	CCP2 Mux bit
  9225                           ;	CCP2MUX = OFF, CCP2 is multiplexed with RB3 in Extended Microcontroller, Microprocesso
      +                          r or Microprocessor with Boot Block mode. Or with RE7 in Microcontroller mode.
  9226  300005                     	org	3145733
  9227  300005  02                 	db	2
  9228                           
  9229                           ;Config register CONFIG4L @ 0x300006
  9230                           ;	Stack Full/Underflow Reset Enable bit
  9231                           ;	STVR = OFF, Stack full/underflow will not cause Reset
  9232                           ;	Low-Voltage ICSP Enable bit
  9233                           ;	LVP = OFF, Low-voltage ICSP disabled
  9234                           ;	Background Debugger Enable bit
  9235                           ;	DEBUG = 0x1, unprogrammed default
  9236  300006                     	org	3145734
  9237  300006  80                 	db	128
  9238                           
  9239                           ; Padding undefined space
  9240  300007                     	org	3145735
  9241  300007  FF                 	db	255
  9242                           
  9243                           ;Config register CONFIG5L @ 0x300008
  9244                           ;	Code Protection bit
  9245                           ;	CP0 = OFF, Block 0 (000200-003FFFh) not code-protected
  9246                           ;	Code Protection bit
  9247                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  9248                           ;	Code Protection bit
  9249                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  9250                           ;	Code Protection bit
  9251                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  9252                           ;	Code Protection bit
  9253                           ;	CP4 = OFF, Block 4 (010000-013FFFh) not code-protected
  9254                           ;	Code Protection bit
  9255                           ;	CP5 = OFF, Block 5 (014000-017FFFh) not code-protected
  9256                           ;	Code Protection bit
  9257                           ;	CP6 = OFF, Block 6 (018000-01BFFFh) not code-protected
  9258                           ;	Code Protection bit
  9259                           ;	CP7 = OFF, Block 7 (01C000-01FFFFh) not code-protected
  9260  300008                     	org	3145736
  9261  300008  FF                 	db	255
  9262                           
  9263                           ;Config register CONFIG5H @ 0x300009
  9264                           ;	Boot Block Code Protection bit
  9265                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code-protected
  9266                           ;	Data EEPROM Code Protection bit
  9267                           ;	CPD = OFF, Data EEPROM not code-protected
  9268  300009                     	org	3145737
  9269  300009  C0                 	db	192
  9270                           
  9271                           ;Config register CONFIG6L @ 0x30000A
  9272                           ;	Write Protection bit
  9273                           ;	WRT0 = OFF, Block 0 (000200-003FFFh) not write-protected
  9274                           ;	Write Protection bit
  9275                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  9276                           ;	Write Protection bit
  9277                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  9278                           ;	Write Protection bit
  9279                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  9280                           ;	Write Protection bit
  9281                           ;	WRT4 = OFF, Block 4 (010000-013FFFh) not write-protected
  9282                           ;	Write Protection bit
  9283                           ;	WRT5 = OFF, Block 5 (014000-017FFFh) not write-protected
  9284                           ;	Write Protection bit
  9285                           ;	WRT6 = OFF, Block 6 (018000-01BFFFh) not write-protected
  9286                           ;	Write Protection bit
  9287                           ;	WRT7 = OFF, Block 7 (01C000-01FFFFh) not write-protected
  9288  30000A                     	org	3145738
  9289  30000A  FF                 	db	255
  9290                           
  9291                           ;Config register CONFIG6H @ 0x30000B
  9292                           ;	Configuration Register Write Protection bit
  9293                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  9294                           ;	Boot Block Write Protection bit
  9295                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write-protected
  9296                           ;	Data EEPROM Write Protection bit
  9297                           ;	WRTD = OFF, Data EEPROM not write-protected
  9298  30000B                     	org	3145739
  9299  30000B  E0                 	db	224
  9300                           
  9301                           ;Config register CONFIG7L @ 0x30000C
  9302                           ;	Table Read Protection bit
  9303                           ;	EBTR0 = OFF, Block 0 (000200-003FFFh) not protected from table reads executed in other
      +                           blocks
  9304                           ;	Table Read Protection bit
  9305                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  9306                           ;	Table Read Protection bit
  9307                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  9308                           ;	Table Read Protection bit
  9309                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  9310                           ;	Table Read Protection bit
  9311                           ;	EBTR4 = OFF, Block 4 (010000-013FFFh) not protected from table reads executed in other
      +                           blocks
  9312                           ;	Table Read Protection bit
  9313                           ;	EBTR5 = OFF, Block 5 (014000-017FFFh) not protected from table reads executed in other
      +                           blocks
  9314                           ;	Table Read Protection bit
  9315                           ;	EBTR6 = OFF, Block 6 (018000-01BFFFh) not protected from table reads executed in other
      +                           blocks
  9316                           ;	Table Read Protection bit
  9317                           ;	EBTR7 = OFF, Block 7 (01C000-01FFFFh) not protected from table reads executed in other
      +                           blocks
  9318  30000C                     	org	3145740
  9319  30000C  FF                 	db	255
  9320                           
  9321                           ;Config register CONFIG7H @ 0x30000D
  9322                           ;	Boot Block Table Read Protection bit
  9323                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from table reads executed in ot
      +                          her blocks
  9324  30000D                     	org	3145741
  9325  30000D  40                 	db	64
  9326                           tosu	equ	0xFFF
  9327                           tosh	equ	0xFFE
  9328                           tosl	equ	0xFFD
  9329                           stkptr	equ	0xFFC
  9330                           pclatu	equ	0xFFB
  9331                           pclath	equ	0xFFA
  9332                           pcl	equ	0xFF9
  9333                           tblptru	equ	0xFF8
  9334                           tblptrh	equ	0xFF7
  9335                           tblptrl	equ	0xFF6
  9336                           tablat	equ	0xFF5
  9337                           prodh	equ	0xFF4
  9338                           prodl	equ	0xFF3
  9339                           indf0	equ	0xFEF
  9340                           postinc0	equ	0xFEE
  9341                           postdec0	equ	0xFED
  9342                           preinc0	equ	0xFEC
  9343                           plusw0	equ	0xFEB
  9344                           fsr0h	equ	0xFEA
  9345                           fsr0l	equ	0xFE9
  9346                           wreg	equ	0xFE8
  9347                           indf1	equ	0xFE7
  9348                           postinc1	equ	0xFE6
  9349                           postdec1	equ	0xFE5
  9350                           preinc1	equ	0xFE4
  9351                           plusw1	equ	0xFE3
  9352                           fsr1h	equ	0xFE2
  9353                           fsr1l	equ	0xFE1
  9354                           bsr	equ	0xFE0
  9355                           indf2	equ	0xFDF
  9356                           postinc2	equ	0xFDE
  9357                           postdec2	equ	0xFDD
  9358                           preinc2	equ	0xFDC
  9359                           plusw2	equ	0xFDB
  9360                           fsr2h	equ	0xFDA
  9361                           fsr2l	equ	0xFD9
  9362                           status	equ	0xFD8

Data Sizes:
    Strings     71
    Constant    0
    Data        0
    BSS         96
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     92      94
    BANK0           160     94     108
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_16(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_16(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(COMRAM[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(COMRAM[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), STR_5(CODE[3]), STR_4(CODE[11]), STR_3(CODE[12]), 
		 -> STR_2(CODE[21]), LCD_DISPLAY_DIGIT@s(BANK0[20]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), STR_5(CODE[3]), STR_4(CODE[11]), STR_3(CODE[12]), 
		 -> STR_2(CODE[21]), LCD_DISPLAY_DIGIT@s(BANK0[20]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_11(CODE[4]), STR_10(CODE[4]), STR_7(CODE[4]), STR_6(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_11(CODE[4]), STR_10(CODE[4]), STR_7(CODE[4]), STR_6(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> LCD_DISPLAY_DIGIT@s(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1302$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1302$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    LCD_DISPLAY@string	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_5(CODE[3]), STR_4(CODE[11]), STR_3(CODE[12]), STR_2(CODE[21]), 
		 -> LCD_DISPLAY_DIGIT@s(BANK0[20]), 


Critical Paths under _main in COMRAM

    ___xxtofl->_ADC_Read
    _LCD_INITIALIZE_4BIT->_LCD_INSTRUCTION_4BIT
    _LCD_DISPLAY_DIGIT->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _atoi->_isspace
    _LCD_DISPLAY->_LCD_DATA
    _LCD_20_LINE4->_LCD_INSTRUCTION_4BIT
    _LCD_20_LINE3->_LCD_INSTRUCTION_4BIT
    _LCD_20_LINE1->_LCD_INSTRUCTION_4BIT

Critical Paths under _main in BANK0

    _main->_LCD_DISPLAY_DIGIT
    _LCD_DISPLAY_DIGIT->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0   37346
                                             84 COMRAM     8     8      0
                           _ADC_Init
                           _ADC_Read
                       _LCD_20_LINE1
                       _LCD_20_LINE3
                       _LCD_20_LINE4
                        _LCD_DISPLAY
                  _LCD_DISPLAY_DIGIT
                _LCD_INITIALIZE_4BIT
                     _LCD_SETUP_4BIT
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              8 COMRAM    14    10      4
                           _ADC_Read (ARG)
 ---------------------------------------------------------------------------------
 (1) _LCD_SETUP_4BIT                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_INITIALIZE_4BIT                                  0     0      0     567
               _LCD_INSTRUCTION_4BIT
 ---------------------------------------------------------------------------------
 (1) _LCD_DISPLAY_DIGIT                                   26    22      4   29804
                                             70 BANK0     24    20      4
                        _LCD_DISPLAY
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             23    15      8   28180
                                             71 COMRAM    13    13      0
                                             62 BANK0      8     0      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   27823
                                             69 COMRAM     2     2      0
                                             56 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           44    38      6   27451
                                             57 COMRAM    12    12      0
                                             50 BANK0      6     0      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              62    55      7   22296
                                             45 COMRAM    12     5      7
                                              0 BANK0     50    50      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              6     4      2     920
                                              6 COMRAM     6     4      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3241
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     490
                                             25 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     457
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    2889
                                             25 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    2808
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     790
                                             25 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    2007
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _atoi                                                10     8      2    1080
                                              7 COMRAM    10     8      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _LCD_DISPLAY                                          8     6      2    1400
                                             22 COMRAM     8     6      2
                           _LCD_DATA
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _LCD_DATA                                            22    20      2     665
                                              0 COMRAM    22    20      2
 ---------------------------------------------------------------------------------
 (1) _LCD_20_LINE4                                         0     0      0     567
               _LCD_INSTRUCTION_4BIT
 ---------------------------------------------------------------------------------
 (1) _LCD_20_LINE3                                         0     0      0     567
               _LCD_INSTRUCTION_4BIT
 ---------------------------------------------------------------------------------
 (1) _LCD_20_LINE1                                         0     0      0     567
               _LCD_INSTRUCTION_4BIT
 ---------------------------------------------------------------------------------
 (2) _LCD_INSTRUCTION_4BIT                                20    20      0     567
                                              0 COMRAM    20    20      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             8     6      2     121
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _ADC_Read
   _LCD_20_LINE1
     _LCD_INSTRUCTION_4BIT
   _LCD_20_LINE3
     _LCD_INSTRUCTION_4BIT
   _LCD_20_LINE4
     _LCD_INSTRUCTION_4BIT
   _LCD_DISPLAY
     _LCD_DATA
     _strlen
   _LCD_DISPLAY_DIGIT
     _LCD_DISPLAY
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
             ___flmul
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
           _isdigit
           _isupper
           _strncmp
           _tolower
   _LCD_INITIALIZE_4BIT
     _LCD_INSTRUCTION_4BIT
   _LCD_SETUP_4BIT
   ___flmul
   ___fltol
   ___xxtofl
     _ADC_Read (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EFF      0       0      48        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     5E      6C       5       67.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5C      5E       1       98.9%
BITBIGSFRhhhh       32      0       0      34        0.0%
BITBIGSFRllhlll     15      0       0      45        0.0%
BITBIGSFRllhh       10      0       0      40        0.0%
BITBIGSFRlh          E      0       0      39        0.0%
BITBIGSFRlll         B      0       0      46        0.0%
BITBIGSFRllhllh      9      0       0      42        0.0%
BITBIGSFRhhhl        6      0       0      35        0.0%
BITBIGSFRllhlll      4      0       0      43        0.0%
BITBIGSFRllhlh       4      0       0      41        0.0%
BITBIGSFRhhll        2      0       0      37        0.0%
BITBIGSFRhl          2      0       0      38        0.0%
BITBIGSFRhhlhh       1      0       0      36        0.0%
BITBIGSFRllhlll      1      0       0      44        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     11A      47        0.0%
DATA                 0      0     11A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Fri Nov 11 21:45:25 2022

                   ___fldiv@aexp 0019                     ___fldiv@bexp 0018  
                   ___fldiv@sign 0011                               l72 309E  
                             l81 32E2                               l82 3322  
                             l74 315C                               l75 319C  
                             l67 41BC                               l79 3224  
                             l97 424C                               _GO 007E11  
                   ___awdiv@sign 0006              ___wmul@multiplicand 0003  
                            l103 3E30                              l112 4264  
                            l121 4254                              l106 4194  
                            l141 3D8E                              l118 425C  
                            l144 3DBA                              l138 41E4  
                            l147 420A                              l412 3650  
                            l421 4128                              l406 3D1E  
                            l417 3696                              l444 3592  
                            l701 1F32                              l702 1F20  
                            l391 3C74                              l378 3B02  
                            l802 2EA6                              l731 2A9C  
                            l740 2AE2                              l717 4074  
                            l805 3002                              l742 2B5A  
                            l734 2A60                              l743 2B48  
                            l903 1306                              l816 2F9A  
                            l729 2C3C                              l761 253E  
                            l825 3F46                              l809 2F3E  
                            l770 27AC                              l771 279A  
                            l675 1D48                              l931 1746  
                            l692 1E62                              l684 2018  
                            l676 1D36                              l765 28A2  
                            l677 1CFC                              l871 3BC4  
                            l768 2734                              l778 2864  
                            l866 3B48                              l869 3B8A  
                            l973 2478                              l887 1B58  
                            l984 3E8E                              l985 3E96  
                            l978 23B6                              l995 3892  
                            _pad 3B04                     ___awmod@sign 0006  
                            wreg 000FE8                     ___flmul@aexp 0012  
                   ___flmul@bexp 0013                     ___flmul@sign 000D  
                   ___flmul@temp 0018                     ___flmul@prod 0014  
                   ___fltol@exp1 000A                             l1021 348C  
                           l1030 2D92                             l1103 4026  
                           l1018 3484                             l1106 402E  
                           l1027 2E4E                             l1051 40F0  
                           l1037 4160                             l1045 3F98  
                           l3001 24C6                             l1066 3A3E  
                           l1074 40B8                             l3011 24F6  
                           l3003 24CC                             l1083 3EF4  
                           l3101 2832                             l3021 252E  
                           l3013 24F8                             l3005 24DC  
                           l1077 4266                             l1093 3974  
                           l3111 2888                             l3103 284C  
                           l3031 257E                             l3023 254E  
                           l3015 2508                             l3007 24E2  
                           l1089 3FE8                             l3201 3C6C  
                           l3105 2868                             l3113 288E  
                           l3041 25CE                             l3033 2588  
                           l3025 255E                             l3017 2518  
                           l3009 24E8                             l3121 4040  
                           l4001 2F70                             l3131 3A5A  
                           l3211 3CE2                             l3115 2892  
                           l3107 2878                             l3051 2610  
                           l3043 25DA                             l3035 259E  
                           l3019 2528                             l4011 2FAE  
                           l4003 2F7C                             l3141 3A80  
                           l3133 3A5E                             l3125 3A40  
                           l3213 3CF2                             l3205 3C76  
                           l3221 3594                             l3109 2886  
                           l3061 2672                             l3053 2620  
                           l3045 25E8                             l3037 25AA  
                           l3029 2572                             l3301 3B34  
                           l4013 2FD2                             l4005 2F8A  
                           l4103 33CC                             l3151 3AB6  
                           l3143 3A92                             l3135 3A6C  
                           l3127 3A44                             l3215 3D16  
                           l3207 3CA4                             l3231 361E  
                           l3223 35C2                             l3071 271A  
                           l3063 268E                             l3055 263A  
                           l3047 25F4                             l3039 25C2  
                           l3119 4030                             l3311 3B98  
                           l3303 3B40                             l4015 2FE2  
                           l4007 2FA8                             l3153 3ACC  
                           l3145 3A9A                             l3161 3AE2  
                           l3137 3A74                             l3129 3A52  
                           l3217 3D1C                             l3209 3CB4  
                           l3233 3630                             l3225 35D2  
                           l3081 2756                             l3073 2724  
                           l3065 26B8                             l3057 264A  
                           l3049 2604                             l3321 37F4  
                           l3313 3BAC                             l3305 3B54  
                           l3401 0F64                             l4017 2FF0  
                           l4009 2FAA                             l3163 3AF2  
                           l3155 3AD4                             l3147 3AA2  
                           l3139 3A78                             l3171 3BCA  
                           l3235 363E                             l3227 3600  
                           l3091 27C8                             l3083 2764  
                           l3075 2732                             l3067 26EE  
                           l3059 2666                             l3243 40F2  
                           l3251 348E                             l3331 3846  
                           l3323 381C                             l2611 399A  
                           l3307 3B68                             l3411 0FB0  
                           l3403 0F72                             l4019 2FF2  
                           l4051 3698                             l2621 3F9A  
                           l3165 3AFA                             l3157 3AD6  
                           l3149 3AB0                             l3181 3BFA  
                           l3173 3BD8                             l3237 368E  
                           l3229 3610                             l3093 27D6  
                           l3085 2792                             l3077 2744  
                           l3069 26FC                             l3245 4108  
                           l2701 1C8A                             l3261 34E4  
                           l3253 34A4                             l3325 3828  
                           l3317 3796                             l2613 39A4  
                           l3309 3B6C                             l3341 3EA8  
                           l3501 1324                             l3421 0FF6  
                           l3413 0FC2                             l3405 0F7A  
                           l4061 36C2                             l4053 369A  
                           l2623 3FA6                             l3159 3ADC  
                           l3191 3C40                             l3183 3C0C  
                           l3175 3BE0                             l3239 3694  
                           l3095 2800                             l3079 2752  
                           l3247 4118                             l2711 1C9E  
                           l2703 1C8E                             l2631 1B5A  
                           l3263 34F4                             l3335 388A  
                           l3319 37B6                             l2615 39C2  
                           l2607 3976                             l3343 3FEA  
                           l3503 1336                             l3511 1394  
                           l3423 0FFA                             l3415 0FD0  
                           l3407 0F9E                             l4071 373E  
                           l4063 36F6                             l4055 369E  
                           l2625 3FAA                             l3193 3C48  
                           l3185 3C14                             l3177 3BE4  
                           l3169 3BC6                             l3089 27BC  
                           l3097 2804                             l2801 1F42  
                           l2721 1D16                             l2713 1CC8  
                           l2705 1C92                             l2641 1B96  
                           l2633 1B66                             l3273 351E  
                           l3265 34F8                             l3257 34B8  
                           l3329 3834                             l3361 2CD6  
                           l3353 2C3E                             l2617 39F8  
                           l2609 3988                             l3601 184C  
                           l3521 13D2                             l3513 139C  
                           l3505 1352                             l3441 1098  
                           l3433 102A                             l3425 0FFE  
                           l3417 0FE2                             l3409 0FA8  
                           l4081 3782                             l4073 374A  
                           l4065 372A                             l4057 36A6  
                           l2627 3FDC                             l3195 3C4E  
                           l3187 3C1C                             l3179 3BF2  
                           l3099 281E                             l2811 1FA8  
                           l2803 1F4E                             l2731 1D56  
                           l2723 1D1A                             l2715 1CE4  
                           l2707 1C96                             l2651 1BC6  
                           l2643 1BA6                             l2635 1B74  
                           l3291 3582                             l3283 3546  
                           l3275 3528                             l3267 3506  
                           l3259 34E2                             l3371 2DF2  
                           l3355 2C5E                             l3339 3E98  
                           l3347 3FEA                             l3603 1858  
                           l3611 1878                             l3523 13E4  
                           l3531 1424                             l3515 13AE  
                           l3507 1388                             l3451 10E6  
                           l3435 1056                             l3419 0FEE  
                           l3427 1004                             l4075 375E  
                           l4067 372E                             l4059 36AA  
                           l3381 412A                             l3189 3C2A  
                           l3197 3C54                             l2901 29B6  
                           l2821 1FF0                             l2813 1FB8  
                           l2805 1F5C                             l2741 1D98  
                           l2733 1D66                             l2725 1D28  
                           l2717 1CF4                             l2709 1C9A  
                           l2661 1BF0                             l2653 1BD8  
                           l2645 1BA8                             l2637 1B76  
                           l3285 3552                             l3277 3532  
                           l3373 2E06                             l3365 2D46  
                           l3357 2CB4                             l3349 4018  
                           l3621 18FE                             l3613 188A  
                           l3605 1868                             l3541 150C  
                           l3533 142C                             l3525 13F2  
                           l3517 13C0                             l3509 1390  
                           l3453 1112                             l3437 1074  
                           l3445 10C0                             l4077 3762  
                           l4069 373A                             l3391 3F8E  
                           l3711 335C                             l3703 3324  
                           l3199 3C64                             l2911 29F4  
                           l2903 29C6                             l2823 1FF2  
                           l2815 1FD8                             l2807 1F96  
                           l2751 1DC6                             l2743 1DA6  
                           l2727 1D2A                             l2719 1D0A  
                           l2663 1C00                             l2671 1C2A  
                           l2655 1BDA                             l2639 1B86  
                           l2647 1BB0                             l3287 3562  
                           l3375 2E2E                             l3367 2D82  
                           l3359 2CC8                             l3295 3B04  
                           l3631 1978                             l3623 1932  
                           l3615 189C                             l3607 186C  
                           l3551 15CA                             l3543 1540  
                           l3535 143C                             l3527 140A  
                           l3519 13CE                             l3471 11D2  
                           l3455 1130                             l3463 114E  
                           l3439 108E                             l4079 376E  
                           l3393 3F92                             l3385 3F48  
                           l3713 339A                             l3705 3338  
                           l2921 2A3C                             l2913 2A04  
                           l2905 29C6                             l2825 1FF8  
                           l2817 1FDC                             l2809 1F98  
                           l2761 1E32                             l2753 1DD0  
                           l2745 1DB2                             l2737 1D7A  
                           l2729 1D34                             l2681 1C62  
                           l2673 1C3A                             l2665 1C10  
                           l2657 1BE0                             l2649 1BC0  
                           l3289 3572                             l3377 2E3E  
                           l3369 2DB6                             l2833 4076  
                           l3297 3B12                             l2841 40BA  
                           l3641 19BC                             l3633 198A  
                           l3625 193A                             l3617 18A0  
                           l3609 1872                             l3561 1666  
                           l3553 15E0                             l3537 1450  
                           l3545 1546                             l3529 141C  
                           l3473 11D8                             l3481 12A0  
                           l3465 1168                             l3387 3F4C  
                           l3715 33A2                             l2931 2A8A  
                           l2923 2A50                             l2915 2A14  
                           l2851 28A4                             l2827 2006  
                           l2819 1FEA                             l2763 1E42  
                           l2747 1DB6                             l2739 1D8A  
                           l2755 1DD6                             l2691 1C76  
                           l2683 1C66                             l2675 1C4C  
                           l2667 1C20                             l2659 1BEE  
                           l2835 4082                             l3299 3B26  
                           l3651 19FC                             l3643 19CE  
                           l3635 1998                             l3619 18A6  
                           l3627 193E                             l3563 16BC  
                           l3571 170E                             l3555 1612  
                           l3547 1564                             l3539 14B4  
                           l3491 12E0                             l3483 12B0  
                           l3475 1232                             l3811 2352  
                           l3803 22B8                             l3901 31B2  
                           l2845 41E6                             l3389 3F60  
                           l3725 341C                             l3717 33AA  
                           l3709 333C                             l2941 2AD2  
                           l2933 2A9A                             l2925 2A5E  
                           l2917 2A24                             l2909 29DA  
                           l2861 28E0                             l2853 28B0  
                           l2829 2008                             l2781 1EC4  
                           l2773 1E9C                             l2757 1DFC  
                           l2765 1E52                             l2749 1DC4  
                           l2693 1C7A                             l2685 1C6A  
                           l2677 1C5A                             l2669 1C22  
                           l2837 4094                             l3661 1A44  
                           l3653 1A04                             l3645 19D6  
                           l3637 19A8                             l3629 195C  
                           l3581 17C6                             l3573 171E  
                           l3565 16C2                             l3557 1622  
                           l3549 1598                             l3493 12FA  
                           l3485 12B4                             l3477 1266  
                           l3469 119E                             l3397 0F4A  
                           l3741 38CA                             l3821 23F2  
                           l3813 2386                             l3805 22E6  
                           ?_pad 0011                             l3911 3264  
                           l3903 3204                             l2847 4202  
                           l3727 3456                             l3719 33E2  
                           l2951 2B12                             l2943 2AE0  
                           l2935 2AAC                             l2927 2A6A  
                           l2919 2A2C                             l2871 2910  
                           l2863 28F0                             l2855 28BE  
                           l2783 1ECC                             l2775 1EA6  
                           l2767 1E78                             l2759 1E30  
                           l2791 1EF0                             l2695 1C7E  
                           l2687 1C6E                             l2679 1C5E  
                           l2839 4098                             l3671 1A9A  
                           l3663 1A60                             l3655 1A0C  
                           l3647 19E6                             l3639 19AC  
                           l3583 17D4                             l3591 1810  
                           l3575 1732                             l3567 16F6  
                           l3559 1632                             l3487 12C6  
                           l3495 1312                             l3479 126E  
                           l3399 0F54                             l3751 394E  
                           l3743 38D8                             l3735 3894  
                           l3831 2430                             l3823 2400  
                           l3921 32C2                             l3913 3268  
                           l3905 3208                             l3729 3468  
                           l2961 2B84                             l2953 2B40  
                           l2937 2AC2                             l2945 2AF2  
                           l2929 2A88                             l2881 2946  
                           l2873 2916                             l2865 28F2  
                           l2857 28C0                             l2793 1EF4  
                           l2785 1ED0                             l2777 1EB4  
                           l2769 1E88                             l2697 1C82  
                           l2689 1C72                             l3681 1AD6  
                           l3673 1AA0                             l3665 1A68  
                           l3657 1A18                             l3649 19EE  
                           l3593 1824                             l3585 17E8  
                           l3577 173E                             l3569 170A  
                           l3489 12D8                             l3745 38F0  
                           l3737 38BE                             l3825 2414  
                           l3809 2310                             l3761 2062  
                           l3923 32C6                             l3907 3252  
                           l3843 3006                             l3931 3DD0  
                           l2971 2BFC                             l2963 2BAE  
                           l2947 2B00                             l2939 2AC8  
                           l2891 2986                             l2883 2956  
                           l2875 2924                             l2859 28D0  
                           l2867 28FA                             l2795 1F02  
                           l2787 1EE0                             l2779 1EB6  
                           l2699 1C86                             l3691 1B1A  
                           l3683 1ADC                             l3675 1AB2  
                           l3659 1A1E                             l3667 1A6E  
                           l3595 1832                             l3587 17FA  
                           l3579 1762                             l3747 3910  
                           l3819 23CA                             l3771 20CC  
                           l3763 2066                             l3835 243E  
                           l3755 201A                             l3925 3310  
                           l3909 3262                             l3861 30CC  
                           l3845 300A                             l3933 3DDC  
                           l2981 2C32                             l2973 2C18  
                           l2957 2B6A                             l2965 2BB2  
                           l2949 2B04                             l2893 2996  
                           l2885 2958                             l2877 2926  
                           l2869 290A                             l2797 1F18  
                           l2789 1EE2                             l3693 1B22  
                           l3677 1ABE                             l3669 1A80  
                           l3597 1842                             l3589 1808  
                           l3749 3922                             l3837 2466  
                           l3829 2422                             l3773 2106  
                           l3765 208E                             l3781 2176  
                           l3757 2042                             l3941 3F06  
                           l3927 3320                             l3919 3270  
                           l3863 30DC                             l3855 302C  
                           l3847 301E                             l3935 3E16  
                           l2975 2C1C                             l2967 2BCC  
                           l2959 2B76                             l2895 299E  
                           l2879 2936                             l2887 2960  
                           l2991 2486                             l3695 1B32  
                           l3687 1AE2                             l3679 1AC6  
                           l3599 1846                             l3791 2222  
                           l3783 219A                             l3775 2126  
                           l3767 2096                             l3759 2050  
                           l3943 3F0E                             l3951 4196  
                           l3961 4256                             l3881 319A  
                           l3873 30EA                             l3865 30DE  
                           l3857 307E                             l3849 3024  
                           l3937 3E1A                             l3929 3DBC  
                           l2977 2C2A                             l2969 2BE2  
                           l2897 29A2                             l2889 2970  
                           l2993 2494                             l3697 1B38  
                           l3689 1B0E                             l3793 2234  
                           l3785 21AA                             l3769 20A4  
                           l3945 3F16                             l3953 422E  
                           l3971 3D9C                             l3891 31A0  
                           l3963 424E                             l3875 313C  
                           l3867 30E2                             l3859 3082  
                           l2979 2C30                             l2995 2496  
                           l3795 224E                             l3787 21DE  
                           l3779 2134                             l3883 3E32  
                           l3947 3F34                             l3939 3EF6  
                           l3955 4162                             l3965 41BE  
                           l3973 3DB2                             l3893 31A4  
                           l3877 3140                             l2997 24A6  
                           l2989 247A                             l3797 225C  
                           l3789 21EE                             l3885 3E3A  
                           l3957 4188                             l3981 2E70  
                           l3967 41DC                             l3895 31AA  
                           l3959 425E                             l3879 318A  
                           l2999 24B6                             l3799 228C  
                           l3887 3E48                             l3991 2EE8  
                           l3983 2EB6                             l3969 3D20  
                           l3889 3E6E                             l3993 2EF4  
                           l3985 2ECC                             l3977 2E52  
                           l3995 2F26                             l3979 2E62  
                           l3997 2F28                             l3989 2EE0  
                           l3999 2F34                             _ADON 007E10  
                           STR_1 0F2D                             STR_2 0F01  
                           STR_3 0F16                             STR_4 0F22  
                           STR_5 0F45                             STR_6 0F32  
                           STR_7 0F3A                             u3000 1F18  
                           u3001 1F14                             u3010 1F2E  
                           u3011 1F2A                             u3020 1F42  
                           u3100 40B8                             u3021 1F3E  
                           u3101 40B4                             u3030 1F5C  
                           u3110 40EA                             u3031 1F58  
                           u3111 40E4                             u3200 29C6  
                           u3040 1F96                             u3120 40EC  
                           u3201 29C2                             u3041 1F92  
                           u3210 2A3C                             u3130 28BE  
                           u3050 1FA8                             u4010 2D42  
                           u3211 2A38                             u3131 28BA  
                           u3051 1FA4                             u4011 2D3E  
                           u4100 3F8E                             u3300 2B56  
                           u3220 2A5E                             u3140 28D0  
                           u3060 1FB8                             u4020 2D66  
                           u4101 3F8A                             u3301 2B52  
                           u3221 2A5A                             u3141 28CC  
                           u3061 1FB4                             u4005 2CEA  
                           u3310 2B6A                             u3230 2A88  
                           u3150 28E0                             u3070 1FD8  
                           u4030 2D82                             u4006 2CF4  
                           u4110 0F72                             u3311 2B66  
                           u3231 2A84                             u3151 28DC  
                           u3071 1FD4                             u4031 2D7E  
                           u4007 2D04                             u4111 0F6E  
                           u3320 2B84                             u3240 2AAC  
                           u3160 2924                             u3400 2508  
                           u3080 1FEA                             u4040 2DD6  
                           u4200 122E                             u4120 0FC2  
                           u3321 2B80                             u3241 2AA8  
                           u3161 2920                             u3401 2504  
                           u3081 1FE6                             u4025 2D5C  
                           u4201 122A                             u4121 0FBE  
                           u3330 2BCC                             u3250 2AC2  
                           u3170 2936                             u3410 2518  
                           u3090 2006                             u4050 2DF2  
                           u4210 12A0                             u4130 0FD0  
                           u3331 2BC8                             u3251 2ABE  
                           u3171 2932                             u3411 2514  
                           u3091 2002                             u4051 2DEE  
                           u4211 129C                             u4131 0FCC  
                           u5100 3D4A                             u2700 3FDC  
                           u3340 2BFC                             u3260 2AE0  
                           u3180 2946                             u3500 27BC  
                           u3420 254E                             u4060 2E2E  
                           u4300 13C0                             u4220 12C6  
                           u4140 0FE2                             u5101 3D42  
                           u5005 324A                             u2701 3FD8  
                           u3341 2BF8                             u3261 2ADC  
                           u3181 2942                             u3501 27B8  
                           u3421 254A                             u4061 2E2A  
                           u4045 2DCC                             u4301 13BC  
                           u4221 12C2                             u4141 0FDE  
                           u5030 32E2                             u5014 3286  
                           u5006 324C                             u4070 415A  
                           u3350 2C2A                             u3270 2B00  
                           u3190 2986                             u3510 27D6  
                           u3430 255E                             u2710 1B74  
                           u4310 13CE                             u4230 12D8  
                           u4150 102A                             u5031 32DE  
                           u5015 3282                             u4071 4154  
                           u3351 2C26                             u3271 2AFC  
                           u3191 2982                             u3511 27D2  
                           u3431 255A                             u2711 1B70  
                           u4311 13CA                             u4231 12D4  
                           u4151 1026                             u5024 329C  
                           u4080 415C                             u3600 3AF2  
                           u3280 2B12                             u3520 281E  
                           u3440 26D8                             u3360 2494  
                           u2800 1CC8                             u2720 1B86  
                           u4400 170A                             u4320 13E4  
                           u4240 12FA                             u4160 1056  
                           u5200 2F22                             u5025 3298  
                           u3601 3AEE                             u3281 2B0E  
                           u3521 281A                             u3361 2490  
                           u2801 1CC4                             u2721 1B82  
                           u4401 1706                             u4321 13E0  
                           u4241 12F6                             u4161 1052  
                           u5201 2F1E                             u5130 3D72  
                           u4090 3F60                             u3610 3BD8  
                           u3290 2B40                             u3530 284C  
                           u3450 2732                             u3370 24A6  
                           u2810 1CE0                             u2730 1B96  
                           u2650 3988                             u4410 1732  
                           u4330 13F2                             u4250 1320  
                           u4170 10E6                             u5210 2F6C  
                           u5131 3D6A                             u4091 3F5C  
                           u3611 3BD4                             u3291 2B3C  
                           u3531 2848                             u3451 272E  
                           u3371 24A2                             u2811 1CDA  
                           u2731 1B92                             u2651 3984  
                           u4411 172E                             u4331 13EE  
                           u4251 131C                             u4171 10E2  
                           u5211 2F68                             u5124 3D5A  
                           u3620 3BF2                             u3700 35C2  
                           u3540 2886                             u3460 2752  
                           u3380 24B6                             u2900 1DC4  
                           u2820 1CE2                             u2740 1BD8  
                           u2660 399A                             u4500 1978  
                           u4420 17D4                             u4340 141C  
                           u4260 1336                             u4180 1112  
                           u5220 2F8A                             u5125 3D56  
                           u5045 32EA                             u3621 3BEE  
                           u3701 35BE                             u3541 2882  
                           u3461 274E                             u3445 26CE  
                           u3381 24B2                             u2901 1DC0  
                           u2741 1BD4                             u2661 3996  
                           u4501 1974                             u4421 17D0  
                           u4341 1418                             u4261 1332  
                           u4181 110E                             u5221 2F86  
                           u5118 3D4C                             u5046 32EC  
                           u3550 3A52                             u3630 3C0C  
                           u3710 3600                             u3470 2764  
                           u3390 24F6                             u2910 1DFC  
                           u2830 1D0A                             u2750 1BEE  
                           u2670 39C2                             u4510 198A  
                           u4430 17E8                             u4350 1564  
                           u4270 1352                             u4190 119A  
                           u5230 2F9A                             u5055 32F4  
                           u3551 3A4E                             u3631 3C08  
                           u3711 35FC                             u3471 2760  
                           u3391 24F2                             u2911 1DF8  
                           u2831 1D06                             u2751 1BEA  
                           u2671 39BE                             u4511 1986  
                           u4431 17E4                             u4351 1560  
                           u4271 134E                             u4191 1196  
                           u5231 2F96                             u5160 3D9C  
                           u5056 32F6                             u5080 3E12  
                           u4600 3396                             u3560 3A6C  
                           u3640 3C2A                             u3720 361E  
                           u3480 2792                             u2920 1E42  
                           u2840 1D28                             u2760 1C00  
                           u3800 3542                             u2680 39F8  
                           u4520 1998                             u4440 17FA  
                           u4360 15CA                             u4280 1388  
                           u5240 2FA8                             u5161 3D98  
                           u5065 32FE                             u4601 3392  
                           u3561 3A68                             u3641 3C26  
                           u3721 361A                             u3481 278E  
                           u2921 1E3E                             u2841 1D24  
                           u2761 1BFC                             u3801 353E  
                           u2681 39F4                             u4521 1994  
                           u4441 17F6                             u4361 15C6  
                           u4281 1384                             u5241 2FA4  
                           u5154 3D82                             u5066 3300  
                           u2690 3FCC                             u5090 3E30  
                           u4610 3456                             u3570 3A92  
                           u3650 3C40                             u3730 363E  
                           u3490 27A8                             u2930 1E78  
                           u2850 1D48                             u2770 1C10  
                           u3810 3562                             u4530 19CE  
                           u4450 1808                             u4370 1612  
                           u4290 13AE                             u5250 2FE2  
                           u5170 2E62                             u5155 3D7E  
                           u5075 3308                             u5307 3190  
                           u5091 3E2C                             u4611 3452  
                           u3571 3A8E                             u3651 3C3C  
                           u3731 363A                             u3491 27A4  
                           u2931 1E74                             u2851 1D44  
                           u2771 1C0C                             u3811 355E  
                           u4531 19CA                             u4451 1804  
                           u4371 160E                             u4291 13AA  
                           u5251 2FDE                             u5171 2E5E  
                           u5148 3D74                             u5076 330A  
                           u4620 3468                             u3580 3AB0  
                           u3660 3C64                             u3740 368E  
                           u2940 1E88                             u2860 1D56  
                           u2780 1C4C                             u3820 3572  
                           u3900 3846                             u4540 19FC  
                           u4460 1824                             u4380 1622  
                           u4700 20CC                             u5260 2FF0  
                           u5180 2E70                             u5317 3258  
                           u4621 3464                             u3581 3AAC  
                           u3661 3C60                             u3741 368A  
                           u2941 1E84                             u2861 1D52  
                           u2781 1C48                             u3821 356E  
                           u3901 3842                             u4541 19F8  
                           u4461 1820                             u4381 161E  
                           u4701 20C8                             u5261 2FEC  
                           u5181 2E6C                             u3590 3ACC  
                           u3670 3CA4                             u3750 4108  
                           u2950 1EB4                             u2870 1D66  
                           u2790 1C5A                             u3830 3B12  
                           u4550 1A80                             u4470 1832  
                           u4390 16BC                             u4630 38BE  
                           u4710 2176                             u5190 2ECC  
                           u5327 3316                             u5087 3E08  
                           u3591 3AC8                             u3671 3CA0  
                           u3751 4104                             u2951 1EB0  
                           u2871 1D62                             u2791 1C56  
                           u3831 3B0E                             u4551 1A7C  
                           u4471 182E                             u4391 16B8  
                           u4631 38BA                             u4711 2172  
                           u5191 2EC8                             u3680 3CE2  
                           u2960 1EC4                             u2880 1D98  
                           u3760 34A4                             u3920 3880  
                           u3840 3B34                             u4560 1A9A  
                           u4480 188A                             u4640 38F0  
                           u4720 21AA                             u2697 3FC2  
                           u3681 3CDE                             u2961 1EC0  
                           u2881 1D94                             u3761 34A0  
                           u3921 387A                             u3841 3B30  
                           u4561 1A96                             u4481 1886  
                           u4641 38EC                             u4721 21A6  
                           u4810 309E                             u3690 3D16  
                           u2970 1EE0                             u2890 1DA6  
                           u3770 34D8                             u3930 3882  
                           u3850 3B8A                             u4570 1AB2  
                           u4490 195C                             u4650 3910  
                           u4730 21EE                             u4811 309A  
                           u3691 3D12                             u2971 1EDC  
                           u2891 1DA2                             u3915 3858  
                           u3851 3B86                             u4571 1AAE  
                           u4491 1958                             u4651 390C  
                           u4731 21EA                             u4804 3058  
                           u2980 1EF0                             u3780 3506  
                           u3860 3B98                             u3940 3EE2  
                           u4580 1B0E                             u4660 3922  
                           u4740 2234                             u4805 3054  
                           u2981 1EEC                             u3781 3502  
                           u3861 3B94                             u4581 1B0A  
                           u4661 391E                             u4741 2230  
                           u4590 335C                             u2990 1F02  
                           u3790 351A                             u3870 37D6  
                           u3950 3EF4                             u4670 394E  
                           u4750 22E6                             u4591 3358  
                           u2991 1EFE                             u3791 3516  
                           u3775 34CE                             u3951 3EF0  
                           u4671 394A                             u4751 22E2  
                           u3880 37F4                             u3960 4018  
                           u4760 2352                             u4680 2042  
                           u4905 316E                             u5297 30D2  
                           u4825 30A6                             u3881 37F0  
                           u3961 4014                             u4761 234E  
                           u4681 203E                             u4906 3170  
                           u4826 30A8                             u3890 381C  
                           u3970 2C86                             u4770 23F2  
                           u4690 208E                             u4930 3E8E  
                           u4915 3178                             u4835 30B0  
                           u3891 3818                             u3875 37CC  
                           u3947 3ED8                             u4771 23EE  
                           u4691 208A                             u4931 3E8A  
                           u4916 317A                             u4836 30B2  
                           u4780 301E                             u3980 2CB4  
                           u4925 3182                             u4845 30BA  
                           u4781 301A                             u3981 2CB0  
                           u4926 3184                             u4846 30BC  
                           u3990 2CD6                             u4855 30C4  
                           u3991 2CD2                             u3975 2C7C  
                           u4960 3224                             u4944 31C8  
                           u4880 315C                             u4864 3100  
                           u4856 30C6                             u4961 3220  
                           u4945 31C4                             u4881 3158  
                           u4865 30FC                             u4954 31DE  
                           u4874 3116                             u4794 3042  
                           u4955 31DA                             u4875 3112  
                           u4795 303E                             u4975 322C  
                           u4895 3164                             u4976 322E  
                           u4896 3166                             u4985 3236  
                           u4986 3238                             u4995 3240  
                           u4996 3242                             _dbuf 0100  
                           _atoi 3324                             _main 3698  
                           _prec 00CA                             _nout 00C6  
                           pad@i 0018             _LCD_INSTRUCTION_4BIT 319E  
                           pad@p 0015                             fsr1h 000FE2  
                           fsr2h 000FDA                             indf1 000FE7  
                           indf2 000FDF                             fsr1l 000FE1  
                           pad@w 001A                             fsr2l 000FD9  
               __end_of_ADC_Init 41E6                 __end_of_ADC_Read 3DBC  
                  ___fpclassifyf 3796                             prodh 000FF4  
                           prodl 000FF3                             start 0002  
                ___fldiv@new_exp 0012                      main@voltage 0055  
                   ___param_bank 000000                 __end_of_LCD_DATA 319E  
                          ??_pad 0017                    ___fltol@sign1 0009  
                          ?_atoi 0008                  __end_of___fladd 201A  
                          ?_main 0001                  __end_of___fldiv 2C3E  
                __end_of___awdiv 3B04                  __end_of___flneg 412A  
                          STR_10 0F36                            STR_11 0F3E  
                          STR_14 0F42                            STR_16 0F42  
                __end_of___awmod 3C76                  __end_of___flmul 28A4  
                __end_of___flsub 4076                  __end_of___fltol 3594  
                ___awdiv@divisor 0003                  ___awdiv@counter 0005  
                   vfpfcnvrt@fmt 0094                            _PORTD 000F83  
                          _TRISD 000F95                            _flags 005D  
                          _fputc 3976                            _fputs 4076  
                __end_of_isdigit 4162                            atoi@n 0010  
                          pad@fp 0011                            atoi@s 0008  
                          _width 00C8                            _putch 4266  
                __end_of_isspace 3F9A                  __end_of_isupper 40F2  
                          tablat 000FF5            ?_LCD_INSTRUCTION_4BIT 0001  
                          status 000FD8                  __end_of_sprintf 3F48  
                 ?___fpclassifyf 0001                  __end_of_tolower 4030  
                __end_of_strncmp 3976             __end_of_LCD_20_LINE1 4266  
           __end_of_LCD_20_LINE3 425E             __end_of_LCD_20_LINE4 4256  
                __initialization 420C                     __end_of_atoi 348E  
                   __end_of_main 3796                           ??_atoi 000A  
                         ??_main 0055                    __activetblptr 000003  
                         _ADCON0 000FC2                           ?_fputc 0001  
                         ?_fputs 000A                           _ADRESH 000FC4  
                         _ADRESL 000FC3                 ___awdiv@dividend 0001  
                         ?_putch 0001                           _TRISC0 007CA0  
                         _TRISB3 007C9B                           _TRISC1 007CA1  
                         _TRISC2 007CA2                           _TRISC3 007CA3  
                         _TRISJ0 007CD0                           _TRISJ1 007CD1  
               __end_of___xxtofl 3004                 ??_LCD_SETUP_4BIT 0001  
                   vfprintf@cfmt 0046                           ___flge 3594  
                         ___fleq 3C76                        ??___fladd 0009  
                         ___wmul 41E6                        ??___fldiv 0009  
                      ??___awdiv 0005                        ??___flneg 0005  
                      ??___awmod 0005                        ??___flmul 0009  
                      ??___flsub 0022                        ??___fltol 0005  
                         _efgtoa 0F4A                  ADC_Read@channel 0001  
                         _floorf 2C3E                  ADC_Read@digital 0007  
                         clear_0 4212                           clear_1 421E  
               ___awdiv@quotient 0007                  ___awmod@divisor 0003  
                         isa$std 000001                  ___awmod@counter 0005  
                         pad@buf 0013                           _strcpy 3E98  
                         _strlen 3F9A                           fputc@c 0001  
                         fputs@c 000E                           fputs@i 000F  
                         fputs@s 000A                        ??_isdigit 0003  
                ___fpclassifyf@e 0009                        ?_ADC_Init 0001  
                ___fpclassifyf@u 000B                        ?_ADC_Read 0001  
                ___fpclassifyf@x 0001                     __mediumconst 0000  
                      ??_isspace 0003                           tblptrh 000FF7  
                      ??_isupper 0003                           tblptrl 000FF6  
                         tblptru 000FF8                           putch@c 0001  
               __end_of_vfprintf 3E98                        ??_sprintf 0048  
                      ??_tolower 0009                        ??_strncmp 0007  
                      LCD_DATA@x 0013           ??_LCD_INSTRUCTION_4BIT 0001  
                     ___flge@ff1 001A                       ___flge@ff2 001E  
                ??___fpclassifyf 0005                        ?_LCD_DATA 0001  
                   ___xxtofl@arg 0013                     ___xxtofl@exp 0012  
                   ___xxtofl@val 0009                       ___fleq@ff1 0001  
                     ___fleq@ff2 0005                       __accesstop 0060  
        __end_of__initialization 4228                       ___flneg@f1 0001  
                  ___rparam_used 000001                       ___fltol@f1 0001  
                 __pcstackCOMRAM 0001                    __end_of_fputc 3A40  
                  __end_of_fputs 40BA                    __end_of_putch 4268  
                     ??_ADC_Init 0001                       ??_ADC_Read 0003  
                        ??_fputc 0005                          ??_fputs 000E  
                        ??_putch 0001                       __pbssBANK0 00BE  
                     __pbssBANK1 0100                       ??_LCD_DATA 0003  
      LCD_INSTRUCTION_4BIT@x_787 0013                          ?___flge 001A  
                        ?___fleq 0001                          ?___wmul 0001  
                        ?_efgtoa 002E                          ?_floorf 001A  
           LCD_DISPLAY_DIGIT@num 00A6                          ?_strcpy 0001  
                        ?_strlen 0001            LCD_INSTRUCTION_4BIT@x 0011  
                      ?___xxtofl 0009                     _LCD_20_LINE1 425E  
                   _LCD_20_LINE3 4256                     _LCD_20_LINE4 424E  
                        __Hparam 0000                          __Lparam 0000  
                        ___fladd 1B5A                          ___fldiv 28A4  
                        ___awdiv 3A40                          ___flneg 40F2  
                        ___awmod 3BC6                          ___flmul 247A  
                        ___flsub 4030                          ___fltol 348E  
                      ?_vfprintf 0098                     __psmallconst 0F00  
                        __pcinit 420C                          __ramtop 0F00  
                        __ptext0 3698                          __ptext1 2E50  
                        __ptext2 4196                          __ptext3 422E  
                        __ptext4 4162                          __ptext5 3EF6  
                        __ptext6 3E32                          __ptext7 201A  
                        __ptext8 3894                          __ptext9 0F4A  
              LCD_DISPLAY@length 001B                        _T1CONbits 000FCD  
                        _isdigit 412A                       ??___xxtofl 000D  
               ___awmod@dividend 0001                          _isspace 3F48  
              LCD_DISPLAY@string 0017                          _isupper 40BA  
                        efgtoa@c 0034                          efgtoa@d 0072  
                        efgtoa@e 008A                          efgtoa@f 0030  
                        efgtoa@g 0086                          efgtoa@h 007C  
                        efgtoa@i 0084                          efgtoa@l 0080  
                        efgtoa@m 006C                          efgtoa@n 008C  
                        efgtoa@p 0076                          efgtoa@t 0066  
                        efgtoa@u 008E                          efgtoa@w 0078  
                        atoi@neg 000E                          _sprintf 3EF6  
                        _tolower 3FEA                          _strncmp 3894  
           end_of_initialization 4228                          floorf@e 0028  
                        floorf@m 0024                          floorf@u 002A  
                        floorf@x 001A                          fputc@fp 0003  
                        fputs@fp 000C                __end_of_vfpfcnvrt 247A  
                     efgtoa@mode 007B                       efgtoa@sign 0074  
                        postdec2 000FDD                          postinc0 000FEE  
                        postinc1 000FE6                          postinc2 000FDE  
                     ??_vfprintf 0046                          strcpy@d 0009  
                        strlen@a 0003                          strcpy@s 0007  
                        strlen@s 0001                        _PORTBbits 000F81  
                      _PORTJbits 000F88                      ___fladd@grs 0010  
                  ___xxtofl@sign 0011                        _TRISAbits 000F92  
                      _TRISCbits 000F94                      ___fldiv@grs 0014  
                    ___fldiv@rem 000D                    ??_LCD_DISPLAY 0019  
                    ___flmul@grs 000E                      _CCP1CONbits 000FBD  
                    _CCP2CONbits 000FBA                   __end_of___flge 3698  
                 __end_of___fleq 3D20                      vfpfcnvrt@ap 0096  
                    vfpfcnvrt@ct 0042                      vfpfcnvrt@fp 0092  
                 __end_of___wmul 420C                _LCD_DISPLAY_DIGIT 4162  
                 __end_of_efgtoa 1B5A                   __end_of_floorf 2E50  
                     floorf@F526 00BE              _LCD_INITIALIZE_4BIT 422E  
             ?_LCD_DISPLAY_DIGIT 00A6                   __end_of_strcpy 3EF6  
                 __end_of_strlen 3FEA              start_initialization 420C  
                    __end_of_pad 3BC6              ??_LCD_DISPLAY_DIGIT 0055  
          __end_of___fpclassifyf 3894             ?_LCD_INITIALIZE_4BIT 0001  
            __end_of_LCD_DISPLAY 3E32                      vfprintf@fmt 009A  
                       ??___flge 0022                         ??___fleq 0009  
                       ??___wmul 0005        __end_of_LCD_DISPLAY_DIGIT 4196  
                       ??_efgtoa 0035                         ??_floorf 001E  
     LCD_INSTRUCTION_4BIT@_4bit_ 0008                         ??_strcpy 0005  
                       ??_strlen 0003                        ___fladd@a 0005  
                      ___fladd@b 0001                        ___fldiv@a 0005  
                      ___fldiv@b 0001                        ___flmul@a 0005  
                      ___flmul@b 0001                      __pbssCOMRAM 005D  
                      ___flsub@a 001E                        ___flsub@b 001A  
                  __pcstackBANK0 0060            ??_LCD_INITIALIZE_4BIT 0015  
                    _efgtoa$1440 0062                      _efgtoa$1432 0060  
                    _efgtoa$1441 0064                         ?___fladd 0001  
                       ?___fldiv 0001                         ?___awdiv 0001  
                       ?___flneg 0001                         ?___awmod 0001  
                       ?___flmul 0001                         ?___flsub 001A  
                       ?___fltol 0001                      __smallconst 0F00  
                       ?_isdigit 0001                         _ADC_Init 41BE  
                       _ADC_Read 3D20                         ?_isspace 0001  
                       ?_isupper 0001                         ?_sprintf 009E  
                       ?_tolower 0007                         ?_strncmp 0001  
                    _LCD_DISPLAY 3DBC                         _LCD_DATA 3004  
                 ___wmul@product 0005  LCD_INSTRUCTION_4BIT@instruction 0007  
                      _vfpfcnvrt 201A                       _ADCON0bits 000FC2  
                     _ADCON1bits 000FC1                       _ADCON2bits 000FC0  
              ___wmul@multiplier 0001                     _isspace$1519 0007  
                     vfpfcnvrt@c 0045                       vfpfcnvrt@f 003E  
                       __Hrparam 0000                       vfprintf@ap 009C  
                       __Lrparam 0000                       vfprintf@fp 0098  
                     ?_vfpfcnvrt 0092                   _LCD_SETUP_4BIT 4196  
             ___fpclassifyf@F465 00C2                       sprintf@fmt 00A0  
                       ___xxtofl 2E50                   LCD_DATA@_4bit_ 000A  
                       __ptext10 3FEA                         __ptext11 40BA  
                       __ptext20 4030                         __ptext12 3E98  
                       __ptext21 1B5A                         __ptext13 3B04  
                       __ptext30 3F48                         __ptext22 40F2  
                       __ptext14 4076                         __ptext31 412A  
                       __ptext23 247A                         __ptext15 3976  
                       __ptext40 3D20                         __ptext32 41E6  
                       __ptext24 3594                         __ptext16 4266  
                       __ptext41 41BE                         __ptext33 3DBC  
                       __ptext25 3C76                         __ptext17 2C3E  
                       __ptext34 3F9A                         __ptext26 28A4  
                       __ptext18 3796                         __ptext35 3004  
                       __ptext27 3BC6                         __ptext19 348E  
                       __ptext36 424E                         __ptext28 3A40  
                       __ptext37 4256                         __ptext29 3324  
                       __ptext38 425E                         __ptext39 319E  
             LCD_DISPLAY_DIGIT@s 00AA                       strcpy@dest 0001  
       LCD_INSTRUCTION_4BIT@data 0010                         efgtoa@fp 002E  
                       efgtoa@ne 006A                         efgtoa@pp 0068  
                       efgtoa@ou 006E                         isa$xinst 000000  
         __end_of_LCD_SETUP_4BIT 41BE                         _vfprintf 3E32  
   __end_of_LCD_INSTRUCTION_4BIT 3324                    main@ADC_value 0059  
                  ?_LCD_20_LINE1 0001                    ?_LCD_20_LINE3 0001  
                  ?_LCD_20_LINE4 0001                         isdigit@c 0001  
                      sprintf@ap 0048                         isspace@c 0001  
                  LCD_DATA@_data 0012                    LCD_DATA@x_781 0015  
                      strcpy@src 0003                       _RCSTA1bits 000FAB  
                     _RCSTA2bits 000F6B                         isupper@c 0001  
                      strncmp@_l 0001                        strncmp@_r 0003  
                    efgtoa@nmode 007A                  ?_LCD_SETUP_4BIT 0001  
                    ??_vfpfcnvrt 003A                         sprintf@f 004A  
                       tolower@c 0007                         sprintf@s 009E  
                 ??_LCD_20_LINE1 0015                   ??_LCD_20_LINE3 0015  
                 ??_LCD_20_LINE4 0015                     LCD_DATA@data 0009  
                   LCD_DATA@mode 0001                         strncmp@l 0008  
                       strncmp@n 0005                         strncmp@r 000A  
                    _SSPCON1bits 000FC6      __end_of_LCD_INITIALIZE_4BIT 424E  
                  ___fladd@signs 000D                     ?_LCD_DISPLAY 0017  
                   LCD_DISPLAY@x 001D                     ___fladd@aexp 000E  
                   ___fladd@bexp 000F  
