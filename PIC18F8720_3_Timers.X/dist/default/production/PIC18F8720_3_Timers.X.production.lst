

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Nov 08 22:14:06 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F8720
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,delta=1
    39                           	psect	text29,global,reloc=2,class=CODE,delta=1
    40                           	psect	text30,global,reloc=2,class=CODE,delta=1
    41                           	psect	text31,global,reloc=2,class=CODE,delta=1
    42                           	psect	text32,global,reloc=2,class=CODE,delta=1
    43                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    44                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    45                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    46                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    47                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    48                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    49  0000                     
    50                           ; Version 2.40
    51                           ; Generated 17/11/2021 GMT
    52                           ; 
    53                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution. Publication is not required when
    67                           ;        this file is used in an embedded application.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC18F8720 Definitions
    83                           ; 
    84                           ; SFR Addresses
    85  0000                     
    86                           	psect	smallconst
    87  000F00                     __psmallconst:
    88                           	callstack 0
    89  000F00  00                 	db	0
    90  000F01                     __powers_:
    91                           	callstack 0
    92  000F01  0000               	dw	0
    93  000F03  3F80               	dw	16256
    94  000F05  0000               	dw	0
    95  000F07  4120               	dw	16672
    96  000F09  0000               	dw	0
    97  000F0B  42C8               	dw	17096
    98  000F0D  0000               	dw	0
    99  000F0F  447A               	dw	17530
   100  000F11  4000               	dw	16384
   101  000F13  461C               	dw	17948
   102  000F15  5000               	dw	20480
   103  000F17  47C3               	dw	18371
   104  000F19  2400               	dw	9216
   105  000F1B  4974               	dw	18804
   106  000F1D  9680               	dw	38528
   107  000F1F  4B18               	dw	19224
   108  000F21  BC20               	dw	48160
   109  000F23  4CBE               	dw	19646
   110  000F25  6B28               	dw	27432
   111  000F27  4E6E               	dw	20078
   112  000F29  02F9               	dw	761
   113  000F2B  5015               	dw	20501
   114  000F2D  78EC               	dw	30956
   115  000F2F  60AD               	dw	24749
   116  000F31  F2CA               	dw	62154
   117  000F33  7149               	dw	29001
   118  000F35                     __end_of__powers_:
   119                           	callstack 0
   120  000F35                     __npowers_:
   121                           	callstack 0
   122  000F35  0000               	dw	0
   123  000F37  3F80               	dw	16256
   124  000F39  CCCD               	dw	52429
   125  000F3B  3DCC               	dw	15820
   126  000F3D  D70A               	dw	55050
   127  000F3F  3C23               	dw	15395
   128  000F41  126F               	dw	4719
   129  000F43  3A83               	dw	14979
   130  000F45  B717               	dw	46871
   131  000F47  38D1               	dw	14545
   132  000F49  C5AC               	dw	50604
   133  000F4B  3727               	dw	14119
   134  000F4D  37BD               	dw	14269
   135  000F4F  3586               	dw	13702
   136  000F51  BF95               	dw	49045
   137  000F53  33D6               	dw	13270
   138  000F55  CC77               	dw	52343
   139  000F57  322B               	dw	12843
   140  000F59  705F               	dw	28767
   141  000F5B  3089               	dw	12425
   142  000F5D  E6FF               	dw	59135
   143  000F5F  2EDB               	dw	11995
   144  000F61  E508               	dw	58632
   145  000F63  1E3C               	dw	7740
   146  000F65  4260               	dw	16992
   147  000F67  0DA2               	dw	3490
   148  000F69                     __end_of__npowers_:
   149                           	callstack 0
   150  000F69                     _dpowers:
   151                           	callstack 0
   152  000F69  0001               	dw	1
   153  000F6B  0000               	dw	0
   154  000F6D  000A               	dw	10
   155  000F6F  0000               	dw	0
   156  000F71  0064               	dw	100
   157  000F73  0000               	dw	0
   158  000F75  03E8               	dw	1000
   159  000F77  0000               	dw	0
   160  000F79  2710               	dw	10000
   161  000F7B  0000               	dw	0
   162  000F7D  86A0               	dw	34464
   163  000F7F  0001               	dw	1
   164  000F81  4240               	dw	16960
   165  000F83  000F               	dw	15
   166  000F85  9680               	dw	38528
   167  000F87  0098               	dw	152
   168  000F89  E100               	dw	57600
   169  000F8B  05F5               	dw	1525
   170  000F8D  CA00               	dw	51712
   171  000F8F  3B9A               	dw	15258
   172  000F91                     __end_of_dpowers:
   173                           	callstack 0
   174  0000                     _TRISCbits	set	3988
   175  0000                     _TRISC3	set	31907
   176  0000                     _TRISC2	set	31906
   177  0000                     _TRISC1	set	31905
   178  0000                     _TRISJ1	set	31953
   179  0000                     _RCSTA2bits	set	3947
   180  0000                     _RCSTA1bits	set	4011
   181  0000                     _CCP2CONbits	set	4026
   182  0000                     _CCP1CONbits	set	4029
   183  0000                     _SSPCON1bits	set	4038
   184  0000                     _T1CONbits	set	4045
   185  0000                     _PORTBbits	set	3969
   186  0000                     _PORTJbits	set	3976
   187  0000                     _TRISB3	set	31899
   188  0000                     _TRISJ0	set	31952
   189  0000                     _T0CONbits	set	4053
   190  0000                     _TRISDbits	set	3989
   191  0000                     _TRISC0	set	31904
   192  0000                     _LATDbits	set	3980
   193  0000                     _PORTDbits	set	3971
   194  0000                     _TMR0	set	4054
   195  0000                     _INTCONbits	set	4082
   196  000F91                     STR_1:
   197  000F91  50                 	db	80	;'P'
   198  000F92  49                 	db	73	;'I'
   199  000F93  43                 	db	67	;'C'
   200  000F94  31                 	db	49	;'1'
   201  000F95  38                 	db	56	;'8'
   202  000F96  20                 	db	32
   203  000F97  54                 	db	84	;'T'
   204  000F98  49                 	db	73	;'I'
   205  000F99  4D                 	db	77	;'M'
   206  000F9A  45                 	db	69	;'E'
   207  000F9B  52                 	db	82	;'R'
   208  000F9C  53                 	db	83	;'S'
   209  000F9D  00                 	db	0
   210  000F9E                     STR_5:
   211  000F9E  52                 	db	82	;'R'
   212  000F9F  44                 	db	68	;'D'
   213  000FA0  30                 	db	48	;'0'
   214  000FA1  20                 	db	32
   215  000FA2  69                 	db	105	;'i'
   216  000FA3  73                 	db	115	;'s'
   217  000FA4  20                 	db	32
   218  000FA5  4F                 	db	79	;'O'
   219  000FA6  46                 	db	70	;'F'
   220  000FA7  46                 	db	70	;'F'
   221  000FA8  20                 	db	32
   222  000FA9  00                 	db	0
   223  000FAA                     STR_3:
   224  000FAA  54                 	db	84	;'T'
   225  000FAB  49                 	db	73	;'I'
   226  000FAC  4D                 	db	77	;'M'
   227  000FAD  45                 	db	69	;'E'
   228  000FAE  52                 	db	82	;'R'
   229  000FAF  2D                 	db	45
   230  000FB0  30                 	db	48	;'0'
   231  000FB1  20                 	db	32
   232  000FB2  3A                 	db	58	;':'
   233  000FB3  20                 	db	32
   234  000FB4  00                 	db	0
   235  000FB5                     STR_4:
   236  000FB5  52                 	db	82	;'R'
   237  000FB6  44                 	db	68	;'D'
   238  000FB7  30                 	db	48	;'0'
   239  000FB8  20                 	db	32
   240  000FB9  69                 	db	105	;'i'
   241  000FBA  73                 	db	115	;'s'
   242  000FBB  20                 	db	32
   243  000FBC  4F                 	db	79	;'O'
   244  000FBD  4E                 	db	78	;'N'
   245  000FBE  20                 	db	32
   246  000FBF  00                 	db	0
   247  000FC0                     STR_6:
   248  000FC0  52                 	db	82	;'R'
   249  000FC1  44                 	db	68	;'D'
   250  000FC2  37                 	db	55	;'7'
   251  000FC3  20                 	db	32
   252  000FC4  69                 	db	105	;'i'
   253  000FC5  73                 	db	115	;'s'
   254  000FC6  20                 	db	32
   255  000FC7  4F                 	db	79	;'O'
   256  000FC8  4E                 	db	78	;'N'
   257  000FC9  20                 	db	32
   258  000FCA  00                 	db	0
   259  000FCB                     STR_7:
   260  000FCB  52                 	db	82	;'R'
   261  000FCC  44                 	db	68	;'D'
   262  000FCD  37                 	db	55	;'7'
   263  000FCE  20                 	db	32
   264  000FCF  69                 	db	105	;'i'
   265  000FD0  73                 	db	115	;'s'
   266  000FD1  20                 	db	32
   267  000FD2  4F                 	db	79	;'O'
   268  000FD3  46                 	db	70	;'F'
   269  000FD4  46                 	db	70	;'F'
   270  000FD5  00                 	db	0
   271  000FD6                     STR_2:
   272  000FD6  63                 	db	99	;'c'
   273  000FD7  6E                 	db	110	;'n'
   274  000FD8  74                 	db	116	;'t'
   275  000FD9  20                 	db	32
   276  000FDA  25                 	db	37
   277  000FDB  2E                 	db	46
   278  000FDC  31                 	db	49	;'1'
   279  000FDD  66                 	db	102	;'f'
   280  000FDE  00                 	db	0
   281  000FDF  00                 	db	0	; dummy byte at the end
   282  0000                     
   283                           ; #config settings
   284                           
   285                           	psect	cinit
   286  0039E4                     __pcinit:
   287                           	callstack 0
   288  0039E4                     start_initialization:
   289                           	callstack 0
   290  0039E4                     __initialization:
   291                           	callstack 0
   292                           
   293                           ; Clear objects allocated to COMRAM (2 bytes)
   294  0039E4  6A5C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   295  0039E6  6A5B               	clrf	__pbssCOMRAM& (0+255),c
   296  0039E8                     end_of_initialization:
   297                           	callstack 0
   298  0039E8                     __end_of__initialization:
   299                           	callstack 0
   300  0039E8  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   301  0039EA  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   302  0039EC  0100               	movlb	0
   303  0039EE  EF4B  F018         	goto	_main	;jump to C main() function
   304                           
   305                           	psect	bssCOMRAM
   306  00005B                     __pbssCOMRAM:
   307                           	callstack 0
   308  00005B                     _count:
   309                           	callstack 0
   310  00005B                     	ds	2
   311                           
   312                           	psect	cstackBANK0
   313  000060                     __pcstackBANK0:
   314                           	callstack 0
   315  000060                     _sprintf$1687:
   316                           	callstack 0
   317                           
   318                           ; 4 bytes @ 0x0
   319  000060                     	ds	4
   320  000064                     sprintf@ap:
   321                           	callstack 0
   322                           
   323                           ; 2 bytes @ 0x4
   324  000064                     	ds	2
   325  000066                     sprintf@flag:
   326                           	callstack 0
   327                           
   328                           ; 2 bytes @ 0x6
   329  000066                     	ds	2
   330  000068                     sprintf@val:
   331                           	callstack 0
   332                           
   333                           ; 4 bytes @ 0x8
   334  000068                     	ds	4
   335  00006C                     sprintf@eexp:
   336                           	callstack 0
   337                           
   338                           ; 2 bytes @ 0xC
   339  00006C                     	ds	2
   340  00006E                     sprintf@tmpval:
   341                           	callstack 0
   342                           
   343                           ; 4 bytes @ 0xE
   344  00006E                     	ds	4
   345  000072                     sprintf@prec:
   346                           	callstack 0
   347                           
   348                           ; 2 bytes @ 0x12
   349  000072                     	ds	2
   350  000074                     sprintf@fval:
   351                           	callstack 0
   352                           
   353                           ; 4 bytes @ 0x14
   354  000074                     	ds	4
   355  000078                     sprintf@c:
   356                           	callstack 0
   357                           
   358                           ; 1 bytes @ 0x18
   359  000078                     	ds	1
   360  000079                     main@s:
   361                           	callstack 0
   362                           
   363                           ; 20 bytes @ 0x19
   364  000079                     	ds	20
   365  00008D                     main@counter:
   366                           	callstack 0
   367                           
   368                           ; 4 bytes @ 0x2D
   369  00008D                     	ds	4
   370                           
   371                           	psect	cstackCOMRAM
   372  000001                     __pcstackCOMRAM:
   373                           	callstack 0
   374  000001                     ??_isdigit:
   375  000001                     ??_LCD_INSTRUCTION_4BIT:
   376  000001                     ?_strlen:
   377                           	callstack 0
   378  000001                     ?___wmul:
   379                           	callstack 0
   380  000001                     ?___awmod:
   381                           	callstack 0
   382  000001                     ?___lwmod:
   383                           	callstack 0
   384  000001                     ?__tdiv_to_l_:
   385                           	callstack 0
   386  000001                     ?__div_to_l_:
   387                           	callstack 0
   388  000001                     ?___lldiv:
   389                           	callstack 0
   390  000001                     ?___flneg:
   391                           	callstack 0
   392  000001                     ?___llmod:
   393                           	callstack 0
   394  000001                     ?___xxtofl:
   395                           	callstack 0
   396  000001                     LCD_DATA@mode:
   397                           	callstack 0
   398  000001                     ___wmul@multiplier:
   399                           	callstack 0
   400  000001                     ___awmod@dividend:
   401                           	callstack 0
   402  000001                     ___lwmod@dividend:
   403                           	callstack 0
   404  000001                     strlen@s:
   405                           	callstack 0
   406  000001                     ___lldiv@dividend:
   407                           	callstack 0
   408  000001                     __div_to_l_@f1:
   409                           	callstack 0
   410  000001                     ___fleq@ff1:
   411                           	callstack 0
   412  000001                     ___flge@ff1:
   413                           	callstack 0
   414  000001                     ___flneg@f1:
   415                           	callstack 0
   416  000001                     __tdiv_to_l_@f1:
   417                           	callstack 0
   418  000001                     ___llmod@dividend:
   419                           	callstack 0
   420  000001                     ___xxtofl@val:
   421                           	callstack 0
   422                           
   423                           ; 4 bytes @ 0x0
   424  000001                     	ds	1
   425  000002                     _isdigit$1463:
   426                           	callstack 0
   427                           
   428                           ; 1 bytes @ 0x1
   429  000002                     	ds	1
   430  000003                     ??_LCD_DATA:
   431  000003                     isdigit@c:
   432                           	callstack 0
   433  000003                     ___wmul@multiplicand:
   434                           	callstack 0
   435  000003                     ___awmod@divisor:
   436                           	callstack 0
   437  000003                     ___lwmod@divisor:
   438                           	callstack 0
   439  000003                     strlen@cp:
   440                           	callstack 0
   441                           
   442                           ; 2 bytes @ 0x2
   443  000003                     	ds	2
   444  000005                     ??___xxtofl:
   445  000005                     ___awmod@counter:
   446                           	callstack 0
   447  000005                     ___lwmod@counter:
   448                           	callstack 0
   449  000005                     ___wmul@product:
   450                           	callstack 0
   451  000005                     ___lldiv@divisor:
   452                           	callstack 0
   453  000005                     __div_to_l_@f2:
   454                           	callstack 0
   455  000005                     ___fleq@ff2:
   456                           	callstack 0
   457  000005                     ___flge@ff2:
   458                           	callstack 0
   459  000005                     __tdiv_to_l_@f2:
   460                           	callstack 0
   461  000005                     ___llmod@divisor:
   462                           	callstack 0
   463                           
   464                           ; 4 bytes @ 0x4
   465  000005                     	ds	1
   466  000006                     ?___lwdiv:
   467                           	callstack 0
   468  000006                     ___awmod@sign:
   469                           	callstack 0
   470  000006                     ___lwdiv@dividend:
   471                           	callstack 0
   472                           
   473                           ; 2 bytes @ 0x5
   474  000006                     	ds	1
   475  000007                     ?___awdiv:
   476                           	callstack 0
   477  000007                     LCD_INSTRUCTION_4BIT@instruction:
   478                           	callstack 0
   479  000007                     ___awdiv@dividend:
   480                           	callstack 0
   481                           
   482                           ; 2 bytes @ 0x6
   483  000007                     	ds	1
   484  000008                     ___lwdiv@divisor:
   485                           	callstack 0
   486  000008                     LCD_INSTRUCTION_4BIT@_4bit_:
   487                           	callstack 0
   488                           
   489                           ; 8 bytes @ 0x7
   490  000008                     	ds	1
   491  000009                     ??__tdiv_to_l_:
   492  000009                     ??___fleq:
   493  000009                     ??___flge:
   494  000009                     LCD_DATA@data:
   495                           	callstack 0
   496  000009                     ___llmod@counter:
   497                           	callstack 0
   498  000009                     ___xxtofl@sign:
   499                           	callstack 0
   500  000009                     ___awdiv@divisor:
   501                           	callstack 0
   502  000009                     ___lldiv@quotient:
   503                           	callstack 0
   504  000009                     __div_to_l_@quot:
   505                           	callstack 0
   506                           
   507                           ; 4 bytes @ 0x8
   508  000009                     	ds	1
   509  00000A                     ___xxtofl@exp:
   510                           	callstack 0
   511  00000A                     ___lwdiv@quotient:
   512                           	callstack 0
   513  00000A                     LCD_DATA@_4bit_:
   514                           	callstack 0
   515                           
   516                           ; 8 bytes @ 0x9
   517  00000A                     	ds	1
   518  00000B                     ___awdiv@counter:
   519                           	callstack 0
   520  00000B                     ___xxtofl@arg:
   521                           	callstack 0
   522                           
   523                           ; 4 bytes @ 0xA
   524  00000B                     	ds	1
   525  00000C                     ___awdiv@sign:
   526                           	callstack 0
   527  00000C                     ___lwdiv@counter:
   528                           	callstack 0
   529  00000C                     __tdiv_to_l_@quot:
   530                           	callstack 0
   531                           
   532                           ; 4 bytes @ 0xB
   533  00000C                     	ds	1
   534  00000D                     ___lldiv@counter:
   535                           	callstack 0
   536  00000D                     __div_to_l_@cntr:
   537                           	callstack 0
   538  00000D                     ___awdiv@quotient:
   539                           	callstack 0
   540                           
   541                           ; 2 bytes @ 0xC
   542  00000D                     	ds	1
   543  00000E                     __div_to_l_@exp1:
   544                           	callstack 0
   545                           
   546                           ; 1 bytes @ 0xD
   547  00000E                     	ds	1
   548  00000F                     ?___flmul:
   549                           	callstack 0
   550  00000F                     ___flmul@b:
   551                           	callstack 0
   552                           
   553                           ; 4 bytes @ 0xE
   554  00000F                     	ds	1
   555  000010                     LCD_INSTRUCTION_4BIT@data:
   556                           	callstack 0
   557  000010                     __tdiv_to_l_@cntr:
   558                           	callstack 0
   559                           
   560                           ; 1 bytes @ 0xF
   561  000010                     	ds	1
   562  000011                     __tdiv_to_l_@exp1:
   563                           	callstack 0
   564  000011                     LCD_INSTRUCTION_4BIT@x:
   565                           	callstack 0
   566                           
   567                           ; 2 bytes @ 0x10
   568  000011                     	ds	1
   569  000012                     LCD_DATA@_data:
   570                           	callstack 0
   571                           
   572                           ; 1 bytes @ 0x11
   573  000012                     	ds	1
   574  000013                     LCD_DATA@x:
   575                           	callstack 0
   576  000013                     LCD_INSTRUCTION_4BIT@x_857:
   577                           	callstack 0
   578  000013                     ___flmul@a:
   579                           	callstack 0
   580                           
   581                           ; 4 bytes @ 0x12
   582  000013                     	ds	2
   583  000015                     LCD_DATA@x_851:
   584                           	callstack 0
   585                           
   586                           ; 2 bytes @ 0x14
   587  000015                     	ds	2
   588  000017                     ??___flmul:
   589  000017                     LCD_DISPLAY@string:
   590                           	callstack 0
   591                           
   592                           ; 2 bytes @ 0x16
   593  000017                     	ds	2
   594  000019                     ??_LCD_DISPLAY:
   595                           
   596                           ; 1 bytes @ 0x18
   597  000019                     	ds	2
   598  00001B                     ___flmul@sign:
   599                           	callstack 0
   600  00001B                     LCD_DISPLAY@length:
   601                           	callstack 0
   602                           
   603                           ; 2 bytes @ 0x1A
   604  00001B                     	ds	1
   605  00001C                     ___flmul@grs:
   606                           	callstack 0
   607                           
   608                           ; 4 bytes @ 0x1B
   609  00001C                     	ds	1
   610  00001D                     LCD_DISPLAY@x:
   611                           	callstack 0
   612                           
   613                           ; 2 bytes @ 0x1C
   614  00001D                     	ds	3
   615  000020                     ___flmul@aexp:
   616                           	callstack 0
   617                           
   618                           ; 1 bytes @ 0x1F
   619  000020                     	ds	1
   620  000021                     ___flmul@bexp:
   621                           	callstack 0
   622                           
   623                           ; 1 bytes @ 0x20
   624  000021                     	ds	1
   625  000022                     ___flmul@prod:
   626                           	callstack 0
   627                           
   628                           ; 4 bytes @ 0x21
   629  000022                     	ds	4
   630  000026                     ___flmul@temp:
   631                           	callstack 0
   632                           
   633                           ; 2 bytes @ 0x25
   634  000026                     	ds	2
   635  000028                     ?_fround:
   636                           	callstack 0
   637  000028                     ?_scale:
   638                           	callstack 0
   639                           
   640                           ; 4 bytes @ 0x27
   641  000028                     	ds	4
   642  00002C                     _fround$1685:
   643                           	callstack 0
   644  00002C                     _scale$1686:
   645                           	callstack 0
   646                           
   647                           ; 4 bytes @ 0x2B
   648  00002C                     	ds	4
   649  000030                     scale@scl:
   650                           	callstack 0
   651  000030                     _fround$1684:
   652                           	callstack 0
   653                           
   654                           ; 4 bytes @ 0x2F
   655  000030                     	ds	1
   656  000031                     ?___fltol:
   657                           	callstack 0
   658  000031                     ___fltol@f1:
   659                           	callstack 0
   660                           
   661                           ; 4 bytes @ 0x30
   662  000031                     	ds	3
   663  000034                     fround@prec:
   664                           	callstack 0
   665                           
   666                           ; 1 bytes @ 0x33
   667  000034                     	ds	1
   668  000035                     ??___fltol:
   669  000035                     ?___fladd:
   670                           	callstack 0
   671  000035                     ___fladd@b:
   672                           	callstack 0
   673                           
   674                           ; 4 bytes @ 0x34
   675  000035                     	ds	4
   676  000039                     ___fltol@sign1:
   677                           	callstack 0
   678  000039                     ___fladd@a:
   679                           	callstack 0
   680                           
   681                           ; 4 bytes @ 0x38
   682  000039                     	ds	1
   683  00003A                     ___fltol@exp1:
   684                           	callstack 0
   685                           
   686                           ; 1 bytes @ 0x39
   687  00003A                     	ds	3
   688  00003D                     ??___fladd:
   689                           
   690                           ; 1 bytes @ 0x3C
   691  00003D                     	ds	4
   692  000041                     ___fladd@signs:
   693                           	callstack 0
   694                           
   695                           ; 1 bytes @ 0x40
   696  000041                     	ds	1
   697  000042                     ___fladd@aexp:
   698                           	callstack 0
   699                           
   700                           ; 1 bytes @ 0x41
   701  000042                     	ds	1
   702  000043                     ___fladd@bexp:
   703                           	callstack 0
   704                           
   705                           ; 1 bytes @ 0x42
   706  000043                     	ds	1
   707  000044                     ___fladd@grs:
   708                           	callstack 0
   709                           
   710                           ; 1 bytes @ 0x43
   711  000044                     	ds	1
   712  000045                     ?___flsub:
   713                           	callstack 0
   714  000045                     ___flsub@b:
   715                           	callstack 0
   716                           
   717                           ; 4 bytes @ 0x44
   718  000045                     	ds	4
   719  000049                     ___flsub@a:
   720                           	callstack 0
   721                           
   722                           ; 4 bytes @ 0x48
   723  000049                     	ds	4
   724  00004D                     ?_sprintf:
   725                           	callstack 0
   726  00004D                     sprintf@sp:
   727                           	callstack 0
   728                           
   729                           ; 2 bytes @ 0x4C
   730  00004D                     	ds	2
   731  00004F                     sprintf@f:
   732                           	callstack 0
   733                           
   734                           ; 2 bytes @ 0x4E
   735  00004F                     	ds	6
   736  000055                     ??_sprintf:
   737                           
   738                           ; 1 bytes @ 0x54
   739  000055                     	ds	4
   740  000059                     ??_main:
   741                           
   742                           ; 1 bytes @ 0x58
   743  000059                     	ds	2
   744                           
   745 ;;
   746 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   747 ;;
   748 ;; *************** function _main *****************
   749 ;; Defined at:
   750 ;;		line 79 in file "main.c"
   751 ;; Parameters:    Size  Location     Type
   752 ;;		None
   753 ;; Auto vars:     Size  Location     Type
   754 ;;  s              20   25[BANK0 ] unsigned char [20]
   755 ;;  counter         4   45[BANK0 ] float 
   756 ;; Return value:  Size  Location     Type
   757 ;;                  1    wreg      void 
   758 ;; Registers used:
   759 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   760 ;; Tracked objects:
   761 ;;		On entry : 0/0
   762 ;;		On exit  : 0/0
   763 ;;		Unchanged: 0/0
   764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   766 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   767 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   768 ;;      Totals:         2      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   769 ;;Total ram usage:       26 bytes
   770 ;; Hardware stack levels required when called: 4
   771 ;; This function calls:
   772 ;;		_LCD_20_LINE1
   773 ;;		_LCD_20_LINE2
   774 ;;		_LCD_20_LINE3
   775 ;;		_LCD_20_LINE4
   776 ;;		_LCD_DISPLAY
   777 ;;		_LCD_INITIALIZE_4BIT
   778 ;;		_LCD_SETUP_4BIT
   779 ;;		_TIMER0_Init
   780 ;;		___flsub
   781 ;;		_sprintf
   782 ;; This function is called by:
   783 ;;		Startup code after reset
   784 ;; This function uses a non-reentrant model
   785 ;;
   786                           
   787                           	psect	text0
   788  003096                     __ptext0:
   789                           	callstack 0
   790  003096                     _main:
   791                           	callstack 27
   792  003096                     
   793                           ;main.c: 80: char s[20];;main.c: 81: float counter = 0;
   794  003096  0E00               	movlw	0
   795  003098  0100               	movlb	0	; () banked
   796  00309A  6F8D               	movwf	main@counter& (0+255),b
   797  00309C  0E00               	movlw	0
   798  00309E  6F8E               	movwf	(main@counter+1)& (0+255),b
   799  0030A0  0E00               	movlw	0
   800  0030A2  6F8F               	movwf	(main@counter+2)& (0+255),b
   801  0030A4  0E00               	movlw	0
   802  0030A6  6F90               	movwf	(main@counter+3)& (0+255),b
   803  0030A8                     
   804                           ; BSR set to: 0
   805                           ;main.c: 82: TRISDbits.TRISD0 = 0x00;
   806  0030A8  9095               	bcf	149,0,c	;volatile
   807  0030AA                     
   808                           ; BSR set to: 0
   809                           ;main.c: 83: TRISDbits.TRISD7 = 0x00;
   810  0030AA  9E95               	bcf	149,7,c	;volatile
   811  0030AC                     
   812                           ; BSR set to: 0
   813                           ;main.c: 85: TIMER0_Init();
   814  0030AC  ECE4  F01C         	call	_TIMER0_Init	;wreg free
   815                           
   816                           ;main.c: 87: LCD_SETUP_4BIT();
   817  0030B0  ECAD  F01C         	call	_LCD_SETUP_4BIT	;wreg free
   818  0030B4                     
   819                           ;main.c: 88: LCD_INITIALIZE_4BIT();
   820  0030B4  ECD4  F01C         	call	_LCD_INITIALIZE_4BIT	;wreg free
   821  0030B8                     l3493:
   822                           
   823                           ;main.c: 93: PORTDbits.RD0 ^= 0x01;
   824  0030B8  7083               	btg	131,0,c	;volatile
   825  0030BA                     
   826                           ;main.c: 94: _delay((unsigned long)((100)*(0x12BFCE0/4000.0)));
   827  0030BA  0E03               	movlw	3
   828  0030BC  6E5A               	movwf	(??_main+1)^0,c
   829  0030BE  0E7F               	movlw	127
   830  0030C0  6E59               	movwf	??_main^0,c
   831  0030C2  0E4C               	movlw	76
   832  0030C4                     u4057:
   833  0030C4  2EE8               	decfsz	wreg,f,c
   834  0030C6  D7FE               	bra	u4057
   835  0030C8  2E59               	decfsz	??_main^0,f,c
   836  0030CA  D7FC               	bra	u4057
   837  0030CC  2E5A               	decfsz	(??_main+1)^0,f,c
   838  0030CE  D7FA               	bra	u4057
   839  0030D0                     
   840                           ;main.c: 95: LCD_20_LINE1();
   841  0030D0  EC05  F01D         	call	_LCD_20_LINE1	;wreg free
   842  0030D4                     
   843                           ;main.c: 97: LCD_DISPLAY("PIC18 TIMERS");
   844  0030D4  0E91               	movlw	low STR_1
   845  0030D6  6E17               	movwf	LCD_DISPLAY@string^0,c
   846  0030D8  0E0F               	movlw	high STR_1
   847  0030DA  6E18               	movwf	(LCD_DISPLAY@string+1)^0,c
   848  0030DC  EC86  F01B         	call	_LCD_DISPLAY	;wreg free
   849  0030E0                     
   850                           ;main.c: 98: LCD_20_LINE2();
   851  0030E0  EC01  F01D         	call	_LCD_20_LINE2	;wreg free
   852  0030E4                     
   853                           ;main.c: 99: sprintf(s,"cnt %.1f",counter);
   854  0030E4  0E79               	movlw	low main@s
   855  0030E6  6E4D               	movwf	sprintf@sp^0,c
   856  0030E8  0E00               	movlw	high main@s
   857  0030EA  6E4E               	movwf	(sprintf@sp+1)^0,c
   858  0030EC  0ED6               	movlw	low STR_2
   859  0030EE  6E4F               	movwf	sprintf@f^0,c
   860  0030F0  0E0F               	movlw	high STR_2
   861  0030F2  6E50               	movwf	(sprintf@f+1)^0,c
   862  0030F4  C08D  F051         	movff	main@counter,?_sprintf+4
   863  0030F8  C08E  F052         	movff	main@counter+1,?_sprintf+5
   864  0030FC  C08F  F053         	movff	main@counter+2,?_sprintf+6
   865  003100  C090  F054         	movff	main@counter+3,?_sprintf+7
   866  003104  ECF0  F007         	call	_sprintf	;wreg free
   867  003108                     
   868                           ;main.c: 100: counter -=-10;
   869  003108  C08D  F045         	movff	main@counter,___flsub@b
   870  00310C  C08E  F046         	movff	main@counter+1,___flsub@b+1
   871  003110  C08F  F047         	movff	main@counter+2,___flsub@b+2
   872  003114  C090  F048         	movff	main@counter+3,___flsub@b+3
   873  003118  0E00               	movlw	0
   874  00311A  6E49               	movwf	___flsub@a^0,c
   875  00311C  0E00               	movlw	0
   876  00311E  6E4A               	movwf	(___flsub@a+1)^0,c
   877  003120  0E20               	movlw	32
   878  003122  6E4B               	movwf	(___flsub@a+2)^0,c
   879  003124  0EC1               	movlw	193
   880  003126  6E4C               	movwf	(___flsub@a+3)^0,c
   881  003128  EC55  F01C         	call	___flsub	;wreg free
   882  00312C  C045  F08D         	movff	?___flsub,main@counter
   883  003130  C046  F08E         	movff	?___flsub+1,main@counter+1
   884  003134  C047  F08F         	movff	?___flsub+2,main@counter+2
   885  003138  C048  F090         	movff	?___flsub+3,main@counter+3
   886  00313C                     
   887                           ;main.c: 101: LCD_DISPLAY("TIMER-0 : ");
   888  00313C  0EAA               	movlw	low STR_3
   889  00313E  6E17               	movwf	LCD_DISPLAY@string^0,c
   890  003140  0E0F               	movlw	high STR_3
   891  003142  6E18               	movwf	(LCD_DISPLAY@string+1)^0,c
   892  003144  EC86  F01B         	call	_LCD_DISPLAY	;wreg free
   893  003148                     
   894                           ;main.c: 102: LCD_DISPLAY(s);
   895  003148  0E79               	movlw	low main@s
   896  00314A  6E17               	movwf	LCD_DISPLAY@string^0,c
   897  00314C  0E00               	movlw	high main@s
   898  00314E  6E18               	movwf	(LCD_DISPLAY@string+1)^0,c
   899  003150  EC86  F01B         	call	_LCD_DISPLAY	;wreg free
   900  003154                     
   901                           ;main.c: 103: LCD_20_LINE3();
   902  003154  ECFD  F01C         	call	_LCD_20_LINE3	;wreg free
   903  003158                     
   904                           ;main.c: 104: if(LATDbits.LD0 == 0x01){
   905  003158  A08C               	btfss	140,0,c	;volatile
   906  00315A  EFB1  F018         	goto	u4031
   907  00315E  EFB3  F018         	goto	u4030
   908  003162                     u4031:
   909  003162  EFBB  F018         	goto	l3517
   910  003166                     u4030:
   911  003166                     
   912                           ;main.c: 105: LCD_DISPLAY("RD0 is ON ");
   913  003166  0EB5               	movlw	low STR_4
   914  003168  6E17               	movwf	LCD_DISPLAY@string^0,c
   915  00316A  0E0F               	movlw	high STR_4
   916  00316C  6E18               	movwf	(LCD_DISPLAY@string+1)^0,c
   917  00316E  EC86  F01B         	call	_LCD_DISPLAY	;wreg free
   918                           
   919                           ;main.c: 106: }
   920  003172  EFC1  F018         	goto	l3519
   921  003176                     l3517:
   922                           
   923                           ;main.c: 107: else{;main.c: 108: LCD_DISPLAY("RD0 is OFF ");
   924  003176  0E9E               	movlw	low STR_5
   925  003178  6E17               	movwf	LCD_DISPLAY@string^0,c
   926  00317A  0E0F               	movlw	high STR_5
   927  00317C  6E18               	movwf	(LCD_DISPLAY@string+1)^0,c
   928  00317E  EC86  F01B         	call	_LCD_DISPLAY	;wreg free
   929  003182                     l3519:
   930                           
   931                           ;main.c: 109: };main.c: 110: LCD_20_LINE4();
   932  003182  ECF9  F01C         	call	_LCD_20_LINE4	;wreg free
   933  003186                     
   934                           ;main.c: 112: if(PORTDbits.RD7 == 0x01){
   935  003186  AE83               	btfss	131,7,c	;volatile
   936  003188  EFC8  F018         	goto	u4041
   937  00318C  EFCA  F018         	goto	u4040
   938  003190                     u4041:
   939  003190  EFD2  F018         	goto	l3525
   940  003194                     u4040:
   941  003194                     
   942                           ;main.c: 113: LCD_DISPLAY("RD7 is ON ");
   943  003194  0EC0               	movlw	low STR_6
   944  003196  6E17               	movwf	LCD_DISPLAY@string^0,c
   945  003198  0E0F               	movlw	high STR_6
   946  00319A  6E18               	movwf	(LCD_DISPLAY@string+1)^0,c
   947  00319C  EC86  F01B         	call	_LCD_DISPLAY	;wreg free
   948                           
   949                           ;main.c: 114: }
   950  0031A0  EF5C  F018         	goto	l3493
   951  0031A4                     l3525:
   952                           
   953                           ;main.c: 115: else{;main.c: 116: LCD_DISPLAY("RD7 is OFF");
   954  0031A4  0ECB               	movlw	low STR_7
   955  0031A6  6E17               	movwf	LCD_DISPLAY@string^0,c
   956  0031A8  0E0F               	movlw	high STR_7
   957  0031AA  6E18               	movwf	(LCD_DISPLAY@string+1)^0,c
   958  0031AC  EC86  F01B         	call	_LCD_DISPLAY	;wreg free
   959  0031B0  EF5C  F018         	goto	l3493
   960  0031B4  EF24  F000         	goto	start
   961  0031B8                     __end_of_main:
   962                           	callstack 0
   963                           
   964 ;; *************** function _sprintf *****************
   965 ;; Defined at:
   966 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c"
   967 ;; Parameters:    Size  Location     Type
   968 ;;  sp              2   76[COMRAM] PTR unsigned char 
   969 ;;		 -> main@s(20), 
   970 ;;  f               2   78[COMRAM] PTR const unsigned char 
   971 ;;		 -> STR_2(9), 
   972 ;; Auto vars:     Size  Location     Type
   973 ;;  fval            4   20[BANK0 ] PTR const unsigned char 
   974 ;;  tmpval          4   14[BANK0 ] struct .
   975 ;;  val             4    8[BANK0 ] unsigned long 
   976 ;;  cp              3    0        PTR const unsigned char 
   977 ;;  prec            2   18[BANK0 ] int 
   978 ;;  eexp            2   12[BANK0 ] int 
   979 ;;  flag            2    6[BANK0 ] unsigned short 
   980 ;;  ap              2    4[BANK0 ] PTR void [1]
   981 ;;		 -> ?_sprintf(2), 
   982 ;;  len             2    0        unsigned int 
   983 ;;  width           2    0        int 
   984 ;;  c               1   24[BANK0 ] unsigned char 
   985 ;;  d               1    0        unsigned char 
   986 ;; Return value:  Size  Location     Type
   987 ;;                  2   76[COMRAM] int 
   988 ;; Registers used:
   989 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   990 ;; Tracked objects:
   991 ;;		On entry : 0/0
   992 ;;		On exit  : 0/0
   993 ;;		Unchanged: 0/0
   994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   995 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   996 ;;      Locals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   997 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   998 ;;      Totals:        12      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   999 ;;Total ram usage:       37 bytes
  1000 ;; Hardware stack levels used: 1
  1001 ;; Hardware stack levels required when called: 3
  1002 ;; This function calls:
  1003 ;;		___awdiv
  1004 ;;		___fladd
  1005 ;;		___fleq
  1006 ;;		___flge
  1007 ;;		___flmul
  1008 ;;		___flneg
  1009 ;;		___flsub
  1010 ;;		___fltol
  1011 ;;		___lldiv
  1012 ;;		___llmod
  1013 ;;		___wmul
  1014 ;;		___xxtofl
  1015 ;;		__div_to_l_
  1016 ;;		__tdiv_to_l_
  1017 ;;		_fround
  1018 ;;		_isdigit
  1019 ;;		_scale
  1020 ;; This function is called by:
  1021 ;;		_main
  1022 ;; This function uses a non-reentrant model
  1023 ;;
  1024                           
  1025                           	psect	text1
  1026  000FE0                     __ptext1:
  1027                           	callstack 0
  1028  000FE0                     _sprintf:
  1029                           	callstack 27
  1030  000FE0                     
  1031                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          17: int prec;;doprnt.c: 525: unsigned short flag;;doprnt.c: 532: char d;;doprnt.c: 533: 
      +                          double fval;;doprnt.c: 534: int eexp;;doprnt.c: 540: union {;doprnt.c: 541: unsigned lon
      +                          g vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned long
      +                           val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = 
      +                          __va_start();
  1032  000FE0  0E51               	movlw	low (?_sprintf+4)
  1033  000FE2  0100               	movlb	0	; () banked
  1034  000FE4  6F64               	movwf	sprintf@ap& (0+255),b
  1035  000FE6  0E00               	movlw	high (?_sprintf+4)
  1036  000FE8  6F65               	movwf	(sprintf@ap+1)& (0+255),b
  1037                           
  1038                           ;doprnt.c: 553: while((c = *f++)) {
  1039  000FEA  EF74  F00C         	goto	l3449
  1040  000FEE                     l3249:
  1041                           
  1042                           ; BSR set to: 0
  1043                           ;doprnt.c: 555: if(c != '%')
  1044  000FEE  0E25               	movlw	37
  1045  000FF0  1978               	xorwf	sprintf@c& (0+255),w,b
  1046  000FF2  B4D8               	btfsc	status,2,c
  1047  000FF4  EFFE  F007         	goto	u3701
  1048  000FF8  EF00  F008         	goto	u3700
  1049  000FFC                     u3701:
  1050  000FFC  EF0A  F008         	goto	l3255
  1051  001000                     u3700:
  1052  001000                     
  1053                           ; BSR set to: 0
  1054                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  1055  001000  C04D  FFD9         	movff	sprintf@sp,fsr2l
  1056  001004  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  1057  001008  C078  FFDF         	movff	sprintf@c,indf2
  1058  00100C                     l3253:
  1059                           
  1060                           ; BSR set to: 0
  1061  00100C  4A4D               	infsnz	sprintf@sp^0,f,c
  1062  00100E  2A4E               	incf	(sprintf@sp+1)^0,f,c
  1063                           
  1064                           ;doprnt.c: 559: continue;
  1065  001010  EF74  F00C         	goto	l3449
  1066  001014                     l3255:
  1067                           
  1068                           ; BSR set to: 0
  1069                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
  1070  001014  0E00               	movlw	0
  1071  001016  6F67               	movwf	(sprintf@flag+1)& (0+255),b
  1072  001018  0E00               	movlw	0
  1073  00101A  6F66               	movwf	sprintf@flag& (0+255),b
  1074  00101C                     
  1075                           ; BSR set to: 0
  1076                           ;doprnt.c: 628: if(*f == '.') {
  1077  00101C  C04F  FFF6         	movff	sprintf@f,tblptrl
  1078  001020  C050  FFF7         	movff	sprintf@f+1,tblptrh
  1079  001024                     	if	0	;tblptru may be non-zero
  1080  001024                     	endif
  1081  001024                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1082  001024  0E00               	movlw	low (__mediumconst shr (0+16))
  1083  001026  6EF8               	movwf	tblptru,c
  1084  001028                     	endif
  1085  001028  0008               	tblrd		*
  1086  00102A  50F5               	movf	tablat,w,c
  1087  00102C  0A2E               	xorlw	46
  1088  00102E  A4D8               	btfss	status,2,c
  1089  001030  EF1C  F008         	goto	u3711
  1090  001034  EF1E  F008         	goto	u3710
  1091  001038                     u3711:
  1092  001038  EF61  F008         	goto	l3271
  1093  00103C                     u3710:
  1094  00103C                     
  1095                           ; BSR set to: 0
  1096                           ;doprnt.c: 629: flag |= 0x4000;
  1097  00103C  8D67               	bsf	(sprintf@flag+1)& (0+255),6,b
  1098                           
  1099                           ;doprnt.c: 630: f++;
  1100  00103E  4A4F               	infsnz	sprintf@f^0,f,c
  1101  001040  2A50               	incf	(sprintf@f+1)^0,f,c
  1102  001042                     
  1103                           ; BSR set to: 0
  1104                           ;doprnt.c: 644: {;doprnt.c: 645: prec = 0;
  1105  001042  0E00               	movlw	0
  1106  001044  6F73               	movwf	(sprintf@prec+1)& (0+255),b
  1107  001046  0E00               	movlw	0
  1108  001048  6F72               	movwf	sprintf@prec& (0+255),b
  1109                           
  1110                           ;doprnt.c: 646: while(isdigit((unsigned)*f)) {
  1111  00104A  EF4E  F008         	goto	l3269
  1112  00104E                     l3263:
  1113                           
  1114                           ;doprnt.c: 647: prec *= 10;
  1115  00104E  C072  F001         	movff	sprintf@prec,___wmul@multiplier
  1116  001052  C073  F002         	movff	sprintf@prec+1,___wmul@multiplier+1
  1117  001056  0E00               	movlw	0
  1118  001058  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1119  00105A  0E0A               	movlw	10
  1120  00105C  6E03               	movwf	___wmul@multiplicand^0,c
  1121  00105E  ECC1  F01C         	call	___wmul	;wreg free
  1122  001062  C001  F072         	movff	?___wmul,sprintf@prec
  1123  001066  C002  F073         	movff	?___wmul+1,sprintf@prec+1
  1124  00106A                     
  1125                           ;doprnt.c: 648: prec += *f++ - '0';
  1126  00106A  0ED0               	movlw	208
  1127  00106C  6E55               	movwf	??_sprintf^0,c
  1128  00106E  0EFF               	movlw	255
  1129  001070  6E56               	movwf	(??_sprintf+1)^0,c
  1130  001072  C04F  FFF6         	movff	sprintf@f,tblptrl
  1131  001076  C050  FFF7         	movff	sprintf@f+1,tblptrh
  1132  00107A                     	if	0	;tblptru may be non-zero
  1133  00107A                     	endif
  1134  00107A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1135  00107A  0E00               	movlw	low (__mediumconst shr (0+16))
  1136  00107C  6EF8               	movwf	tblptru,c
  1137  00107E                     	endif
  1138  00107E  0008               	tblrd		*
  1139  001080  50F5               	movf	tablat,w,c
  1140  001082  6E57               	movwf	(??_sprintf+2)^0,c
  1141  001084  6A58               	clrf	(??_sprintf+3)^0,c
  1142  001086  5055               	movf	??_sprintf^0,w,c
  1143  001088  2657               	addwf	(??_sprintf+2)^0,f,c
  1144  00108A  5056               	movf	(??_sprintf+1)^0,w,c
  1145  00108C  2258               	addwfc	(??_sprintf+3)^0,f,c
  1146  00108E  5057               	movf	(??_sprintf+2)^0,w,c
  1147  001090  0100               	movlb	0	; () banked
  1148  001092  2772               	addwf	sprintf@prec& (0+255),f,b
  1149  001094  5058               	movf	(??_sprintf+3)^0,w,c
  1150  001096  2373               	addwfc	(sprintf@prec+1)& (0+255),f,b
  1151  001098                     
  1152                           ; BSR set to: 0
  1153  001098  4A4F               	infsnz	sprintf@f^0,f,c
  1154  00109A  2A50               	incf	(sprintf@f+1)^0,f,c
  1155  00109C                     l3269:
  1156                           
  1157                           ; BSR set to: 0
  1158  00109C  C04F  FFF6         	movff	sprintf@f,tblptrl
  1159  0010A0  C050  FFF7         	movff	sprintf@f+1,tblptrh
  1160  0010A4                     	if	0	;tblptru may be non-zero
  1161  0010A4                     	endif
  1162  0010A4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1163  0010A4  0E00               	movlw	low (__mediumconst shr (0+16))
  1164  0010A6  6EF8               	movwf	tblptru,c
  1165  0010A8                     	endif
  1166  0010A8  0008               	tblrd		*
  1167  0010AA  50F5               	movf	tablat,w,c
  1168  0010AC  EC94  F01C         	call	_isdigit
  1169  0010B0  B0D8               	btfsc	status,0,c
  1170  0010B2  EF5D  F008         	goto	u3721
  1171  0010B6  EF5F  F008         	goto	u3720
  1172  0010BA                     u3721:
  1173  0010BA  EF27  F008         	goto	l3263
  1174  0010BE                     u3720:
  1175  0010BE  EF6B  F008         	goto	l3279
  1176  0010C2                     l3271:
  1177                           
  1178                           ; BSR set to: 0
  1179                           ;doprnt.c: 652: prec = 0;
  1180  0010C2  0E00               	movlw	0
  1181  0010C4  6F73               	movwf	(sprintf@prec+1)& (0+255),b
  1182  0010C6  0E00               	movlw	0
  1183  0010C8  6F72               	movwf	sprintf@prec& (0+255),b
  1184  0010CA                     
  1185                           ; BSR set to: 0
  1186                           ;doprnt.c: 654: flag |= 0x1000;
  1187  0010CA  8967               	bsf	(sprintf@flag+1)& (0+255),4,b
  1188  0010CC  EF6B  F008         	goto	l3279
  1189  0010D0                     l3275:
  1190                           
  1191                           ; BSR set to: 0
  1192                           ;doprnt.c: 689: flag |= 0x400;
  1193  0010D0  8567               	bsf	(sprintf@flag+1)& (0+255),2,b
  1194                           
  1195                           ;doprnt.c: 690: break;
  1196  0010D2  EF82  F008         	goto	l3281
  1197  0010D6                     l3279:
  1198  0010D6  C04F  FFF6         	movff	sprintf@f,tblptrl
  1199  0010DA  C050  FFF7         	movff	sprintf@f+1,tblptrh
  1200  0010DE  4A4F               	infsnz	sprintf@f^0,f,c
  1201  0010E0  2A50               	incf	(sprintf@f+1)^0,f,c
  1202  0010E2                     	if	0	;tblptru may be non-zero
  1203  0010E2                     	endif
  1204  0010E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1205  0010E2  0E00               	movlw	low (__mediumconst shr (0+16))
  1206  0010E4  6EF8               	movwf	tblptru,c
  1207  0010E6                     	endif
  1208  0010E6  0008               	tblrd		*
  1209  0010E8  CFF5 F078          	movff	tablat,sprintf@c
  1210  0010EC  0100               	movlb	0	; () banked
  1211  0010EE  5178               	movf	sprintf@c& (0+255),w,b
  1212                           
  1213                           ; Switch size 1, requested type "simple"
  1214                           ; Number of cases is 2, Range of values is 0 to 102
  1215                           ; switch strategies available:
  1216                           ; Name         Instructions Cycles
  1217                           ; simple_byte            7     4 (average)
  1218                           ;	Chosen strategy is simple_byte
  1219  0010F0  0A00               	xorlw	0	; case 0
  1220  0010F2  B4D8               	btfsc	status,2,c
  1221  0010F4  EF87  F00C         	goto	l3451
  1222  0010F8  0A66               	xorlw	102	; case 102
  1223  0010FA  B4D8               	btfsc	status,2,c
  1224  0010FC  EF68  F008         	goto	l3275
  1225  001100  EF74  F00C         	goto	l3449
  1226  001104                     l3281:
  1227                           
  1228                           ; BSR set to: 0
  1229                           ;doprnt.c: 851: if(flag & (0x700)) {
  1230  001104  0E07               	movlw	7
  1231  001106  1567               	andwf	(sprintf@flag+1)& (0+255),w,b
  1232  001108  B4D8               	btfsc	status,2,c
  1233  00110A  EF89  F008         	goto	u3731
  1234  00110E  EF8B  F008         	goto	u3730
  1235  001112                     u3731:
  1236  001112  EF21  F00C         	goto	l3429
  1237  001116                     u3730:
  1238  001116                     
  1239                           ; BSR set to: 0
  1240                           ;doprnt.c: 853: if(flag & 0x1000)
  1241  001116  A967               	btfss	(sprintf@flag+1)& (0+255),4,b
  1242  001118  EF90  F008         	goto	u3741
  1243  00111C  EF92  F008         	goto	u3740
  1244  001120                     u3741:
  1245  001120  EF96  F008         	goto	l3287
  1246  001124                     u3740:
  1247  001124                     
  1248                           ; BSR set to: 0
  1249                           ;doprnt.c: 855: prec = 6;
  1250  001124  0E00               	movlw	0
  1251  001126  6F73               	movwf	(sprintf@prec+1)& (0+255),b
  1252  001128  0E06               	movlw	6
  1253  00112A  6F72               	movwf	sprintf@prec& (0+255),b
  1254  00112C                     l3287:
  1255                           
  1256                           ; BSR set to: 0
  1257                           ;doprnt.c: 856: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  1258  00112C  C064  FFD9         	movff	sprintf@ap,fsr2l
  1259  001130  C065  FFDA         	movff	sprintf@ap+1,fsr2h
  1260  001134  CFDE F074          	movff	postinc2,sprintf@fval
  1261  001138  CFDE F075          	movff	postinc2,sprintf@fval+1
  1262  00113C  CFDE F076          	movff	postinc2,sprintf@fval+2
  1263  001140  CFDE F077          	movff	postinc2,sprintf@fval+3
  1264  001144                     
  1265                           ; BSR set to: 0
  1266  001144  0E04               	movlw	4
  1267  001146  2764               	addwf	sprintf@ap& (0+255),f,b
  1268  001148  0E00               	movlw	0
  1269  00114A  2365               	addwfc	(sprintf@ap+1)& (0+255),f,b
  1270  00114C                     
  1271                           ; BSR set to: 0
  1272                           ;doprnt.c: 857: if(fval < 0.0) {
  1273  00114C  BF77               	btfsc	(sprintf@fval+3)& (0+255),7,b
  1274  00114E  EFAD  F008         	goto	u3750
  1275  001152  EFAB  F008         	goto	u3751
  1276  001156                     u3751:
  1277  001156  EFC2  F008         	goto	l3297
  1278  00115A                     u3750:
  1279  00115A                     
  1280                           ; BSR set to: 0
  1281                           ;doprnt.c: 858: fval = -fval;
  1282  00115A  C074  F001         	movff	sprintf@fval,___flneg@f1
  1283  00115E  C075  F002         	movff	sprintf@fval+1,___flneg@f1+1
  1284  001162  C076  F003         	movff	sprintf@fval+2,___flneg@f1+2
  1285  001166  C077  F004         	movff	sprintf@fval+3,___flneg@f1+3
  1286  00116A  EC78  F01C         	call	___flneg	;wreg free
  1287  00116E  C001  F074         	movff	?___flneg,sprintf@fval
  1288  001172  C002  F075         	movff	?___flneg+1,sprintf@fval+1
  1289  001176  C003  F076         	movff	?___flneg+2,sprintf@fval+2
  1290  00117A  C004  F077         	movff	?___flneg+3,sprintf@fval+3
  1291  00117E                     
  1292                           ;doprnt.c: 859: flag |= 0x03;
  1293  00117E  0E03               	movlw	3
  1294  001180  0100               	movlb	0	; () banked
  1295  001182  1366               	iorwf	sprintf@flag& (0+255),f,b
  1296  001184                     l3297:
  1297                           
  1298                           ; BSR set to: 0
  1299                           ;doprnt.c: 860: };doprnt.c: 861: eexp = 0;
  1300  001184  0E00               	movlw	0
  1301  001186  6F6D               	movwf	(sprintf@eexp+1)& (0+255),b
  1302  001188  0E00               	movlw	0
  1303  00118A  6F6C               	movwf	sprintf@eexp& (0+255),b
  1304  00118C                     
  1305                           ; BSR set to: 0
  1306                           ;doprnt.c: 862: if( fval!=0) {
  1307  00118C  C074  F001         	movff	sprintf@fval,___fleq@ff1
  1308  001190  C075  F002         	movff	sprintf@fval+1,___fleq@ff1+1
  1309  001194  C076  F003         	movff	sprintf@fval+2,___fleq@ff1+2
  1310  001198  C077  F004         	movff	sprintf@fval+3,___fleq@ff1+3
  1311  00119C  0E00               	movlw	0
  1312  00119E  6E05               	movwf	___fleq@ff2^0,c
  1313  0011A0  0E00               	movlw	0
  1314  0011A2  6E06               	movwf	(___fleq@ff2+1)^0,c
  1315  0011A4  0E00               	movlw	0
  1316  0011A6  6E07               	movwf	(___fleq@ff2+2)^0,c
  1317  0011A8  0E00               	movlw	0
  1318  0011AA  6E08               	movwf	(___fleq@ff2+3)^0,c
  1319  0011AC  EC9B  F01A         	call	___fleq	;wreg free
  1320  0011B0  B0D8               	btfsc	status,0,c
  1321  0011B2  EFDD  F008         	goto	u3761
  1322  0011B6  EFDF  F008         	goto	u3760
  1323  0011BA                     u3761:
  1324  0011BA  EF72  F009         	goto	l3325
  1325  0011BE                     u3760:
  1326  0011BE                     
  1327                           ;doprnt.c: 863: (void)(*(&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255)
      +                           - 126);
  1328  0011BE  0100               	movlb	0	; () banked
  1329  0011C0  3576               	rlcf	(sprintf@fval+2)& (0+255),w,b
  1330  0011C2  3577               	rlcf	(sprintf@fval+3)& (0+255),w,b
  1331  0011C4  0F82               	addlw	130
  1332  0011C6  6F6C               	movwf	sprintf@eexp& (0+255),b
  1333  0011C8  6B6D               	clrf	(sprintf@eexp+1)& (0+255),b
  1334  0011CA  0EFF               	movlw	255
  1335  0011CC  236D               	addwfc	(sprintf@eexp+1)& (0+255),f,b
  1336  0011CE                     
  1337                           ; BSR set to: 0
  1338                           ;doprnt.c: 864: eexp--;
  1339  0011CE  076C               	decf	sprintf@eexp& (0+255),f,b
  1340  0011D0  A0D8               	btfss	status,0,c
  1341  0011D2  076D               	decf	(sprintf@eexp+1)& (0+255),f,b
  1342  0011D4                     
  1343                           ; BSR set to: 0
  1344                           ;doprnt.c: 865: eexp *= 3;
  1345  0011D4  C06C  F001         	movff	sprintf@eexp,___wmul@multiplier
  1346  0011D8  C06D  F002         	movff	sprintf@eexp+1,___wmul@multiplier+1
  1347  0011DC  0E00               	movlw	0
  1348  0011DE  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1349  0011E0  0E03               	movlw	3
  1350  0011E2  6E03               	movwf	___wmul@multiplicand^0,c
  1351  0011E4  ECC1  F01C         	call	___wmul	;wreg free
  1352  0011E8  C001  F06C         	movff	?___wmul,sprintf@eexp
  1353  0011EC  C002  F06D         	movff	?___wmul+1,sprintf@eexp+1
  1354  0011F0                     
  1355                           ;doprnt.c: 866: eexp /= 10;
  1356  0011F0  C06C  F007         	movff	sprintf@eexp,___awdiv@dividend
  1357  0011F4  C06D  F008         	movff	sprintf@eexp+1,___awdiv@dividend+1
  1358  0011F8  0E00               	movlw	0
  1359  0011FA  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  1360  0011FC  0E0A               	movlw	10
  1361  0011FE  6E09               	movwf	___awdiv@divisor^0,c
  1362  001200  ECE1  F019         	call	___awdiv	;wreg free
  1363  001204  C007  F06C         	movff	?___awdiv,sprintf@eexp
  1364  001208  C008  F06D         	movff	?___awdiv+1,sprintf@eexp+1
  1365  00120C                     
  1366                           ;doprnt.c: 867: if(eexp < 0)
  1367  00120C  0100               	movlb	0	; () banked
  1368  00120E  BF6D               	btfsc	(sprintf@eexp+1)& (0+255),7,b
  1369  001210  EF0E  F009         	goto	u3770
  1370  001214  EF0C  F009         	goto	u3771
  1371  001218                     u3771:
  1372  001218  EF11  F009         	goto	l3313
  1373  00121C                     u3770:
  1374  00121C                     
  1375                           ; BSR set to: 0
  1376                           ;doprnt.c: 868: eexp--;
  1377  00121C  076C               	decf	sprintf@eexp& (0+255),f,b
  1378  00121E  A0D8               	btfss	status,0,c
  1379  001220  076D               	decf	(sprintf@eexp+1)& (0+255),f,b
  1380  001222                     l3313:
  1381                           
  1382                           ; BSR set to: 0
  1383                           ;doprnt.c: 872: tmpval.integ = scale(-eexp);
  1384  001222  516C               	movf	sprintf@eexp& (0+255),w,b
  1385  001224  0800               	sublw	0
  1386  001226  ECEE  F00E         	call	_scale
  1387  00122A  C028  F06E         	movff	?_scale,sprintf@tmpval
  1388  00122E  C029  F06F         	movff	?_scale+1,sprintf@tmpval+1
  1389  001232  C02A  F070         	movff	?_scale+2,sprintf@tmpval+2
  1390  001236  C02B  F071         	movff	?_scale+3,sprintf@tmpval+3
  1391  00123A                     
  1392                           ;doprnt.c: 873: tmpval.integ *= fval;
  1393  00123A  C06E  F00F         	movff	sprintf@tmpval,___flmul@b
  1394  00123E  C06F  F010         	movff	sprintf@tmpval+1,___flmul@b+1
  1395  001242  C070  F011         	movff	sprintf@tmpval+2,___flmul@b+2
  1396  001246  C071  F012         	movff	sprintf@tmpval+3,___flmul@b+3
  1397  00124A  C074  F013         	movff	sprintf@fval,___flmul@a
  1398  00124E  C075  F014         	movff	sprintf@fval+1,___flmul@a+1
  1399  001252  C076  F015         	movff	sprintf@fval+2,___flmul@a+2
  1400  001256  C077  F016         	movff	sprintf@fval+3,___flmul@a+3
  1401  00125A  EC18  F011         	call	___flmul	;wreg free
  1402  00125E  C00F  F06E         	movff	?___flmul,sprintf@tmpval
  1403  001262  C010  F06F         	movff	?___flmul+1,sprintf@tmpval+1
  1404  001266  C011  F070         	movff	?___flmul+2,sprintf@tmpval+2
  1405  00126A  C012  F071         	movff	?___flmul+3,sprintf@tmpval+3
  1406  00126E                     
  1407                           ;doprnt.c: 874: if(tmpval.integ < 1.0)
  1408  00126E  C06E  F001         	movff	sprintf@tmpval,___flge@ff1
  1409  001272  C06F  F002         	movff	sprintf@tmpval+1,___flge@ff1+1
  1410  001276  C070  F003         	movff	sprintf@tmpval+2,___flge@ff1+2
  1411  00127A  C071  F004         	movff	sprintf@tmpval+3,___flge@ff1+3
  1412  00127E  0E00               	movlw	0
  1413  001280  6E05               	movwf	___flge@ff2^0,c
  1414  001282  0E00               	movlw	0
  1415  001284  6E06               	movwf	(___flge@ff2+1)^0,c
  1416  001286  0E80               	movlw	128
  1417  001288  6E07               	movwf	(___flge@ff2+2)^0,c
  1418  00128A  0E3F               	movlw	63
  1419  00128C  6E08               	movwf	(___flge@ff2+3)^0,c
  1420  00128E  EC5F  F019         	call	___flge	;wreg free
  1421  001292  B0D8               	btfsc	status,0,c
  1422  001294  EF4E  F009         	goto	u3781
  1423  001298  EF50  F009         	goto	u3780
  1424  00129C                     u3781:
  1425  00129C  EF56  F009         	goto	l3321
  1426  0012A0                     u3780:
  1427  0012A0                     
  1428                           ;doprnt.c: 875: eexp--;
  1429  0012A0  0100               	movlb	0	; () banked
  1430  0012A2  076C               	decf	sprintf@eexp& (0+255),f,b
  1431  0012A4  A0D8               	btfss	status,0,c
  1432  0012A6  076D               	decf	(sprintf@eexp+1)& (0+255),f,b
  1433  0012A8  EF72  F009         	goto	l3325
  1434  0012AC                     l3321:
  1435                           
  1436                           ;doprnt.c: 876: else if(tmpval.integ >= 10.0)
  1437  0012AC  C06E  F001         	movff	sprintf@tmpval,___flge@ff1
  1438  0012B0  C06F  F002         	movff	sprintf@tmpval+1,___flge@ff1+1
  1439  0012B4  C070  F003         	movff	sprintf@tmpval+2,___flge@ff1+2
  1440  0012B8  C071  F004         	movff	sprintf@tmpval+3,___flge@ff1+3
  1441  0012BC  0E00               	movlw	0
  1442  0012BE  6E05               	movwf	___flge@ff2^0,c
  1443  0012C0  0E00               	movlw	0
  1444  0012C2  6E06               	movwf	(___flge@ff2+1)^0,c
  1445  0012C4  0E20               	movlw	32
  1446  0012C6  6E07               	movwf	(___flge@ff2+2)^0,c
  1447  0012C8  0E41               	movlw	65
  1448  0012CA  6E08               	movwf	(___flge@ff2+3)^0,c
  1449  0012CC  EC5F  F019         	call	___flge	;wreg free
  1450  0012D0  A0D8               	btfss	status,0,c
  1451  0012D2  EF6D  F009         	goto	u3791
  1452  0012D6  EF6F  F009         	goto	u3790
  1453  0012DA                     u3791:
  1454  0012DA  EF72  F009         	goto	l3325
  1455  0012DE                     u3790:
  1456  0012DE                     
  1457                           ;doprnt.c: 877: eexp++;
  1458  0012DE  0100               	movlb	0	; () banked
  1459  0012E0  4B6C               	infsnz	sprintf@eexp& (0+255),f,b
  1460  0012E2  2B6D               	incf	(sprintf@eexp+1)& (0+255),f,b
  1461  0012E4                     l3325:
  1462                           
  1463                           ;doprnt.c: 878: };doprnt.c: 1138: if(prec <= 12)
  1464  0012E4  0100               	movlb	0	; () banked
  1465  0012E6  BF73               	btfsc	(sprintf@prec+1)& (0+255),7,b
  1466  0012E8  EF81  F009         	goto	u3800
  1467  0012EC  5173               	movf	(sprintf@prec+1)& (0+255),w,b
  1468  0012EE  E107               	bnz	u3801
  1469  0012F0  0E0D               	movlw	13
  1470  0012F2  5D72               	subwf	sprintf@prec& (0+255),w,b
  1471  0012F4  B0D8               	btfsc	status,0,c
  1472  0012F6  EF7F  F009         	goto	u3801
  1473  0012FA  EF81  F009         	goto	u3800
  1474  0012FE                     u3801:
  1475  0012FE  EF9E  F009         	goto	l3329
  1476  001302                     u3800:
  1477  001302                     
  1478                           ; BSR set to: 0
  1479                           ;doprnt.c: 1139: fval += fround((unsigned int)prec);
  1480  001302  C074  F035         	movff	sprintf@fval,___fladd@b
  1481  001306  C075  F036         	movff	sprintf@fval+1,___fladd@b+1
  1482  00130A  C076  F037         	movff	sprintf@fval+2,___fladd@b+2
  1483  00130E  C077  F038         	movff	sprintf@fval+3,___fladd@b+3
  1484  001312  5172               	movf	sprintf@prec& (0+255),w,b
  1485  001314  EC2D  F013         	call	_fround
  1486  001318  C028  F039         	movff	?_fround,___fladd@a
  1487  00131C  C029  F03A         	movff	?_fround+1,___fladd@a+1
  1488  001320  C02A  F03B         	movff	?_fround+2,___fladd@a+2
  1489  001324  C02B  F03C         	movff	?_fround+3,___fladd@a+3
  1490  001328  EC8E  F00C         	call	___fladd	;wreg free
  1491  00132C  C035  F074         	movff	?___fladd,sprintf@fval
  1492  001330  C036  F075         	movff	?___fladd+1,sprintf@fval+1
  1493  001334  C037  F076         	movff	?___fladd+2,sprintf@fval+2
  1494  001338  C038  F077         	movff	?___fladd+3,sprintf@fval+3
  1495  00133C                     l3329:
  1496                           
  1497                           ;doprnt.c: 1142: if((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  1498  00133C  0100               	movlb	0	; () banked
  1499  00133E  BF6D               	btfsc	(sprintf@eexp+1)& (0+255),7,b
  1500  001340  EFAD  F009         	goto	u3810
  1501  001344  516D               	movf	(sprintf@eexp+1)& (0+255),w,b
  1502  001346  E107               	bnz	u3811
  1503  001348  0E0A               	movlw	10
  1504  00134A  5D6C               	subwf	sprintf@eexp& (0+255),w,b
  1505  00134C  B0D8               	btfsc	status,0,c
  1506  00134E  EFAB  F009         	goto	u3811
  1507  001352  EFAD  F009         	goto	u3810
  1508  001356                     u3811:
  1509  001356  EFEA  F009         	goto	l3337
  1510  00135A                     u3810:
  1511  00135A                     
  1512                           ; BSR set to: 0
  1513  00135A  C074  F001         	movff	sprintf@fval,___fleq@ff1
  1514  00135E  C075  F002         	movff	sprintf@fval+1,___fleq@ff1+1
  1515  001362  C076  F003         	movff	sprintf@fval+2,___fleq@ff1+2
  1516  001366  C077  F004         	movff	sprintf@fval+3,___fleq@ff1+3
  1517  00136A  0E00               	movlw	0
  1518  00136C  6E05               	movwf	___fleq@ff2^0,c
  1519  00136E  0E00               	movlw	0
  1520  001370  6E06               	movwf	(___fleq@ff2+1)^0,c
  1521  001372  0E00               	movlw	0
  1522  001374  6E07               	movwf	(___fleq@ff2+2)^0,c
  1523  001376  0E00               	movlw	0
  1524  001378  6E08               	movwf	(___fleq@ff2+3)^0,c
  1525  00137A  EC9B  F01A         	call	___fleq	;wreg free
  1526  00137E  B0D8               	btfsc	status,0,c
  1527  001380  EFC4  F009         	goto	u3821
  1528  001384  EFC6  F009         	goto	u3820
  1529  001388                     u3821:
  1530  001388  EF3F  F00A         	goto	l3351
  1531  00138C                     u3820:
  1532  00138C  C074  F031         	movff	sprintf@fval,___fltol@f1
  1533  001390  C075  F032         	movff	sprintf@fval+1,___fltol@f1+1
  1534  001394  C076  F033         	movff	sprintf@fval+2,___fltol@f1+2
  1535  001398  C077  F034         	movff	sprintf@fval+3,___fltol@f1+3
  1536  00139C  ECDC  F018         	call	___fltol	;wreg free
  1537  0013A0  5031               	movf	?___fltol^0,w,c
  1538  0013A2  1032               	iorwf	(?___fltol+1)^0,w,c
  1539  0013A4  1033               	iorwf	(?___fltol+2)^0,w,c
  1540  0013A6  1034               	iorwf	(?___fltol+3)^0,w,c
  1541  0013A8  A4D8               	btfss	status,2,c
  1542  0013AA  EFD9  F009         	goto	u3831
  1543  0013AE  EFDB  F009         	goto	u3830
  1544  0013B2                     u3831:
  1545  0013B2  EF3F  F00A         	goto	l3351
  1546  0013B6                     u3830:
  1547  0013B6  0100               	movlb	0	; () banked
  1548  0013B8  BF6D               	btfsc	(sprintf@eexp+1)& (0+255),7,b
  1549  0013BA  EFE8  F009         	goto	u3841
  1550  0013BE  516D               	movf	(sprintf@eexp+1)& (0+255),w,b
  1551  0013C0  E109               	bnz	u3840
  1552  0013C2  0E02               	movlw	2
  1553  0013C4  5D6C               	subwf	sprintf@eexp& (0+255),w,b
  1554  0013C6  A0D8               	btfss	status,0,c
  1555  0013C8  EFE8  F009         	goto	u3841
  1556  0013CC  EFEA  F009         	goto	u3840
  1557  0013D0                     u3841:
  1558  0013D0  EF3F  F00A         	goto	l3351
  1559  0013D4                     u3840:
  1560  0013D4                     l3337:
  1561                           
  1562                           ; BSR set to: 0
  1563                           ;doprnt.c: 1146: if(tmpval.integ < 4.294967296){
  1564  0013D4  C06E  F001         	movff	sprintf@tmpval,___flge@ff1
  1565  0013D8  C06F  F002         	movff	sprintf@tmpval+1,___flge@ff1+1
  1566  0013DC  C070  F003         	movff	sprintf@tmpval+2,___flge@ff1+2
  1567  0013E0  C071  F004         	movff	sprintf@tmpval+3,___flge@ff1+3
  1568  0013E4  0E5F               	movlw	95
  1569  0013E6  6E05               	movwf	___flge@ff2^0,c
  1570  0013E8  0E70               	movlw	112
  1571  0013EA  6E06               	movwf	(___flge@ff2+1)^0,c
  1572  0013EC  0E89               	movlw	137
  1573  0013EE  6E07               	movwf	(___flge@ff2+2)^0,c
  1574  0013F0  0E40               	movlw	64
  1575  0013F2  6E08               	movwf	(___flge@ff2+3)^0,c
  1576  0013F4  EC5F  F019         	call	___flge	;wreg free
  1577  0013F8  B0D8               	btfsc	status,0,c
  1578  0013FA  EF01  F00A         	goto	u3851
  1579  0013FE  EF03  F00A         	goto	u3850
  1580  001402                     u3851:
  1581  001402  EF0A  F00A         	goto	l3341
  1582  001406                     u3850:
  1583  001406                     
  1584                           ;doprnt.c: 1147: eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
  1585  001406  0100               	movlb	0	; () banked
  1586  001408  0EF7               	movlw	247
  1587  00140A  276C               	addwf	sprintf@eexp& (0+255),f,b
  1588  00140C  0EFF               	movlw	255
  1589  00140E  236D               	addwfc	(sprintf@eexp+1)& (0+255),f,b
  1590                           
  1591                           ;doprnt.c: 1148: }else{
  1592  001410  EF0F  F00A         	goto	l3343
  1593  001414                     l3341:
  1594                           
  1595                           ;doprnt.c: 1149: eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
  1596  001414  0100               	movlb	0	; () banked
  1597  001416  0EF8               	movlw	248
  1598  001418  276C               	addwf	sprintf@eexp& (0+255),f,b
  1599  00141A  0EFF               	movlw	255
  1600  00141C  236D               	addwfc	(sprintf@eexp+1)& (0+255),f,b
  1601  00141E                     l3343:
  1602                           
  1603                           ; BSR set to: 0
  1604                           ;doprnt.c: 1152: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  1605  00141E  516C               	movf	sprintf@eexp& (0+255),w,b
  1606  001420  ECEE  F00E         	call	_scale
  1607  001424  C028  F06E         	movff	?_scale,sprintf@tmpval
  1608  001428  C029  F06F         	movff	?_scale+1,sprintf@tmpval+1
  1609  00142C  C02A  F070         	movff	?_scale+2,sprintf@tmpval+2
  1610  001430  C02B  F071         	movff	?_scale+3,sprintf@tmpval+3
  1611  001434  C074  F001         	movff	sprintf@fval,__div_to_l_@f1
  1612  001438  C075  F002         	movff	sprintf@fval+1,__div_to_l_@f1+1
  1613  00143C  C076  F003         	movff	sprintf@fval+2,__div_to_l_@f1+2
  1614  001440  C077  F004         	movff	sprintf@fval+3,__div_to_l_@f1+3
  1615  001444  C06E  F005         	movff	sprintf@tmpval,__div_to_l_@f2
  1616  001448  C06F  F006         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  1617  00144C  C070  F007         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  1618  001450  C071  F008         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  1619  001454  ECA5  F017         	call	__div_to_l_	;wreg free
  1620  001458  C001  F068         	movff	?__div_to_l_,sprintf@val
  1621  00145C  C002  F069         	movff	?__div_to_l_+1,sprintf@val+1
  1622  001460  C003  F06A         	movff	?__div_to_l_+2,sprintf@val+2
  1623  001464  C004  F06B         	movff	?__div_to_l_+3,sprintf@val+3
  1624  001468                     
  1625                           ;doprnt.c: 1155: fval = 0.0;
  1626  001468  0E00               	movlw	0
  1627  00146A  0100               	movlb	0	; () banked
  1628  00146C  6F74               	movwf	sprintf@fval& (0+255),b
  1629  00146E  0E00               	movlw	0
  1630  001470  6F75               	movwf	(sprintf@fval+1)& (0+255),b
  1631  001472  0E00               	movlw	0
  1632  001474  6F76               	movwf	(sprintf@fval+2)& (0+255),b
  1633  001476  0E00               	movlw	0
  1634  001478  6F77               	movwf	(sprintf@fval+3)& (0+255),b
  1635                           
  1636                           ;doprnt.c: 1156: } else {
  1637  00147A  EF7B  F00A         	goto	l3355
  1638  00147E                     l3351:
  1639                           
  1640                           ;doprnt.c: 1157: val = (unsigned long)fval;
  1641  00147E  C074  F031         	movff	sprintf@fval,___fltol@f1
  1642  001482  C075  F032         	movff	sprintf@fval+1,___fltol@f1+1
  1643  001486  C076  F033         	movff	sprintf@fval+2,___fltol@f1+2
  1644  00148A  C077  F034         	movff	sprintf@fval+3,___fltol@f1+3
  1645  00148E  ECDC  F018         	call	___fltol	;wreg free
  1646  001492  C031  F068         	movff	?___fltol,sprintf@val
  1647  001496  C032  F069         	movff	?___fltol+1,sprintf@val+1
  1648  00149A  C033  F06A         	movff	?___fltol+2,sprintf@val+2
  1649  00149E  C034  F06B         	movff	?___fltol+3,sprintf@val+3
  1650                           
  1651                           ;doprnt.c: 1158: fval -= (double)val;
  1652  0014A2  C074  F045         	movff	sprintf@fval,___flsub@b
  1653  0014A6  C075  F046         	movff	sprintf@fval+1,___flsub@b+1
  1654  0014AA  C076  F047         	movff	sprintf@fval+2,___flsub@b+2
  1655  0014AE  C077  F048         	movff	sprintf@fval+3,___flsub@b+3
  1656  0014B2  C068  F001         	movff	sprintf@val,___xxtofl@val
  1657  0014B6  C069  F002         	movff	sprintf@val+1,___xxtofl@val+1
  1658  0014BA  C06A  F003         	movff	sprintf@val+2,___xxtofl@val+2
  1659  0014BE  C06B  F004         	movff	sprintf@val+3,___xxtofl@val+3
  1660  0014C2  0E00               	movlw	0
  1661  0014C4  EC90  F014         	call	___xxtofl
  1662  0014C8  C001  F049         	movff	?___xxtofl,___flsub@a
  1663  0014CC  C002  F04A         	movff	?___xxtofl+1,___flsub@a+1
  1664  0014D0  C003  F04B         	movff	?___xxtofl+2,___flsub@a+2
  1665  0014D4  C004  F04C         	movff	?___xxtofl+3,___flsub@a+3
  1666  0014D8  EC55  F01C         	call	___flsub	;wreg free
  1667  0014DC  C045  F074         	movff	?___flsub,sprintf@fval
  1668  0014E0  C046  F075         	movff	?___flsub+1,sprintf@fval+1
  1669  0014E4  C047  F076         	movff	?___flsub+2,sprintf@fval+2
  1670  0014E8  C048  F077         	movff	?___flsub+3,sprintf@fval+3
  1671  0014EC                     
  1672                           ;doprnt.c: 1159: eexp = 0;
  1673  0014EC  0E00               	movlw	0
  1674  0014EE  0100               	movlb	0	; () banked
  1675  0014F0  6F6D               	movwf	(sprintf@eexp+1)& (0+255),b
  1676  0014F2  0E00               	movlw	0
  1677  0014F4  6F6C               	movwf	sprintf@eexp& (0+255),b
  1678  0014F6                     l3355:
  1679                           
  1680                           ; BSR set to: 0
  1681                           ;doprnt.c: 1160: };doprnt.c: 1162: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ;
      +                           c++)
  1682  0014F6  0E01               	movlw	1
  1683  0014F8  6F78               	movwf	sprintf@c& (0+255),b
  1684  0014FA                     l3361:
  1685                           
  1686                           ; BSR set to: 0
  1687                           ;doprnt.c: 1163: if(val < dpowers[c])
  1688  0014FA  5178               	movf	sprintf@c& (0+255),w,b
  1689  0014FC  0D04               	mullw	4
  1690  0014FE  0E69               	movlw	low _dpowers
  1691  001500  24F3               	addwf	243,w,c
  1692  001502  6EF6               	movwf	tblptrl,c
  1693  001504  0E0F               	movlw	high _dpowers
  1694  001506  20F4               	addwfc	244,w,c
  1695  001508  6EF7               	movwf	tblptrh,c
  1696  00150A                     	if	1	;There are 3 active tblptr bytes
  1697  00150A  6AF8               	clrf	tblptru,c
  1698  00150C  0E00               	movlw	low (__mediumconst shr (0+16))
  1699  00150E  22F8               	addwfc	tblptru,f,c
  1700  001510                     	endif
  1701  001510  0009               	tblrd		*+
  1702  001512  50F5               	movf	tablat,w,c
  1703  001514  5D68               	subwf	sprintf@val& (0+255),w,b
  1704  001516  0009               	tblrd		*+
  1705  001518  50F5               	movf	tablat,w,c
  1706  00151A  5969               	subwfb	(sprintf@val+1)& (0+255),w,b
  1707  00151C  0009               	tblrd		*+
  1708  00151E  50F5               	movf	tablat,w,c
  1709  001520  596A               	subwfb	(sprintf@val+2)& (0+255),w,b
  1710  001522  0009               	tblrd		*+
  1711  001524  50F5               	movf	tablat,w,c
  1712  001526  596B               	subwfb	(sprintf@val+3)& (0+255),w,b
  1713  001528  B0D8               	btfsc	status,0,c
  1714  00152A  EF99  F00A         	goto	u3861
  1715  00152E  EF9B  F00A         	goto	u3860
  1716  001532                     u3861:
  1717  001532  EF9D  F00A         	goto	l3365
  1718  001536                     u3860:
  1719  001536  EFA7  F00A         	goto	l3369
  1720  00153A                     l3365:
  1721                           
  1722                           ; BSR set to: 0
  1723  00153A  2B78               	incf	sprintf@c& (0+255),f,b
  1724  00153C                     
  1725                           ; BSR set to: 0
  1726  00153C  0E0A               	movlw	10
  1727  00153E  1978               	xorwf	sprintf@c& (0+255),w,b
  1728  001540  A4D8               	btfss	status,2,c
  1729  001542  EFA5  F00A         	goto	u3871
  1730  001546  EFA7  F00A         	goto	u3870
  1731  00154A                     u3871:
  1732  00154A  EF7D  F00A         	goto	l3361
  1733  00154E                     u3870:
  1734  00154E                     l3369:
  1735                           
  1736                           ; BSR set to: 0
  1737                           ;doprnt.c: 1201: {;doprnt.c: 1214: if(flag & 0x03)
  1738  00154E  0E03               	movlw	3
  1739  001550  1566               	andwf	sprintf@flag& (0+255),w,b
  1740  001552  6E55               	movwf	??_sprintf^0,c
  1741  001554  0E00               	movlw	0
  1742  001556  1567               	andwf	(sprintf@flag+1)& (0+255),w,b
  1743  001558  6E56               	movwf	(??_sprintf+1)^0,c
  1744  00155A  5055               	movf	??_sprintf^0,w,c
  1745  00155C  1056               	iorwf	(??_sprintf+1)^0,w,c
  1746  00155E  B4D8               	btfsc	status,2,c
  1747  001560  EFB4  F00A         	goto	u3881
  1748  001564  EFB6  F00A         	goto	u3880
  1749  001568                     u3881:
  1750  001568  EF0D  F00B         	goto	l3383
  1751  00156C                     u3880:
  1752  00156C                     
  1753                           ; BSR set to: 0
  1754                           ;doprnt.c: 1216: ((*sp++ = ('-')));
  1755  00156C  C04D  FFD9         	movff	sprintf@sp,fsr2l
  1756  001570  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  1757  001574  0E2D               	movlw	45
  1758  001576  6EDF               	movwf	indf2,c
  1759  001578                     l3373:
  1760                           
  1761                           ; BSR set to: 0
  1762  001578  4A4D               	infsnz	sprintf@sp^0,f,c
  1763  00157A  2A4E               	incf	(sprintf@sp+1)^0,f,c
  1764  00157C  EF0D  F00B         	goto	l3383
  1765  001580                     l3375:
  1766                           
  1767                           ; BSR set to: 0
  1768                           ;doprnt.c: 1226: {;doprnt.c: 1227: tmpval.vd = val/dpowers[c];
  1769  001580  C068  F001         	movff	sprintf@val,___lldiv@dividend
  1770  001584  C069  F002         	movff	sprintf@val+1,___lldiv@dividend+1
  1771  001588  C06A  F003         	movff	sprintf@val+2,___lldiv@dividend+2
  1772  00158C  C06B  F004         	movff	sprintf@val+3,___lldiv@dividend+3
  1773  001590  5178               	movf	sprintf@c& (0+255),w,b
  1774  001592  0D04               	mullw	4
  1775  001594  0E69               	movlw	low _dpowers
  1776  001596  24F3               	addwf	243,w,c
  1777  001598  6EF6               	movwf	tblptrl,c
  1778  00159A  0E0F               	movlw	high _dpowers
  1779  00159C  20F4               	addwfc	244,w,c
  1780  00159E  6EF7               	movwf	tblptrh,c
  1781  0015A0                     	if	1	;There are 3 active tblptr bytes
  1782  0015A0  6AF8               	clrf	tblptru,c
  1783  0015A2  0E00               	movlw	low (__mediumconst shr (0+16))
  1784  0015A4  22F8               	addwfc	tblptru,f,c
  1785  0015A6                     	endif
  1786  0015A6  0009               	tblrd		*+
  1787  0015A8  CFF5 F005          	movff	tablat,___lldiv@divisor
  1788  0015AC  0009               	tblrd		*+
  1789  0015AE  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  1790  0015B2  0009               	tblrd		*+
  1791  0015B4  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  1792  0015B8  000A               	tblrd		*-
  1793  0015BA  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  1794  0015BE  ECF0  F01A         	call	___lldiv	;wreg free
  1795  0015C2  C001  F06E         	movff	?___lldiv,sprintf@tmpval
  1796  0015C6  C002  F06F         	movff	?___lldiv+1,sprintf@tmpval+1
  1797  0015CA  C003  F070         	movff	?___lldiv+2,sprintf@tmpval+2
  1798  0015CE  C004  F071         	movff	?___lldiv+3,sprintf@tmpval+3
  1799  0015D2                     
  1800                           ;doprnt.c: 1228: tmpval.vd %= 10;
  1801  0015D2  C06E  F001         	movff	sprintf@tmpval,___llmod@dividend
  1802  0015D6  C06F  F002         	movff	sprintf@tmpval+1,___llmod@dividend+1
  1803  0015DA  C070  F003         	movff	sprintf@tmpval+2,___llmod@dividend+2
  1804  0015DE  C071  F004         	movff	sprintf@tmpval+3,___llmod@dividend+3
  1805  0015E2  0E0A               	movlw	10
  1806  0015E4  6E05               	movwf	___llmod@divisor^0,c
  1807  0015E6  0E00               	movlw	0
  1808  0015E8  6E06               	movwf	(___llmod@divisor+1)^0,c
  1809  0015EA  0E00               	movlw	0
  1810  0015EC  6E07               	movwf	(___llmod@divisor+2)^0,c
  1811  0015EE  0E00               	movlw	0
  1812  0015F0  6E08               	movwf	(___llmod@divisor+3)^0,c
  1813  0015F2  EC42  F01B         	call	___llmod	;wreg free
  1814  0015F6  C001  F06E         	movff	?___llmod,sprintf@tmpval
  1815  0015FA  C002  F06F         	movff	?___llmod+1,sprintf@tmpval+1
  1816  0015FE  C003  F070         	movff	?___llmod+2,sprintf@tmpval+2
  1817  001602  C004  F071         	movff	?___llmod+3,sprintf@tmpval+3
  1818  001606                     
  1819                           ;doprnt.c: 1229: ((*sp++ = ('0' + tmpval.vd)));
  1820  001606  0100               	movlb	0	; () banked
  1821  001608  516E               	movf	sprintf@tmpval& (0+255),w,b
  1822  00160A  0F30               	addlw	48
  1823  00160C  C04D  FFD9         	movff	sprintf@sp,fsr2l
  1824  001610  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  1825  001614  6EDF               	movwf	indf2,c
  1826  001616  EFBC  F00A         	goto	l3373
  1827  00161A                     l3383:
  1828                           
  1829                           ; BSR set to: 0
  1830  00161A  0778               	decf	sprintf@c& (0+255),f,b
  1831  00161C  2978               	incf	sprintf@c& (0+255),w,b
  1832  00161E  A4D8               	btfss	status,2,c
  1833  001620  EF14  F00B         	goto	u3891
  1834  001624  EF16  F00B         	goto	u3890
  1835  001628                     u3891:
  1836  001628  EFC0  F00A         	goto	l3375
  1837  00162C                     u3890:
  1838  00162C  EF23  F00B         	goto	l3391
  1839  001630                     l3385:
  1840                           
  1841                           ; BSR set to: 0
  1842                           ;doprnt.c: 1234: ((*sp++ = ('0')));
  1843  001630  C04D  FFD9         	movff	sprintf@sp,fsr2l
  1844  001634  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  1845  001638  0E30               	movlw	48
  1846  00163A  6EDF               	movwf	indf2,c
  1847  00163C                     
  1848                           ; BSR set to: 0
  1849  00163C  4A4D               	infsnz	sprintf@sp^0,f,c
  1850  00163E  2A4E               	incf	(sprintf@sp+1)^0,f,c
  1851  001640                     
  1852                           ; BSR set to: 0
  1853                           ;doprnt.c: 1235: eexp--;
  1854  001640  076C               	decf	sprintf@eexp& (0+255),f,b
  1855  001642  A0D8               	btfss	status,0,c
  1856  001644  076D               	decf	(sprintf@eexp+1)& (0+255),f,b
  1857  001646                     l3391:
  1858                           
  1859                           ; BSR set to: 0
  1860  001646  BF6D               	btfsc	(sprintf@eexp+1)& (0+255),7,b
  1861  001648  EF30  F00B         	goto	u3900
  1862  00164C  516D               	movf	(sprintf@eexp+1)& (0+255),w,b
  1863  00164E  E106               	bnz	u3901
  1864  001650  056C               	decf	sprintf@eexp& (0+255),w,b
  1865  001652  B0D8               	btfsc	status,0,c
  1866  001654  EF2E  F00B         	goto	u3901
  1867  001658  EF30  F00B         	goto	u3900
  1868  00165C                     u3901:
  1869  00165C  EF18  F00B         	goto	l3385
  1870  001660                     u3900:
  1871  001660                     
  1872                           ; BSR set to: 0
  1873                           ;doprnt.c: 1236: };doprnt.c: 1237: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2)
      +                          )
  1874  001660  BF73               	btfsc	(sprintf@prec+1)& (0+255),7,b
  1875  001662  EF3C  F00B         	goto	u3911
  1876  001666  5173               	movf	(sprintf@prec+1)& (0+255),w,b
  1877  001668  E109               	bnz	u3910
  1878  00166A  0E09               	movlw	9
  1879  00166C  5D72               	subwf	sprintf@prec& (0+255),w,b
  1880  00166E  A0D8               	btfss	status,0,c
  1881  001670  EF3C  F00B         	goto	u3911
  1882  001674  EF3E  F00B         	goto	u3910
  1883  001678                     u3911:
  1884  001678  EF42  F00B         	goto	l217
  1885  00167C                     u3910:
  1886  00167C                     
  1887                           ; BSR set to: 0
  1888                           ;doprnt.c: 1238: c = (sizeof dpowers/sizeof dpowers[0])-2;
  1889  00167C  0E08               	movlw	8
  1890  00167E  6F78               	movwf	sprintf@c& (0+255),b
  1891  001680  EF44  F00B         	goto	l3397
  1892  001684                     l217:
  1893                           
  1894                           ; BSR set to: 0
  1895                           ;doprnt.c: 1239: else;doprnt.c: 1240: c = (char)prec;
  1896  001684  C072  F078         	movff	sprintf@prec,sprintf@c
  1897  001688                     l3397:
  1898                           
  1899                           ; BSR set to: 0
  1900                           ;doprnt.c: 1241: prec -= (int)c;
  1901  001688  5178               	movf	sprintf@c& (0+255),w,b
  1902  00168A  5F72               	subwf	sprintf@prec& (0+255),f,b
  1903  00168C  0E00               	movlw	0
  1904  00168E  5B73               	subwfb	(sprintf@prec+1)& (0+255),f,b
  1905  001690                     
  1906                           ; BSR set to: 0
  1907                           ;doprnt.c: 1245: if(c)
  1908  001690  5178               	movf	sprintf@c& (0+255),w,b
  1909  001692  B4D8               	btfsc	status,2,c
  1910  001694  EF4E  F00B         	goto	u3921
  1911  001698  EF50  F00B         	goto	u3920
  1912  00169C                     u3921:
  1913  00169C  EF58  F00B         	goto	l3405
  1914  0016A0                     u3920:
  1915  0016A0                     
  1916                           ; BSR set to: 0
  1917                           ;doprnt.c: 1247: ((*sp++ = ('.')));
  1918  0016A0  C04D  FFD9         	movff	sprintf@sp,fsr2l
  1919  0016A4  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  1920  0016A8  0E2E               	movlw	46
  1921  0016AA  6EDF               	movwf	indf2,c
  1922  0016AC                     
  1923                           ; BSR set to: 0
  1924  0016AC  4A4D               	infsnz	sprintf@sp^0,f,c
  1925  0016AE  2A4E               	incf	(sprintf@sp+1)^0,f,c
  1926  0016B0                     l3405:
  1927                           
  1928                           ; BSR set to: 0
  1929                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
  1930  0016B0  5178               	movf	sprintf@c& (0+255),w,b
  1931  0016B2  ECEE  F00E         	call	_scale
  1932  0016B6  C028  F060         	movff	?_scale,_sprintf$1687
  1933  0016BA  C029  F061         	movff	?_scale+1,_sprintf$1687+1
  1934  0016BE  C02A  F062         	movff	?_scale+2,_sprintf$1687+2
  1935  0016C2  C02B  F063         	movff	?_scale+3,_sprintf$1687+3
  1936  0016C6                     
  1937                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
  1938  0016C6  C074  F013         	movff	sprintf@fval,___flmul@a
  1939  0016CA  C075  F014         	movff	sprintf@fval+1,___flmul@a+1
  1940  0016CE  C076  F015         	movff	sprintf@fval+2,___flmul@a+2
  1941  0016D2  C077  F016         	movff	sprintf@fval+3,___flmul@a+3
  1942  0016D6  C060  F00F         	movff	_sprintf$1687,___flmul@b
  1943  0016DA  C061  F010         	movff	_sprintf$1687+1,___flmul@b+1
  1944  0016DE  C062  F011         	movff	_sprintf$1687+2,___flmul@b+2
  1945  0016E2  C063  F012         	movff	_sprintf$1687+3,___flmul@b+3
  1946  0016E6  EC18  F011         	call	___flmul	;wreg free
  1947  0016EA  C00F  F031         	movff	?___flmul,___fltol@f1
  1948  0016EE  C010  F032         	movff	?___flmul+1,___fltol@f1+1
  1949  0016F2  C011  F033         	movff	?___flmul+2,___fltol@f1+2
  1950  0016F6  C012  F034         	movff	?___flmul+3,___fltol@f1+3
  1951  0016FA  ECDC  F018         	call	___fltol	;wreg free
  1952  0016FE  C031  F068         	movff	?___fltol,sprintf@val
  1953  001702  C032  F069         	movff	?___fltol+1,sprintf@val+1
  1954  001706  C033  F06A         	movff	?___fltol+2,sprintf@val+2
  1955  00170A  C034  F06B         	movff	?___fltol+3,sprintf@val+3
  1956                           
  1957                           ;doprnt.c: 1254: while(c--) {
  1958  00170E  EFFF  F00B         	goto	l3419
  1959  001712                     l3409:
  1960                           
  1961                           ; BSR set to: 0
  1962                           ;doprnt.c: 1255: tmpval.vd = val/dpowers[c];
  1963  001712  C068  F001         	movff	sprintf@val,___lldiv@dividend
  1964  001716  C069  F002         	movff	sprintf@val+1,___lldiv@dividend+1
  1965  00171A  C06A  F003         	movff	sprintf@val+2,___lldiv@dividend+2
  1966  00171E  C06B  F004         	movff	sprintf@val+3,___lldiv@dividend+3
  1967  001722  5178               	movf	sprintf@c& (0+255),w,b
  1968  001724  0D04               	mullw	4
  1969  001726  0E69               	movlw	low _dpowers
  1970  001728  24F3               	addwf	243,w,c
  1971  00172A  6EF6               	movwf	tblptrl,c
  1972  00172C  0E0F               	movlw	high _dpowers
  1973  00172E  20F4               	addwfc	244,w,c
  1974  001730  6EF7               	movwf	tblptrh,c
  1975  001732                     	if	1	;There are 3 active tblptr bytes
  1976  001732  6AF8               	clrf	tblptru,c
  1977  001734  0E00               	movlw	low (__mediumconst shr (0+16))
  1978  001736  22F8               	addwfc	tblptru,f,c
  1979  001738                     	endif
  1980  001738  0009               	tblrd		*+
  1981  00173A  CFF5 F005          	movff	tablat,___lldiv@divisor
  1982  00173E  0009               	tblrd		*+
  1983  001740  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  1984  001744  0009               	tblrd		*+
  1985  001746  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  1986  00174A  000A               	tblrd		*-
  1987  00174C  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  1988  001750  ECF0  F01A         	call	___lldiv	;wreg free
  1989  001754  C001  F06E         	movff	?___lldiv,sprintf@tmpval
  1990  001758  C002  F06F         	movff	?___lldiv+1,sprintf@tmpval+1
  1991  00175C  C003  F070         	movff	?___lldiv+2,sprintf@tmpval+2
  1992  001760  C004  F071         	movff	?___lldiv+3,sprintf@tmpval+3
  1993  001764                     
  1994                           ;doprnt.c: 1256: tmpval.vd %= 10;
  1995  001764  C06E  F001         	movff	sprintf@tmpval,___llmod@dividend
  1996  001768  C06F  F002         	movff	sprintf@tmpval+1,___llmod@dividend+1
  1997  00176C  C070  F003         	movff	sprintf@tmpval+2,___llmod@dividend+2
  1998  001770  C071  F004         	movff	sprintf@tmpval+3,___llmod@dividend+3
  1999  001774  0E0A               	movlw	10
  2000  001776  6E05               	movwf	___llmod@divisor^0,c
  2001  001778  0E00               	movlw	0
  2002  00177A  6E06               	movwf	(___llmod@divisor+1)^0,c
  2003  00177C  0E00               	movlw	0
  2004  00177E  6E07               	movwf	(___llmod@divisor+2)^0,c
  2005  001780  0E00               	movlw	0
  2006  001782  6E08               	movwf	(___llmod@divisor+3)^0,c
  2007  001784  EC42  F01B         	call	___llmod	;wreg free
  2008  001788  C001  F06E         	movff	?___llmod,sprintf@tmpval
  2009  00178C  C002  F06F         	movff	?___llmod+1,sprintf@tmpval+1
  2010  001790  C003  F070         	movff	?___llmod+2,sprintf@tmpval+2
  2011  001794  C004  F071         	movff	?___llmod+3,sprintf@tmpval+3
  2012  001798                     
  2013                           ;doprnt.c: 1257: ((*sp++ = ('0' + tmpval.vd)));
  2014  001798  0100               	movlb	0	; () banked
  2015  00179A  516E               	movf	sprintf@tmpval& (0+255),w,b
  2016  00179C  0F30               	addlw	48
  2017  00179E  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2018  0017A2  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2019  0017A6  6EDF               	movwf	indf2,c
  2020  0017A8                     
  2021                           ; BSR set to: 0
  2022  0017A8  4A4D               	infsnz	sprintf@sp^0,f,c
  2023  0017AA  2A4E               	incf	(sprintf@sp+1)^0,f,c
  2024  0017AC                     
  2025                           ; BSR set to: 0
  2026                           ;doprnt.c: 1258: val %= dpowers[c];
  2027  0017AC  C068  F001         	movff	sprintf@val,___llmod@dividend
  2028  0017B0  C069  F002         	movff	sprintf@val+1,___llmod@dividend+1
  2029  0017B4  C06A  F003         	movff	sprintf@val+2,___llmod@dividend+2
  2030  0017B8  C06B  F004         	movff	sprintf@val+3,___llmod@dividend+3
  2031  0017BC  5178               	movf	sprintf@c& (0+255),w,b
  2032  0017BE  0D04               	mullw	4
  2033  0017C0  0E69               	movlw	low _dpowers
  2034  0017C2  24F3               	addwf	243,w,c
  2035  0017C4  6EF6               	movwf	tblptrl,c
  2036  0017C6  0E0F               	movlw	high _dpowers
  2037  0017C8  20F4               	addwfc	244,w,c
  2038  0017CA  6EF7               	movwf	tblptrh,c
  2039  0017CC                     	if	1	;There are 3 active tblptr bytes
  2040  0017CC  6AF8               	clrf	tblptru,c
  2041  0017CE  0E00               	movlw	low (__mediumconst shr (0+16))
  2042  0017D0  22F8               	addwfc	tblptru,f,c
  2043  0017D2                     	endif
  2044  0017D2  0009               	tblrd		*+
  2045  0017D4  CFF5 F005          	movff	tablat,___llmod@divisor
  2046  0017D8  0009               	tblrd		*+
  2047  0017DA  CFF5 F006          	movff	tablat,___llmod@divisor+1
  2048  0017DE  0009               	tblrd		*+
  2049  0017E0  CFF5 F007          	movff	tablat,___llmod@divisor+2
  2050  0017E4  000A               	tblrd		*-
  2051  0017E6  CFF5 F008          	movff	tablat,___llmod@divisor+3
  2052  0017EA  EC42  F01B         	call	___llmod	;wreg free
  2053  0017EE  C001  F068         	movff	?___llmod,sprintf@val
  2054  0017F2  C002  F069         	movff	?___llmod+1,sprintf@val+1
  2055  0017F6  C003  F06A         	movff	?___llmod+2,sprintf@val+2
  2056  0017FA  C004  F06B         	movff	?___llmod+3,sprintf@val+3
  2057  0017FE                     l3419:
  2058  0017FE  0100               	movlb	0	; () banked
  2059  001800  0778               	decf	sprintf@c& (0+255),f,b
  2060  001802  2978               	incf	sprintf@c& (0+255),w,b
  2061  001804  A4D8               	btfss	status,2,c
  2062  001806  EF07  F00C         	goto	u3931
  2063  00180A  EF09  F00C         	goto	u3930
  2064  00180E                     u3931:
  2065  00180E  EF89  F00B         	goto	l3409
  2066  001812                     u3930:
  2067  001812  EF16  F00C         	goto	l3427
  2068  001816                     l3421:
  2069                           
  2070                           ; BSR set to: 0
  2071                           ;doprnt.c: 1262: ((*sp++ = ('0')));
  2072  001816  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2073  00181A  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2074  00181E  0E30               	movlw	48
  2075  001820  6EDF               	movwf	indf2,c
  2076  001822                     
  2077                           ; BSR set to: 0
  2078  001822  4A4D               	infsnz	sprintf@sp^0,f,c
  2079  001824  2A4E               	incf	(sprintf@sp+1)^0,f,c
  2080  001826                     
  2081                           ; BSR set to: 0
  2082                           ;doprnt.c: 1263: prec--;
  2083  001826  0772               	decf	sprintf@prec& (0+255),f,b
  2084  001828  A0D8               	btfss	status,0,c
  2085  00182A  0773               	decf	(sprintf@prec+1)& (0+255),f,b
  2086  00182C                     l3427:
  2087                           
  2088                           ; BSR set to: 0
  2089  00182C  5172               	movf	sprintf@prec& (0+255),w,b
  2090  00182E  1173               	iorwf	(sprintf@prec+1)& (0+255),w,b
  2091  001830  A4D8               	btfss	status,2,c
  2092  001832  EF1D  F00C         	goto	u3941
  2093  001836  EF1F  F00C         	goto	u3940
  2094  00183A                     u3941:
  2095  00183A  EF0B  F00C         	goto	l3421
  2096  00183E                     u3940:
  2097  00183E  EF74  F00C         	goto	l3449
  2098  001842                     l3429:
  2099                           
  2100                           ; BSR set to: 0
  2101                           ;doprnt.c: 1272: };doprnt.c: 1316: if(prec == 0 && val == 0)
  2102  001842  5172               	movf	sprintf@prec& (0+255),w,b
  2103  001844  1173               	iorwf	(sprintf@prec+1)& (0+255),w,b
  2104  001846  A4D8               	btfss	status,2,c
  2105  001848  EF28  F00C         	goto	u3951
  2106  00184C  EF2A  F00C         	goto	u3950
  2107  001850                     u3951:
  2108  001850  EF37  F00C         	goto	l3435
  2109  001854                     u3950:
  2110  001854                     
  2111                           ; BSR set to: 0
  2112  001854  5168               	movf	sprintf@val& (0+255),w,b
  2113  001856  1169               	iorwf	(sprintf@val+1)& (0+255),w,b
  2114  001858  116A               	iorwf	(sprintf@val+2)& (0+255),w,b
  2115  00185A  116B               	iorwf	(sprintf@val+3)& (0+255),w,b
  2116  00185C  A4D8               	btfss	status,2,c
  2117  00185E  EF33  F00C         	goto	u3961
  2118  001862  EF35  F00C         	goto	u3960
  2119  001866                     u3961:
  2120  001866  EF37  F00C         	goto	l3435
  2121  00186A                     u3960:
  2122  00186A                     
  2123                           ; BSR set to: 0
  2124                           ;doprnt.c: 1317: prec++;
  2125  00186A  4B72               	infsnz	sprintf@prec& (0+255),f,b
  2126  00186C  2B73               	incf	(sprintf@prec+1)& (0+255),f,b
  2127  00186E                     l3435:
  2128                           
  2129                           ; BSR set to: 0
  2130                           ;doprnt.c: 1365: if(c < prec)
  2131  00186E  5178               	movf	sprintf@c& (0+255),w,b
  2132  001870  6E55               	movwf	??_sprintf^0,c
  2133  001872  6A56               	clrf	(??_sprintf+1)^0,c
  2134  001874  5172               	movf	sprintf@prec& (0+255),w,b
  2135  001876  5C55               	subwf	??_sprintf^0,w,c
  2136  001878  5056               	movf	(??_sprintf+1)^0,w,c
  2137  00187A  0A80               	xorlw	128
  2138  00187C  6E57               	movwf	(??_sprintf+2)^0,c
  2139  00187E  5173               	movf	(sprintf@prec+1)& (0+255),w,b
  2140  001880  0A80               	xorlw	128
  2141  001882  5857               	subwfb	(??_sprintf+2)^0,w,c
  2142  001884  B0D8               	btfsc	status,0,c
  2143  001886  EF47  F00C         	goto	u3971
  2144  00188A  EF49  F00C         	goto	u3970
  2145  00188E                     u3971:
  2146  00188E  EF4B  F00C         	goto	l3439
  2147  001892                     u3970:
  2148  001892                     
  2149                           ; BSR set to: 0
  2150  001892  EF5D  F00C         	goto	l3443
  2151  001896                     l3439:
  2152                           
  2153                           ; BSR set to: 0
  2154                           ;doprnt.c: 1367: else if(prec < c)
  2155  001896  5178               	movf	sprintf@c& (0+255),w,b
  2156  001898  6E55               	movwf	??_sprintf^0,c
  2157  00189A  6A56               	clrf	(??_sprintf+1)^0,c
  2158  00189C  5055               	movf	??_sprintf^0,w,c
  2159  00189E  5D72               	subwf	sprintf@prec& (0+255),w,b
  2160  0018A0  5173               	movf	(sprintf@prec+1)& (0+255),w,b
  2161  0018A2  0A80               	xorlw	128
  2162  0018A4  6E57               	movwf	(??_sprintf+2)^0,c
  2163  0018A6  5056               	movf	(??_sprintf+1)^0,w,c
  2164  0018A8  0A80               	xorlw	128
  2165  0018AA  5857               	subwfb	(??_sprintf+2)^0,w,c
  2166  0018AC  B0D8               	btfsc	status,0,c
  2167  0018AE  EF5B  F00C         	goto	u3981
  2168  0018B2  EF5D  F00C         	goto	u3980
  2169  0018B6                     u3981:
  2170  0018B6  EF5D  F00C         	goto	l3443
  2171  0018BA                     u3980:
  2172  0018BA                     l3443:
  2173                           
  2174                           ; BSR set to: 0
  2175                           ;doprnt.c: 1448: {;doprnt.c: 1464: if(flag & 0x03)
  2176  0018BA  0E03               	movlw	3
  2177  0018BC  1566               	andwf	sprintf@flag& (0+255),w,b
  2178  0018BE  6E55               	movwf	??_sprintf^0,c
  2179  0018C0  0E00               	movlw	0
  2180  0018C2  1567               	andwf	(sprintf@flag+1)& (0+255),w,b
  2181  0018C4  6E56               	movwf	(??_sprintf+1)^0,c
  2182  0018C6  5055               	movf	??_sprintf^0,w,c
  2183  0018C8  1056               	iorwf	(??_sprintf+1)^0,w,c
  2184  0018CA  B4D8               	btfsc	status,2,c
  2185  0018CC  EF6A  F00C         	goto	u3991
  2186  0018D0  EF6C  F00C         	goto	u3990
  2187  0018D4                     u3991:
  2188  0018D4  EF74  F00C         	goto	l3449
  2189  0018D8                     u3990:
  2190  0018D8                     
  2191                           ; BSR set to: 0
  2192                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  2193  0018D8  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2194  0018DC  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2195  0018E0  0E2D               	movlw	45
  2196  0018E2  6EDF               	movwf	indf2,c
  2197  0018E4  EF06  F008         	goto	l3253
  2198  0018E8                     l3449:
  2199                           
  2200                           ; BSR set to: 0
  2201  0018E8  C04F  FFF6         	movff	sprintf@f,tblptrl
  2202  0018EC  C050  FFF7         	movff	sprintf@f+1,tblptrh
  2203  0018F0  4A4F               	infsnz	sprintf@f^0,f,c
  2204  0018F2  2A50               	incf	(sprintf@f+1)^0,f,c
  2205  0018F4                     	if	0	;tblptru may be non-zero
  2206  0018F4                     	endif
  2207  0018F4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2208  0018F4  0E00               	movlw	low (__mediumconst shr (0+16))
  2209  0018F6  6EF8               	movwf	tblptru,c
  2210  0018F8                     	endif
  2211  0018F8  0008               	tblrd		*
  2212  0018FA  CFF5 F078          	movff	tablat,sprintf@c
  2213  0018FE  5178               	movf	sprintf@c& (0+255),w,b
  2214  001900  A4D8               	btfss	status,2,c
  2215  001902  EF85  F00C         	goto	u4001
  2216  001906  EF87  F00C         	goto	u4000
  2217  00190A                     u4001:
  2218  00190A  EFF7  F007         	goto	l3249
  2219  00190E                     u4000:
  2220  00190E                     l3451:
  2221                           
  2222                           ; BSR set to: 0
  2223                           ;doprnt.c: 1564: *sp = 0;
  2224  00190E  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2225  001912  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2226  001916  0E00               	movlw	0
  2227  001918  6EDF               	movwf	indf2,c
  2228  00191A                     
  2229                           ; BSR set to: 0
  2230  00191A  0012               	return		;funcret
  2231  00191C                     __end_of_sprintf:
  2232                           	callstack 0
  2233                           
  2234 ;; *************** function _scale *****************
  2235 ;; Defined at:
  2236 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c"
  2237 ;; Parameters:    Size  Location     Type
  2238 ;;  scl             1    wreg     char 
  2239 ;; Auto vars:     Size  Location     Type
  2240 ;;  scl             1   47[COMRAM] char 
  2241 ;; Return value:  Size  Location     Type
  2242 ;;                  4   39[COMRAM] char 
  2243 ;; Registers used:
  2244 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2245 ;; Tracked objects:
  2246 ;;		On entry : 0/0
  2247 ;;		On exit  : 0/0
  2248 ;;		Unchanged: 0/0
  2249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2250 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2251 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2253 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2254 ;;Total ram usage:        9 bytes
  2255 ;; Hardware stack levels used: 1
  2256 ;; Hardware stack levels required when called: 2
  2257 ;; This function calls:
  2258 ;;		___awdiv
  2259 ;;		___awmod
  2260 ;;		___flmul
  2261 ;; This function is called by:
  2262 ;;		_sprintf
  2263 ;; This function uses a non-reentrant model
  2264 ;;
  2265                           
  2266                           	psect	text2
  2267  001DDC                     __ptext2:
  2268                           	callstack 0
  2269  001DDC                     _scale:
  2270                           	callstack 27
  2271                           
  2272                           ; BSR set to: 0
  2273                           ;incstack = 0
  2274                           ;scale@scl stored from wreg
  2275  001DDC  6E30               	movwf	scale@scl^0,c
  2276  001DDE                     
  2277                           ;doprnt.c: 436: if(scl < 0) {
  2278  001DDE  BE30               	btfsc	scale@scl^0,7,c
  2279  001DE0  EFF6  F00E         	goto	u3130
  2280  001DE4  EFF4  F00E         	goto	u3131
  2281  001DE8                     u3131:
  2282  001DE8  EF08  F010         	goto	l2877
  2283  001DEC                     u3130:
  2284  001DEC                     
  2285                           ;doprnt.c: 437: scl = -scl;
  2286  001DEC  6C30               	negf	scale@scl^0,c
  2287                           
  2288                           ;doprnt.c: 438: if(scl>=110)
  2289  001DEE  5030               	movf	scale@scl^0,w,c
  2290  001DF0  0A80               	xorlw	128
  2291  001DF2  0F12               	addlw	-238
  2292  001DF4  A0D8               	btfss	status,0,c
  2293  001DF6  EFFF  F00E         	goto	u3141
  2294  001DFA  EF01  F00F         	goto	u3140
  2295  001DFE                     u3141:
  2296  001DFE  EF93  F00F         	goto	l2867
  2297  001E02                     u3140:
  2298  001E02                     
  2299                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  2300  001E02  0E00               	movlw	0
  2301  001E04  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  2302  001E06  0E0A               	movlw	10
  2303  001E08  6E09               	movwf	___awdiv@divisor^0,c
  2304  001E0A  0E00               	movlw	0
  2305  001E0C  6E04               	movwf	(___awmod@divisor+1)^0,c
  2306  001E0E  0E64               	movlw	100
  2307  001E10  6E03               	movwf	___awmod@divisor^0,c
  2308  001E12  5030               	movf	scale@scl^0,w,c
  2309  001E14  6E01               	movwf	___awmod@dividend^0,c
  2310  001E16  6A02               	clrf	(___awmod@dividend+1)^0,c
  2311  001E18  BE01               	btfsc	___awmod@dividend^0,7,c
  2312  001E1A  0602               	decf	(___awmod@dividend+1)^0,f,c
  2313  001E1C  EC43  F01A         	call	___awmod	;wreg free
  2314  001E20  C001  F007         	movff	?___awmod,___awdiv@dividend
  2315  001E24  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  2316  001E28  ECE1  F019         	call	___awdiv	;wreg free
  2317  001E2C  0E09               	movlw	9
  2318  001E2E  2607               	addwf	?___awdiv^0,f,c
  2319  001E30  5007               	movf	?___awdiv^0,w,c
  2320  001E32  0D04               	mullw	4
  2321  001E34  0E35               	movlw	low __npowers_
  2322  001E36  24F3               	addwf	243,w,c
  2323  001E38  6EF6               	movwf	tblptrl,c
  2324  001E3A  0E0F               	movlw	high __npowers_
  2325  001E3C  20F4               	addwfc	244,w,c
  2326  001E3E  6EF7               	movwf	tblptrh,c
  2327  001E40                     	if	1	;There are 3 active tblptr bytes
  2328  001E40  6AF8               	clrf	tblptru,c
  2329  001E42  0E00               	movlw	low (__mediumconst shr (0+16))
  2330  001E44  22F8               	addwfc	tblptru,f,c
  2331  001E46                     	endif
  2332  001E46  0009               	tblrd		*+
  2333  001E48  CFF5 F013          	movff	tablat,___flmul@a
  2334  001E4C  0009               	tblrd		*+
  2335  001E4E  CFF5 F014          	movff	tablat,___flmul@a+1
  2336  001E52  0009               	tblrd		*+
  2337  001E54  CFF5 F015          	movff	tablat,___flmul@a+2
  2338  001E58  000A               	tblrd		*-
  2339  001E5A  CFF5 F016          	movff	tablat,___flmul@a+3
  2340  001E5E  0E00               	movlw	0
  2341  001E60  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  2342  001E62  0E64               	movlw	100
  2343  001E64  6E09               	movwf	___awdiv@divisor^0,c
  2344  001E66  5030               	movf	scale@scl^0,w,c
  2345  001E68  6E07               	movwf	___awdiv@dividend^0,c
  2346  001E6A  6A08               	clrf	(___awdiv@dividend+1)^0,c
  2347  001E6C  BE07               	btfsc	___awdiv@dividend^0,7,c
  2348  001E6E  0608               	decf	(___awdiv@dividend+1)^0,f,c
  2349  001E70  ECE1  F019         	call	___awdiv	;wreg free
  2350  001E74  0E12               	movlw	18
  2351  001E76  2607               	addwf	?___awdiv^0,f,c
  2352  001E78  5007               	movf	?___awdiv^0,w,c
  2353  001E7A  0D04               	mullw	4
  2354  001E7C  0E35               	movlw	low __npowers_
  2355  001E7E  24F3               	addwf	243,w,c
  2356  001E80  6EF6               	movwf	tblptrl,c
  2357  001E82  0E0F               	movlw	high __npowers_
  2358  001E84  20F4               	addwfc	244,w,c
  2359  001E86  6EF7               	movwf	tblptrh,c
  2360  001E88                     	if	1	;There are 3 active tblptr bytes
  2361  001E88  6AF8               	clrf	tblptru,c
  2362  001E8A  0E00               	movlw	low (__mediumconst shr (0+16))
  2363  001E8C  22F8               	addwfc	tblptru,f,c
  2364  001E8E                     	endif
  2365  001E8E  0009               	tblrd		*+
  2366  001E90  CFF5 F00F          	movff	tablat,___flmul@b
  2367  001E94  0009               	tblrd		*+
  2368  001E96  CFF5 F010          	movff	tablat,___flmul@b+1
  2369  001E9A  0009               	tblrd		*+
  2370  001E9C  CFF5 F011          	movff	tablat,___flmul@b+2
  2371  001EA0  000A               	tblrd		*-
  2372  001EA2  CFF5 F012          	movff	tablat,___flmul@b+3
  2373  001EA6  EC18  F011         	call	___flmul	;wreg free
  2374  001EAA  C00F  F02C         	movff	?___flmul,_scale$1686
  2375  001EAE  C010  F02D         	movff	?___flmul+1,_scale$1686+1
  2376  001EB2  C011  F02E         	movff	?___flmul+2,_scale$1686+2
  2377  001EB6  C012  F02F         	movff	?___flmul+3,_scale$1686+3
  2378                           
  2379                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  2380  001EBA  C02C  F00F         	movff	_scale$1686,___flmul@b
  2381  001EBE  C02D  F010         	movff	_scale$1686+1,___flmul@b+1
  2382  001EC2  C02E  F011         	movff	_scale$1686+2,___flmul@b+2
  2383  001EC6  C02F  F012         	movff	_scale$1686+3,___flmul@b+3
  2384  001ECA  0E00               	movlw	0
  2385  001ECC  6E04               	movwf	(___awmod@divisor+1)^0,c
  2386  001ECE  0E0A               	movlw	10
  2387  001ED0  6E03               	movwf	___awmod@divisor^0,c
  2388  001ED2  5030               	movf	scale@scl^0,w,c
  2389  001ED4  6E01               	movwf	___awmod@dividend^0,c
  2390  001ED6  6A02               	clrf	(___awmod@dividend+1)^0,c
  2391  001ED8  BE01               	btfsc	___awmod@dividend^0,7,c
  2392  001EDA  0602               	decf	(___awmod@dividend+1)^0,f,c
  2393  001EDC  EC43  F01A         	call	___awmod	;wreg free
  2394  001EE0  5001               	movf	?___awmod^0,w,c
  2395  001EE2  0D04               	mullw	4
  2396  001EE4  0E35               	movlw	low __npowers_
  2397  001EE6  24F3               	addwf	243,w,c
  2398  001EE8  6EF6               	movwf	tblptrl,c
  2399  001EEA  0E0F               	movlw	high __npowers_
  2400  001EEC  20F4               	addwfc	244,w,c
  2401  001EEE  6EF7               	movwf	tblptrh,c
  2402  001EF0                     	if	1	;There are 3 active tblptr bytes
  2403  001EF0  6AF8               	clrf	tblptru,c
  2404  001EF2  0E00               	movlw	low (__mediumconst shr (0+16))
  2405  001EF4  22F8               	addwfc	tblptru,f,c
  2406  001EF6                     	endif
  2407  001EF6  0009               	tblrd		*+
  2408  001EF8  CFF5 F013          	movff	tablat,___flmul@a
  2409  001EFC  0009               	tblrd		*+
  2410  001EFE  CFF5 F014          	movff	tablat,___flmul@a+1
  2411  001F02  0009               	tblrd		*+
  2412  001F04  CFF5 F015          	movff	tablat,___flmul@a+2
  2413  001F08  000A               	tblrd		*-
  2414  001F0A  CFF5 F016          	movff	tablat,___flmul@a+3
  2415  001F0E  EC18  F011         	call	___flmul	;wreg free
  2416  001F12  C00F  F028         	movff	?___flmul,?_scale
  2417  001F16  C010  F029         	movff	?___flmul+1,?_scale+1
  2418  001F1A  C011  F02A         	movff	?___flmul+2,?_scale+2
  2419  001F1E  C012  F02B         	movff	?___flmul+3,?_scale+3
  2420  001F22  EF17  F011         	goto	l166
  2421  001F26                     l2867:
  2422                           
  2423                           ;doprnt.c: 440: else if(scl > 10)
  2424  001F26  5030               	movf	scale@scl^0,w,c
  2425  001F28  0A80               	xorlw	128
  2426  001F2A  0F75               	addlw	-139
  2427  001F2C  A0D8               	btfss	status,0,c
  2428  001F2E  EF9B  F00F         	goto	u3151
  2429  001F32  EF9D  F00F         	goto	u3150
  2430  001F36                     u3151:
  2431  001F36  EFEF  F00F         	goto	l2873
  2432  001F3A                     u3150:
  2433  001F3A                     
  2434                           ;doprnt.c: 441: return _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(
      +                          scl%10)];
  2435  001F3A  0E00               	movlw	0
  2436  001F3C  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  2437  001F3E  0E0A               	movlw	10
  2438  001F40  6E09               	movwf	___awdiv@divisor^0,c
  2439  001F42  5030               	movf	scale@scl^0,w,c
  2440  001F44  6E07               	movwf	___awdiv@dividend^0,c
  2441  001F46  6A08               	clrf	(___awdiv@dividend+1)^0,c
  2442  001F48  BE07               	btfsc	___awdiv@dividend^0,7,c
  2443  001F4A  0608               	decf	(___awdiv@dividend+1)^0,f,c
  2444  001F4C  ECE1  F019         	call	___awdiv	;wreg free
  2445  001F50  0E09               	movlw	9
  2446  001F52  2607               	addwf	?___awdiv^0,f,c
  2447  001F54  5007               	movf	?___awdiv^0,w,c
  2448  001F56  0D04               	mullw	4
  2449  001F58  0E35               	movlw	low __npowers_
  2450  001F5A  24F3               	addwf	243,w,c
  2451  001F5C  6EF6               	movwf	tblptrl,c
  2452  001F5E  0E0F               	movlw	high __npowers_
  2453  001F60  20F4               	addwfc	244,w,c
  2454  001F62  6EF7               	movwf	tblptrh,c
  2455  001F64                     	if	1	;There are 3 active tblptr bytes
  2456  001F64  6AF8               	clrf	tblptru,c
  2457  001F66  0E00               	movlw	low (__mediumconst shr (0+16))
  2458  001F68  22F8               	addwfc	tblptru,f,c
  2459  001F6A                     	endif
  2460  001F6A  0009               	tblrd		*+
  2461  001F6C  CFF5 F00F          	movff	tablat,___flmul@b
  2462  001F70  0009               	tblrd		*+
  2463  001F72  CFF5 F010          	movff	tablat,___flmul@b+1
  2464  001F76  0009               	tblrd		*+
  2465  001F78  CFF5 F011          	movff	tablat,___flmul@b+2
  2466  001F7C  000A               	tblrd		*-
  2467  001F7E  CFF5 F012          	movff	tablat,___flmul@b+3
  2468  001F82  0E00               	movlw	0
  2469  001F84  6E04               	movwf	(___awmod@divisor+1)^0,c
  2470  001F86  0E0A               	movlw	10
  2471  001F88  6E03               	movwf	___awmod@divisor^0,c
  2472  001F8A  5030               	movf	scale@scl^0,w,c
  2473  001F8C  6E01               	movwf	___awmod@dividend^0,c
  2474  001F8E  6A02               	clrf	(___awmod@dividend+1)^0,c
  2475  001F90  BE01               	btfsc	___awmod@dividend^0,7,c
  2476  001F92  0602               	decf	(___awmod@dividend+1)^0,f,c
  2477  001F94  EC43  F01A         	call	___awmod	;wreg free
  2478  001F98  5001               	movf	?___awmod^0,w,c
  2479  001F9A  0D04               	mullw	4
  2480  001F9C  0E35               	movlw	low __npowers_
  2481  001F9E  24F3               	addwf	243,w,c
  2482  001FA0  6EF6               	movwf	tblptrl,c
  2483  001FA2  0E0F               	movlw	high __npowers_
  2484  001FA4  20F4               	addwfc	244,w,c
  2485  001FA6  6EF7               	movwf	tblptrh,c
  2486  001FA8                     	if	1	;There are 3 active tblptr bytes
  2487  001FA8  6AF8               	clrf	tblptru,c
  2488  001FAA  0E00               	movlw	low (__mediumconst shr (0+16))
  2489  001FAC  22F8               	addwfc	tblptru,f,c
  2490  001FAE                     	endif
  2491  001FAE  0009               	tblrd		*+
  2492  001FB0  CFF5 F013          	movff	tablat,___flmul@a
  2493  001FB4  0009               	tblrd		*+
  2494  001FB6  CFF5 F014          	movff	tablat,___flmul@a+1
  2495  001FBA  0009               	tblrd		*+
  2496  001FBC  CFF5 F015          	movff	tablat,___flmul@a+2
  2497  001FC0  000A               	tblrd		*-
  2498  001FC2  CFF5 F016          	movff	tablat,___flmul@a+3
  2499  001FC6  EC18  F011         	call	___flmul	;wreg free
  2500  001FCA  C00F  F028         	movff	?___flmul,?_scale
  2501  001FCE  C010  F029         	movff	?___flmul+1,?_scale+1
  2502  001FD2  C011  F02A         	movff	?___flmul+2,?_scale+2
  2503  001FD6  C012  F02B         	movff	?___flmul+3,?_scale+3
  2504  001FDA  EF17  F011         	goto	l166
  2505  001FDE                     l2873:
  2506                           
  2507                           ;doprnt.c: 442: return _npowers_[(unsigned char)scl];
  2508  001FDE  5030               	movf	scale@scl^0,w,c
  2509  001FE0  0D04               	mullw	4
  2510  001FE2  0E35               	movlw	low __npowers_
  2511  001FE4  24F3               	addwf	243,w,c
  2512  001FE6  6EF6               	movwf	tblptrl,c
  2513  001FE8  0E0F               	movlw	high __npowers_
  2514  001FEA  20F4               	addwfc	244,w,c
  2515  001FEC  6EF7               	movwf	tblptrh,c
  2516  001FEE                     	if	1	;There are 3 active tblptr bytes
  2517  001FEE  6AF8               	clrf	tblptru,c
  2518  001FF0  0E00               	movlw	low (__mediumconst shr (0+16))
  2519  001FF2  22F8               	addwfc	tblptru,f,c
  2520  001FF4                     	endif
  2521  001FF4  0009               	tblrd		*+
  2522  001FF6  CFF5 F028          	movff	tablat,?_scale
  2523  001FFA  0009               	tblrd		*+
  2524  001FFC  CFF5 F029          	movff	tablat,?_scale+1
  2525  002000  0009               	tblrd		*+
  2526  002002  CFF5 F02A          	movff	tablat,?_scale+2
  2527  002006  000A               	tblrd		*-
  2528  002008  CFF5 F02B          	movff	tablat,?_scale+3
  2529  00200C  EF17  F011         	goto	l166
  2530  002010                     l2877:
  2531                           
  2532                           ;doprnt.c: 443: };doprnt.c: 444: if(scl>=110)
  2533  002010  5030               	movf	scale@scl^0,w,c
  2534  002012  0A80               	xorlw	128
  2535  002014  0F12               	addlw	-238
  2536  002016  A0D8               	btfss	status,0,c
  2537  002018  EF10  F010         	goto	u3161
  2538  00201C  EF12  F010         	goto	u3160
  2539  002020                     u3161:
  2540  002020  EFA4  F010         	goto	l2885
  2541  002024                     u3160:
  2542  002024                     
  2543                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  2544  002024  0E00               	movlw	0
  2545  002026  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  2546  002028  0E0A               	movlw	10
  2547  00202A  6E09               	movwf	___awdiv@divisor^0,c
  2548  00202C  0E00               	movlw	0
  2549  00202E  6E04               	movwf	(___awmod@divisor+1)^0,c
  2550  002030  0E64               	movlw	100
  2551  002032  6E03               	movwf	___awmod@divisor^0,c
  2552  002034  5030               	movf	scale@scl^0,w,c
  2553  002036  6E01               	movwf	___awmod@dividend^0,c
  2554  002038  6A02               	clrf	(___awmod@dividend+1)^0,c
  2555  00203A  BE01               	btfsc	___awmod@dividend^0,7,c
  2556  00203C  0602               	decf	(___awmod@dividend+1)^0,f,c
  2557  00203E  EC43  F01A         	call	___awmod	;wreg free
  2558  002042  C001  F007         	movff	?___awmod,___awdiv@dividend
  2559  002046  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  2560  00204A  ECE1  F019         	call	___awdiv	;wreg free
  2561  00204E  0E09               	movlw	9
  2562  002050  2607               	addwf	?___awdiv^0,f,c
  2563  002052  5007               	movf	?___awdiv^0,w,c
  2564  002054  0D04               	mullw	4
  2565  002056  0E01               	movlw	low __powers_
  2566  002058  24F3               	addwf	243,w,c
  2567  00205A  6EF6               	movwf	tblptrl,c
  2568  00205C  0E0F               	movlw	high __powers_
  2569  00205E  20F4               	addwfc	244,w,c
  2570  002060  6EF7               	movwf	tblptrh,c
  2571  002062                     	if	1	;There are 3 active tblptr bytes
  2572  002062  6AF8               	clrf	tblptru,c
  2573  002064  0E00               	movlw	low (__mediumconst shr (0+16))
  2574  002066  22F8               	addwfc	tblptru,f,c
  2575  002068                     	endif
  2576  002068  0009               	tblrd		*+
  2577  00206A  CFF5 F013          	movff	tablat,___flmul@a
  2578  00206E  0009               	tblrd		*+
  2579  002070  CFF5 F014          	movff	tablat,___flmul@a+1
  2580  002074  0009               	tblrd		*+
  2581  002076  CFF5 F015          	movff	tablat,___flmul@a+2
  2582  00207A  000A               	tblrd		*-
  2583  00207C  CFF5 F016          	movff	tablat,___flmul@a+3
  2584  002080  0E00               	movlw	0
  2585  002082  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  2586  002084  0E64               	movlw	100
  2587  002086  6E09               	movwf	___awdiv@divisor^0,c
  2588  002088  5030               	movf	scale@scl^0,w,c
  2589  00208A  6E07               	movwf	___awdiv@dividend^0,c
  2590  00208C  6A08               	clrf	(___awdiv@dividend+1)^0,c
  2591  00208E  BE07               	btfsc	___awdiv@dividend^0,7,c
  2592  002090  0608               	decf	(___awdiv@dividend+1)^0,f,c
  2593  002092  ECE1  F019         	call	___awdiv	;wreg free
  2594  002096  0E12               	movlw	18
  2595  002098  2607               	addwf	?___awdiv^0,f,c
  2596  00209A  5007               	movf	?___awdiv^0,w,c
  2597  00209C  0D04               	mullw	4
  2598  00209E  0E01               	movlw	low __powers_
  2599  0020A0  24F3               	addwf	243,w,c
  2600  0020A2  6EF6               	movwf	tblptrl,c
  2601  0020A4  0E0F               	movlw	high __powers_
  2602  0020A6  20F4               	addwfc	244,w,c
  2603  0020A8  6EF7               	movwf	tblptrh,c
  2604  0020AA                     	if	1	;There are 3 active tblptr bytes
  2605  0020AA  6AF8               	clrf	tblptru,c
  2606  0020AC  0E00               	movlw	low (__mediumconst shr (0+16))
  2607  0020AE  22F8               	addwfc	tblptru,f,c
  2608  0020B0                     	endif
  2609  0020B0  0009               	tblrd		*+
  2610  0020B2  CFF5 F00F          	movff	tablat,___flmul@b
  2611  0020B6  0009               	tblrd		*+
  2612  0020B8  CFF5 F010          	movff	tablat,___flmul@b+1
  2613  0020BC  0009               	tblrd		*+
  2614  0020BE  CFF5 F011          	movff	tablat,___flmul@b+2
  2615  0020C2  000A               	tblrd		*-
  2616  0020C4  CFF5 F012          	movff	tablat,___flmul@b+3
  2617  0020C8  EC18  F011         	call	___flmul	;wreg free
  2618  0020CC  C00F  F02C         	movff	?___flmul,_scale$1686
  2619  0020D0  C010  F02D         	movff	?___flmul+1,_scale$1686+1
  2620  0020D4  C011  F02E         	movff	?___flmul+2,_scale$1686+2
  2621  0020D8  C012  F02F         	movff	?___flmul+3,_scale$1686+3
  2622                           
  2623                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  2624  0020DC  C02C  F00F         	movff	_scale$1686,___flmul@b
  2625  0020E0  C02D  F010         	movff	_scale$1686+1,___flmul@b+1
  2626  0020E4  C02E  F011         	movff	_scale$1686+2,___flmul@b+2
  2627  0020E8  C02F  F012         	movff	_scale$1686+3,___flmul@b+3
  2628  0020EC  0E00               	movlw	0
  2629  0020EE  6E04               	movwf	(___awmod@divisor+1)^0,c
  2630  0020F0  0E0A               	movlw	10
  2631  0020F2  6E03               	movwf	___awmod@divisor^0,c
  2632  0020F4  5030               	movf	scale@scl^0,w,c
  2633  0020F6  6E01               	movwf	___awmod@dividend^0,c
  2634  0020F8  6A02               	clrf	(___awmod@dividend+1)^0,c
  2635  0020FA  BE01               	btfsc	___awmod@dividend^0,7,c
  2636  0020FC  0602               	decf	(___awmod@dividend+1)^0,f,c
  2637  0020FE  EC43  F01A         	call	___awmod	;wreg free
  2638  002102  5001               	movf	?___awmod^0,w,c
  2639  002104  0D04               	mullw	4
  2640  002106  0E01               	movlw	low __powers_
  2641  002108  24F3               	addwf	243,w,c
  2642  00210A  6EF6               	movwf	tblptrl,c
  2643  00210C  0E0F               	movlw	high __powers_
  2644  00210E  20F4               	addwfc	244,w,c
  2645  002110  6EF7               	movwf	tblptrh,c
  2646  002112                     	if	1	;There are 3 active tblptr bytes
  2647  002112  6AF8               	clrf	tblptru,c
  2648  002114  0E00               	movlw	low (__mediumconst shr (0+16))
  2649  002116  22F8               	addwfc	tblptru,f,c
  2650  002118                     	endif
  2651  002118  0009               	tblrd		*+
  2652  00211A  CFF5 F013          	movff	tablat,___flmul@a
  2653  00211E  0009               	tblrd		*+
  2654  002120  CFF5 F014          	movff	tablat,___flmul@a+1
  2655  002124  0009               	tblrd		*+
  2656  002126  CFF5 F015          	movff	tablat,___flmul@a+2
  2657  00212A  000A               	tblrd		*-
  2658  00212C  CFF5 F016          	movff	tablat,___flmul@a+3
  2659  002130  EC18  F011         	call	___flmul	;wreg free
  2660  002134  C00F  F028         	movff	?___flmul,?_scale
  2661  002138  C010  F029         	movff	?___flmul+1,?_scale+1
  2662  00213C  C011  F02A         	movff	?___flmul+2,?_scale+2
  2663  002140  C012  F02B         	movff	?___flmul+3,?_scale+3
  2664  002144  EF17  F011         	goto	l166
  2665  002148                     l2885:
  2666                           
  2667                           ;doprnt.c: 446: else if(scl > 10)
  2668  002148  5030               	movf	scale@scl^0,w,c
  2669  00214A  0A80               	xorlw	128
  2670  00214C  0F75               	addlw	-139
  2671  00214E  A0D8               	btfss	status,0,c
  2672  002150  EFAC  F010         	goto	u3171
  2673  002154  EFAE  F010         	goto	u3170
  2674  002158                     u3171:
  2675  002158  EF00  F011         	goto	l2891
  2676  00215C                     u3170:
  2677  00215C                     
  2678                           ;doprnt.c: 447: return _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(sc
      +                          l%10)];
  2679  00215C  0E00               	movlw	0
  2680  00215E  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  2681  002160  0E0A               	movlw	10
  2682  002162  6E09               	movwf	___awdiv@divisor^0,c
  2683  002164  5030               	movf	scale@scl^0,w,c
  2684  002166  6E07               	movwf	___awdiv@dividend^0,c
  2685  002168  6A08               	clrf	(___awdiv@dividend+1)^0,c
  2686  00216A  BE07               	btfsc	___awdiv@dividend^0,7,c
  2687  00216C  0608               	decf	(___awdiv@dividend+1)^0,f,c
  2688  00216E  ECE1  F019         	call	___awdiv	;wreg free
  2689  002172  0E09               	movlw	9
  2690  002174  2607               	addwf	?___awdiv^0,f,c
  2691  002176  5007               	movf	?___awdiv^0,w,c
  2692  002178  0D04               	mullw	4
  2693  00217A  0E01               	movlw	low __powers_
  2694  00217C  24F3               	addwf	243,w,c
  2695  00217E  6EF6               	movwf	tblptrl,c
  2696  002180  0E0F               	movlw	high __powers_
  2697  002182  20F4               	addwfc	244,w,c
  2698  002184  6EF7               	movwf	tblptrh,c
  2699  002186                     	if	1	;There are 3 active tblptr bytes
  2700  002186  6AF8               	clrf	tblptru,c
  2701  002188  0E00               	movlw	low (__mediumconst shr (0+16))
  2702  00218A  22F8               	addwfc	tblptru,f,c
  2703  00218C                     	endif
  2704  00218C  0009               	tblrd		*+
  2705  00218E  CFF5 F00F          	movff	tablat,___flmul@b
  2706  002192  0009               	tblrd		*+
  2707  002194  CFF5 F010          	movff	tablat,___flmul@b+1
  2708  002198  0009               	tblrd		*+
  2709  00219A  CFF5 F011          	movff	tablat,___flmul@b+2
  2710  00219E  000A               	tblrd		*-
  2711  0021A0  CFF5 F012          	movff	tablat,___flmul@b+3
  2712  0021A4  0E00               	movlw	0
  2713  0021A6  6E04               	movwf	(___awmod@divisor+1)^0,c
  2714  0021A8  0E0A               	movlw	10
  2715  0021AA  6E03               	movwf	___awmod@divisor^0,c
  2716  0021AC  5030               	movf	scale@scl^0,w,c
  2717  0021AE  6E01               	movwf	___awmod@dividend^0,c
  2718  0021B0  6A02               	clrf	(___awmod@dividend+1)^0,c
  2719  0021B2  BE01               	btfsc	___awmod@dividend^0,7,c
  2720  0021B4  0602               	decf	(___awmod@dividend+1)^0,f,c
  2721  0021B6  EC43  F01A         	call	___awmod	;wreg free
  2722  0021BA  5001               	movf	?___awmod^0,w,c
  2723  0021BC  0D04               	mullw	4
  2724  0021BE  0E01               	movlw	low __powers_
  2725  0021C0  24F3               	addwf	243,w,c
  2726  0021C2  6EF6               	movwf	tblptrl,c
  2727  0021C4  0E0F               	movlw	high __powers_
  2728  0021C6  20F4               	addwfc	244,w,c
  2729  0021C8  6EF7               	movwf	tblptrh,c
  2730  0021CA                     	if	1	;There are 3 active tblptr bytes
  2731  0021CA  6AF8               	clrf	tblptru,c
  2732  0021CC  0E00               	movlw	low (__mediumconst shr (0+16))
  2733  0021CE  22F8               	addwfc	tblptru,f,c
  2734  0021D0                     	endif
  2735  0021D0  0009               	tblrd		*+
  2736  0021D2  CFF5 F013          	movff	tablat,___flmul@a
  2737  0021D6  0009               	tblrd		*+
  2738  0021D8  CFF5 F014          	movff	tablat,___flmul@a+1
  2739  0021DC  0009               	tblrd		*+
  2740  0021DE  CFF5 F015          	movff	tablat,___flmul@a+2
  2741  0021E2  000A               	tblrd		*-
  2742  0021E4  CFF5 F016          	movff	tablat,___flmul@a+3
  2743  0021E8  EC18  F011         	call	___flmul	;wreg free
  2744  0021EC  C00F  F028         	movff	?___flmul,?_scale
  2745  0021F0  C010  F029         	movff	?___flmul+1,?_scale+1
  2746  0021F4  C011  F02A         	movff	?___flmul+2,?_scale+2
  2747  0021F8  C012  F02B         	movff	?___flmul+3,?_scale+3
  2748  0021FC  EF17  F011         	goto	l166
  2749  002200                     l2891:
  2750                           
  2751                           ;doprnt.c: 448: return _powers_[(unsigned char)scl];
  2752  002200  5030               	movf	scale@scl^0,w,c
  2753  002202  0D04               	mullw	4
  2754  002204  0E01               	movlw	low __powers_
  2755  002206  24F3               	addwf	243,w,c
  2756  002208  6EF6               	movwf	tblptrl,c
  2757  00220A  0E0F               	movlw	high __powers_
  2758  00220C  20F4               	addwfc	244,w,c
  2759  00220E  6EF7               	movwf	tblptrh,c
  2760  002210                     	if	1	;There are 3 active tblptr bytes
  2761  002210  6AF8               	clrf	tblptru,c
  2762  002212  0E00               	movlw	low (__mediumconst shr (0+16))
  2763  002214  22F8               	addwfc	tblptru,f,c
  2764  002216                     	endif
  2765  002216  0009               	tblrd		*+
  2766  002218  CFF5 F028          	movff	tablat,?_scale
  2767  00221C  0009               	tblrd		*+
  2768  00221E  CFF5 F029          	movff	tablat,?_scale+1
  2769  002222  0009               	tblrd		*+
  2770  002224  CFF5 F02A          	movff	tablat,?_scale+2
  2771  002228  000A               	tblrd		*-
  2772  00222A  CFF5 F02B          	movff	tablat,?_scale+3
  2773  00222E                     l166:
  2774  00222E  0012               	return		;funcret
  2775  002230                     __end_of_scale:
  2776                           	callstack 0
  2777                           
  2778 ;; *************** function ___awmod *****************
  2779 ;; Defined at:
  2780 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\awmod.c"
  2781 ;; Parameters:    Size  Location     Type
  2782 ;;  dividend        2    0[COMRAM] int 
  2783 ;;  divisor         2    2[COMRAM] int 
  2784 ;; Auto vars:     Size  Location     Type
  2785 ;;  sign            1    5[COMRAM] unsigned char 
  2786 ;;  counter         1    4[COMRAM] unsigned char 
  2787 ;; Return value:  Size  Location     Type
  2788 ;;                  2    0[COMRAM] int 
  2789 ;; Registers used:
  2790 ;;		wreg, status,2, status,0
  2791 ;; Tracked objects:
  2792 ;;		On entry : 0/0
  2793 ;;		On exit  : 0/0
  2794 ;;		Unchanged: 0/0
  2795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2796 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2797 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2799 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2800 ;;Total ram usage:        6 bytes
  2801 ;; Hardware stack levels used: 1
  2802 ;; Hardware stack levels required when called: 1
  2803 ;; This function calls:
  2804 ;;		Nothing
  2805 ;; This function is called by:
  2806 ;;		_scale
  2807 ;; This function uses a non-reentrant model
  2808 ;;
  2809                           
  2810                           	psect	text3
  2811  003486                     __ptext3:
  2812                           	callstack 0
  2813  003486                     ___awmod:
  2814                           	callstack 27
  2815  003486  0E00               	movlw	0
  2816  003488  6E06               	movwf	___awmod@sign^0,c
  2817  00348A  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  2818  00348C  EF4C  F01A         	goto	u2680
  2819  003490  EF4A  F01A         	goto	u2681
  2820  003494                     u2681:
  2821  003494  EF52  F01A         	goto	l2685
  2822  003498                     u2680:
  2823  003498  6C01               	negf	___awmod@dividend^0,c
  2824  00349A  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2825  00349C  B0D8               	btfsc	status,0,c
  2826  00349E  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2827  0034A0  0E01               	movlw	1
  2828  0034A2  6E06               	movwf	___awmod@sign^0,c
  2829  0034A4                     l2685:
  2830  0034A4  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  2831  0034A6  EF59  F01A         	goto	u2690
  2832  0034AA  EF57  F01A         	goto	u2691
  2833  0034AE                     u2691:
  2834  0034AE  EF5D  F01A         	goto	l2689
  2835  0034B2                     u2690:
  2836  0034B2  6C03               	negf	___awmod@divisor^0,c
  2837  0034B4  1E04               	comf	(___awmod@divisor+1)^0,f,c
  2838  0034B6  B0D8               	btfsc	status,0,c
  2839  0034B8  2A04               	incf	(___awmod@divisor+1)^0,f,c
  2840  0034BA                     l2689:
  2841  0034BA  5003               	movf	___awmod@divisor^0,w,c
  2842  0034BC  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  2843  0034BE  B4D8               	btfsc	status,2,c
  2844  0034C0  EF64  F01A         	goto	u2701
  2845  0034C4  EF66  F01A         	goto	u2700
  2846  0034C8                     u2701:
  2847  0034C8  EF8A  F01A         	goto	l2705
  2848  0034CC                     u2700:
  2849  0034CC  0E01               	movlw	1
  2850  0034CE  6E05               	movwf	___awmod@counter^0,c
  2851  0034D0  EF6E  F01A         	goto	l2695
  2852  0034D4                     l2693:
  2853  0034D4  90D8               	bcf	status,0,c
  2854  0034D6  3603               	rlcf	___awmod@divisor^0,f,c
  2855  0034D8  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  2856  0034DA  2A05               	incf	___awmod@counter^0,f,c
  2857  0034DC                     l2695:
  2858  0034DC  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  2859  0034DE  EF73  F01A         	goto	u2711
  2860  0034E2  EF75  F01A         	goto	u2710
  2861  0034E6                     u2711:
  2862  0034E6  EF6A  F01A         	goto	l2693
  2863  0034EA                     u2710:
  2864  0034EA                     l2697:
  2865  0034EA  5003               	movf	___awmod@divisor^0,w,c
  2866  0034EC  5C01               	subwf	___awmod@dividend^0,w,c
  2867  0034EE  5004               	movf	(___awmod@divisor+1)^0,w,c
  2868  0034F0  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  2869  0034F2  A0D8               	btfss	status,0,c
  2870  0034F4  EF7E  F01A         	goto	u2721
  2871  0034F8  EF80  F01A         	goto	u2720
  2872  0034FC                     u2721:
  2873  0034FC  EF84  F01A         	goto	l2701
  2874  003500                     u2720:
  2875  003500  5003               	movf	___awmod@divisor^0,w,c
  2876  003502  5E01               	subwf	___awmod@dividend^0,f,c
  2877  003504  5004               	movf	(___awmod@divisor+1)^0,w,c
  2878  003506  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  2879  003508                     l2701:
  2880  003508  90D8               	bcf	status,0,c
  2881  00350A  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  2882  00350C  3203               	rrcf	___awmod@divisor^0,f,c
  2883  00350E  2E05               	decfsz	___awmod@counter^0,f,c
  2884  003510  EF75  F01A         	goto	l2697
  2885  003514                     l2705:
  2886  003514  5006               	movf	___awmod@sign^0,w,c
  2887  003516  B4D8               	btfsc	status,2,c
  2888  003518  EF90  F01A         	goto	u2731
  2889  00351C  EF92  F01A         	goto	u2730
  2890  003520                     u2731:
  2891  003520  EF96  F01A         	goto	l2709
  2892  003524                     u2730:
  2893  003524  6C01               	negf	___awmod@dividend^0,c
  2894  003526  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2895  003528  B0D8               	btfsc	status,0,c
  2896  00352A  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2897  00352C                     l2709:
  2898  00352C  C001  F001         	movff	___awmod@dividend,?___awmod
  2899  003530  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  2900  003534  0012               	return		;funcret
  2901  003536                     __end_of___awmod:
  2902                           	callstack 0
  2903                           
  2904 ;; *************** function ___awdiv *****************
  2905 ;; Defined at:
  2906 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\awdiv.c"
  2907 ;; Parameters:    Size  Location     Type
  2908 ;;  dividend        2    6[COMRAM] int 
  2909 ;;  divisor         2    8[COMRAM] int 
  2910 ;; Auto vars:     Size  Location     Type
  2911 ;;  quotient        2   12[COMRAM] int 
  2912 ;;  sign            1   11[COMRAM] unsigned char 
  2913 ;;  counter         1   10[COMRAM] unsigned char 
  2914 ;; Return value:  Size  Location     Type
  2915 ;;                  2    6[COMRAM] int 
  2916 ;; Registers used:
  2917 ;;		wreg, status,2, status,0
  2918 ;; Tracked objects:
  2919 ;;		On entry : 0/0
  2920 ;;		On exit  : 0/0
  2921 ;;		Unchanged: 0/0
  2922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2923 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2924 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2926 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2927 ;;Total ram usage:        8 bytes
  2928 ;; Hardware stack levels used: 1
  2929 ;; Hardware stack levels required when called: 1
  2930 ;; This function calls:
  2931 ;;		Nothing
  2932 ;; This function is called by:
  2933 ;;		_scale
  2934 ;;		_sprintf
  2935 ;; This function uses a non-reentrant model
  2936 ;;
  2937                           
  2938                           	psect	text4
  2939  0033C2                     __ptext4:
  2940                           	callstack 0
  2941  0033C2                     ___awdiv:
  2942                           	callstack 27
  2943  0033C2  0E00               	movlw	0
  2944  0033C4  6E0C               	movwf	___awdiv@sign^0,c
  2945  0033C6  BE0A               	btfsc	(___awdiv@divisor+1)^0,7,c
  2946  0033C8  EFEA  F019         	goto	u2620
  2947  0033CC  EFE8  F019         	goto	u2621
  2948  0033D0                     u2621:
  2949  0033D0  EFF0  F019         	goto	l2641
  2950  0033D4                     u2620:
  2951  0033D4  6C09               	negf	___awdiv@divisor^0,c
  2952  0033D6  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
  2953  0033D8  B0D8               	btfsc	status,0,c
  2954  0033DA  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
  2955  0033DC  0E01               	movlw	1
  2956  0033DE  6E0C               	movwf	___awdiv@sign^0,c
  2957  0033E0                     l2641:
  2958  0033E0  BE08               	btfsc	(___awdiv@dividend+1)^0,7,c
  2959  0033E2  EFF7  F019         	goto	u2630
  2960  0033E6  EFF5  F019         	goto	u2631
  2961  0033EA                     u2631:
  2962  0033EA  EFFD  F019         	goto	l2647
  2963  0033EE                     u2630:
  2964  0033EE  6C07               	negf	___awdiv@dividend^0,c
  2965  0033F0  1E08               	comf	(___awdiv@dividend+1)^0,f,c
  2966  0033F2  B0D8               	btfsc	status,0,c
  2967  0033F4  2A08               	incf	(___awdiv@dividend+1)^0,f,c
  2968  0033F6  0E01               	movlw	1
  2969  0033F8  1A0C               	xorwf	___awdiv@sign^0,f,c
  2970  0033FA                     l2647:
  2971  0033FA  0E00               	movlw	0
  2972  0033FC  6E0E               	movwf	(___awdiv@quotient+1)^0,c
  2973  0033FE  0E00               	movlw	0
  2974  003400  6E0D               	movwf	___awdiv@quotient^0,c
  2975  003402  5009               	movf	___awdiv@divisor^0,w,c
  2976  003404  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
  2977  003406  B4D8               	btfsc	status,2,c
  2978  003408  EF08  F01A         	goto	u2641
  2979  00340C  EF0A  F01A         	goto	u2640
  2980  003410                     u2641:
  2981  003410  EF32  F01A         	goto	l2669
  2982  003414                     u2640:
  2983  003414  0E01               	movlw	1
  2984  003416  6E0B               	movwf	___awdiv@counter^0,c
  2985  003418  EF12  F01A         	goto	l2655
  2986  00341C                     l2653:
  2987  00341C  90D8               	bcf	status,0,c
  2988  00341E  3609               	rlcf	___awdiv@divisor^0,f,c
  2989  003420  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
  2990  003422  2A0B               	incf	___awdiv@counter^0,f,c
  2991  003424                     l2655:
  2992  003424  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
  2993  003426  EF17  F01A         	goto	u2651
  2994  00342A  EF19  F01A         	goto	u2650
  2995  00342E                     u2651:
  2996  00342E  EF0E  F01A         	goto	l2653
  2997  003432                     u2650:
  2998  003432                     l2657:
  2999  003432  90D8               	bcf	status,0,c
  3000  003434  360D               	rlcf	___awdiv@quotient^0,f,c
  3001  003436  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
  3002  003438  5009               	movf	___awdiv@divisor^0,w,c
  3003  00343A  5C07               	subwf	___awdiv@dividend^0,w,c
  3004  00343C  500A               	movf	(___awdiv@divisor+1)^0,w,c
  3005  00343E  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
  3006  003440  A0D8               	btfss	status,0,c
  3007  003442  EF25  F01A         	goto	u2661
  3008  003446  EF27  F01A         	goto	u2660
  3009  00344A                     u2661:
  3010  00344A  EF2C  F01A         	goto	l2665
  3011  00344E                     u2660:
  3012  00344E  5009               	movf	___awdiv@divisor^0,w,c
  3013  003450  5E07               	subwf	___awdiv@dividend^0,f,c
  3014  003452  500A               	movf	(___awdiv@divisor+1)^0,w,c
  3015  003454  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
  3016  003456  800D               	bsf	___awdiv@quotient^0,0,c
  3017  003458                     l2665:
  3018  003458  90D8               	bcf	status,0,c
  3019  00345A  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
  3020  00345C  3209               	rrcf	___awdiv@divisor^0,f,c
  3021  00345E  2E0B               	decfsz	___awdiv@counter^0,f,c
  3022  003460  EF19  F01A         	goto	l2657
  3023  003464                     l2669:
  3024  003464  500C               	movf	___awdiv@sign^0,w,c
  3025  003466  B4D8               	btfsc	status,2,c
  3026  003468  EF38  F01A         	goto	u2671
  3027  00346C  EF3A  F01A         	goto	u2670
  3028  003470                     u2671:
  3029  003470  EF3E  F01A         	goto	l2673
  3030  003474                     u2670:
  3031  003474  6C0D               	negf	___awdiv@quotient^0,c
  3032  003476  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
  3033  003478  B0D8               	btfsc	status,0,c
  3034  00347A  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
  3035  00347C                     l2673:
  3036  00347C  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  3037  003480  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  3038  003484  0012               	return		;funcret
  3039  003486                     __end_of___awdiv:
  3040                           	callstack 0
  3041                           
  3042 ;; *************** function _isdigit *****************
  3043 ;; Defined at:
  3044 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\isdigit.c"
  3045 ;; Parameters:    Size  Location     Type
  3046 ;;  c               1    wreg     unsigned char 
  3047 ;; Auto vars:     Size  Location     Type
  3048 ;;  c               1    2[COMRAM] unsigned char 
  3049 ;; Return value:  Size  Location     Type
  3050 ;;		None               void
  3051 ;; Registers used:
  3052 ;;		wreg, status,2, status,0
  3053 ;; Tracked objects:
  3054 ;;		On entry : 0/0
  3055 ;;		On exit  : 0/0
  3056 ;;		Unchanged: 0/0
  3057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3059 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3060 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3061 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3062 ;;Total ram usage:        3 bytes
  3063 ;; Hardware stack levels used: 1
  3064 ;; Hardware stack levels required when called: 1
  3065 ;; This function calls:
  3066 ;;		Nothing
  3067 ;; This function is called by:
  3068 ;;		_sprintf
  3069 ;; This function uses a non-reentrant model
  3070 ;;
  3071                           
  3072                           	psect	text5
  3073  003928                     __ptext5:
  3074                           	callstack 0
  3075  003928                     _isdigit:
  3076                           	callstack 28
  3077                           
  3078                           ;incstack = 0
  3079                           ;isdigit@c stored from wreg
  3080  003928  6E03               	movwf	isdigit@c^0,c
  3081  00392A  0E00               	movlw	0
  3082  00392C  6E02               	movwf	_isdigit$1463^0,c
  3083  00392E  0E3A               	movlw	58
  3084  003930  6003               	cpfslt	isdigit@c^0,c
  3085  003932  EF9D  F01C         	goto	u3181
  3086  003936  EF9F  F01C         	goto	u3180
  3087  00393A                     u3181:
  3088  00393A  EFA9  F01C         	goto	l2903
  3089  00393E                     u3180:
  3090  00393E  0E2F               	movlw	47
  3091  003940  6403               	cpfsgt	isdigit@c^0,c
  3092  003942  EFA5  F01C         	goto	u3191
  3093  003946  EFA7  F01C         	goto	u3190
  3094  00394A                     u3191:
  3095  00394A  EFA9  F01C         	goto	l2903
  3096  00394E                     u3190:
  3097  00394E  0E01               	movlw	1
  3098  003950  6E02               	movwf	_isdigit$1463^0,c
  3099  003952                     l2903:
  3100  003952  C002  F001         	movff	_isdigit$1463,??_isdigit
  3101  003956  3001               	rrcf	??_isdigit^0,w,c
  3102  003958  0012               	return		;funcret
  3103  00395A                     __end_of_isdigit:
  3104                           	callstack 0
  3105                           
  3106 ;; *************** function _fround *****************
  3107 ;; Defined at:
  3108 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c"
  3109 ;; Parameters:    Size  Location     Type
  3110 ;;  prec            1    wreg     unsigned char 
  3111 ;; Auto vars:     Size  Location     Type
  3112 ;;  prec            1   51[COMRAM] unsigned char 
  3113 ;; Return value:  Size  Location     Type
  3114 ;;                  4   39[COMRAM] unsigned char 
  3115 ;; Registers used:
  3116 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3117 ;; Tracked objects:
  3118 ;;		On entry : 0/0
  3119 ;;		On exit  : 0/0
  3120 ;;		Unchanged: 0/0
  3121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3122 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3123 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3125 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3126 ;;Total ram usage:       13 bytes
  3127 ;; Hardware stack levels used: 1
  3128 ;; Hardware stack levels required when called: 2
  3129 ;; This function calls:
  3130 ;;		___flmul
  3131 ;;		___lwdiv
  3132 ;;		___lwmod
  3133 ;; This function is called by:
  3134 ;;		_sprintf
  3135 ;; This function uses a non-reentrant model
  3136 ;;
  3137                           
  3138                           	psect	text6
  3139  00265A                     __ptext6:
  3140                           	callstack 0
  3141  00265A                     _fround:
  3142                           	callstack 27
  3143                           
  3144                           ;incstack = 0
  3145                           ;fround@prec stored from wreg
  3146  00265A  6E34               	movwf	fround@prec^0,c
  3147  00265C                     
  3148                           ;doprnt.c: 421: if(prec>=110)
  3149  00265C  0E6D               	movlw	109
  3150  00265E  6434               	cpfsgt	fround@prec^0,c
  3151  002660  EF34  F013         	goto	u3111
  3152  002664  EF36  F013         	goto	u3110
  3153  002668                     u3111:
  3154  002668  EFEC  F013         	goto	l2847
  3155  00266C                     u3110:
  3156  00266C                     
  3157                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  3158  00266C  0E00               	movlw	0
  3159  00266E  6E13               	movwf	___flmul@a^0,c
  3160  002670  0E00               	movlw	0
  3161  002672  6E14               	movwf	(___flmul@a+1)^0,c
  3162  002674  0E00               	movlw	0
  3163  002676  6E15               	movwf	(___flmul@a+2)^0,c
  3164  002678  0E3F               	movlw	63
  3165  00267A  6E16               	movwf	(___flmul@a+3)^0,c
  3166  00267C  0E00               	movlw	0
  3167  00267E  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  3168  002680  0E64               	movlw	100
  3169  002682  6E08               	movwf	___lwdiv@divisor^0,c
  3170  002684  C034  F006         	movff	fround@prec,___lwdiv@dividend
  3171  002688  6A07               	clrf	(___lwdiv@dividend+1)^0,c
  3172  00268A  ECC1  F01B         	call	___lwdiv	;wreg free
  3173  00268E  90D8               	bcf	status,0,c
  3174  002690  3606               	rlcf	?___lwdiv^0,f,c
  3175  002692  3607               	rlcf	(?___lwdiv+1)^0,f,c
  3176  002694  90D8               	bcf	status,0,c
  3177  002696  3606               	rlcf	?___lwdiv^0,f,c
  3178  002698  3607               	rlcf	(?___lwdiv+1)^0,f,c
  3179  00269A  0E48               	movlw	72
  3180  00269C  2606               	addwf	?___lwdiv^0,f,c
  3181  00269E  0E00               	movlw	0
  3182  0026A0  2207               	addwfc	(?___lwdiv+1)^0,f,c
  3183  0026A2  0E35               	movlw	low __npowers_
  3184  0026A4  2406               	addwf	?___lwdiv^0,w,c
  3185  0026A6  6EF6               	movwf	tblptrl,c
  3186  0026A8  0E0F               	movlw	high __npowers_
  3187  0026AA  2007               	addwfc	(?___lwdiv+1)^0,w,c
  3188  0026AC  6EF7               	movwf	tblptrh,c
  3189  0026AE                     	if	1	;There are 3 active tblptr bytes
  3190  0026AE  6AF8               	clrf	tblptru,c
  3191  0026B0  0E00               	movlw	low (__mediumconst shr (0+16))
  3192  0026B2  22F8               	addwfc	tblptru,f,c
  3193  0026B4                     	endif
  3194  0026B4  0009               	tblrd		*+
  3195  0026B6  CFF5 F00F          	movff	tablat,___flmul@b
  3196  0026BA  0009               	tblrd		*+
  3197  0026BC  CFF5 F010          	movff	tablat,___flmul@b+1
  3198  0026C0  0009               	tblrd		*+
  3199  0026C2  CFF5 F011          	movff	tablat,___flmul@b+2
  3200  0026C6  000A               	tblrd		*-
  3201  0026C8  CFF5 F012          	movff	tablat,___flmul@b+3
  3202  0026CC  EC18  F011         	call	___flmul	;wreg free
  3203  0026D0  C00F  F030         	movff	?___flmul,_fround$1684
  3204  0026D4  C010  F031         	movff	?___flmul+1,_fround$1684+1
  3205  0026D8  C011  F032         	movff	?___flmul+2,_fround$1684+2
  3206  0026DC  C012  F033         	movff	?___flmul+3,_fround$1684+3
  3207                           
  3208                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  3209  0026E0  0E00               	movlw	0
  3210  0026E2  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  3211  0026E4  0E0A               	movlw	10
  3212  0026E6  6E08               	movwf	___lwdiv@divisor^0,c
  3213  0026E8  0E00               	movlw	0
  3214  0026EA  6E04               	movwf	(___lwmod@divisor+1)^0,c
  3215  0026EC  0E64               	movlw	100
  3216  0026EE  6E03               	movwf	___lwmod@divisor^0,c
  3217  0026F0  C034  F001         	movff	fround@prec,___lwmod@dividend
  3218  0026F4  6A02               	clrf	(___lwmod@dividend+1)^0,c
  3219  0026F6  ECFB  F01B         	call	___lwmod	;wreg free
  3220  0026FA  C001  F006         	movff	?___lwmod,___lwdiv@dividend
  3221  0026FE  C002  F007         	movff	?___lwmod+1,___lwdiv@dividend+1
  3222  002702  ECC1  F01B         	call	___lwdiv	;wreg free
  3223  002706  90D8               	bcf	status,0,c
  3224  002708  3606               	rlcf	?___lwdiv^0,f,c
  3225  00270A  3607               	rlcf	(?___lwdiv+1)^0,f,c
  3226  00270C  90D8               	bcf	status,0,c
  3227  00270E  3606               	rlcf	?___lwdiv^0,f,c
  3228  002710  3607               	rlcf	(?___lwdiv+1)^0,f,c
  3229  002712  0E24               	movlw	36
  3230  002714  2606               	addwf	?___lwdiv^0,f,c
  3231  002716  0E00               	movlw	0
  3232  002718  2207               	addwfc	(?___lwdiv+1)^0,f,c
  3233  00271A  0E35               	movlw	low __npowers_
  3234  00271C  2406               	addwf	?___lwdiv^0,w,c
  3235  00271E  6EF6               	movwf	tblptrl,c
  3236  002720  0E0F               	movlw	high __npowers_
  3237  002722  2007               	addwfc	(?___lwdiv+1)^0,w,c
  3238  002724  6EF7               	movwf	tblptrh,c
  3239  002726                     	if	1	;There are 3 active tblptr bytes
  3240  002726  6AF8               	clrf	tblptru,c
  3241  002728  0E00               	movlw	low (__mediumconst shr (0+16))
  3242  00272A  22F8               	addwfc	tblptru,f,c
  3243  00272C                     	endif
  3244  00272C  0009               	tblrd		*+
  3245  00272E  CFF5 F013          	movff	tablat,___flmul@a
  3246  002732  0009               	tblrd		*+
  3247  002734  CFF5 F014          	movff	tablat,___flmul@a+1
  3248  002738  0009               	tblrd		*+
  3249  00273A  CFF5 F015          	movff	tablat,___flmul@a+2
  3250  00273E  000A               	tblrd		*-
  3251  002740  CFF5 F016          	movff	tablat,___flmul@a+3
  3252  002744  C030  F00F         	movff	_fround$1684,___flmul@b
  3253  002748  C031  F010         	movff	_fround$1684+1,___flmul@b+1
  3254  00274C  C032  F011         	movff	_fround$1684+2,___flmul@b+2
  3255  002750  C033  F012         	movff	_fround$1684+3,___flmul@b+3
  3256  002754  EC18  F011         	call	___flmul	;wreg free
  3257  002758  C00F  F02C         	movff	?___flmul,_fround$1685
  3258  00275C  C010  F02D         	movff	?___flmul+1,_fround$1685+1
  3259  002760  C011  F02E         	movff	?___flmul+2,_fround$1685+2
  3260  002764  C012  F02F         	movff	?___flmul+3,_fround$1685+3
  3261                           
  3262                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  3263  002768  C02C  F00F         	movff	_fround$1685,___flmul@b
  3264  00276C  C02D  F010         	movff	_fround$1685+1,___flmul@b+1
  3265  002770  C02E  F011         	movff	_fround$1685+2,___flmul@b+2
  3266  002774  C02F  F012         	movff	_fround$1685+3,___flmul@b+3
  3267  002778  0E00               	movlw	0
  3268  00277A  6E04               	movwf	(___lwmod@divisor+1)^0,c
  3269  00277C  0E0A               	movlw	10
  3270  00277E  6E03               	movwf	___lwmod@divisor^0,c
  3271  002780  C034  F001         	movff	fround@prec,___lwmod@dividend
  3272  002784  6A02               	clrf	(___lwmod@dividend+1)^0,c
  3273  002786  ECFB  F01B         	call	___lwmod	;wreg free
  3274  00278A  90D8               	bcf	status,0,c
  3275  00278C  3601               	rlcf	?___lwmod^0,f,c
  3276  00278E  3602               	rlcf	(?___lwmod+1)^0,f,c
  3277  002790  90D8               	bcf	status,0,c
  3278  002792  3601               	rlcf	?___lwmod^0,f,c
  3279  002794  3602               	rlcf	(?___lwmod+1)^0,f,c
  3280  002796  0E35               	movlw	low __npowers_
  3281  002798  2401               	addwf	?___lwmod^0,w,c
  3282  00279A  6EF6               	movwf	tblptrl,c
  3283  00279C  0E0F               	movlw	high __npowers_
  3284  00279E  2002               	addwfc	(?___lwmod+1)^0,w,c
  3285  0027A0  6EF7               	movwf	tblptrh,c
  3286  0027A2                     	if	1	;There are 3 active tblptr bytes
  3287  0027A2  6AF8               	clrf	tblptru,c
  3288  0027A4  0E00               	movlw	low (__mediumconst shr (0+16))
  3289  0027A6  22F8               	addwfc	tblptru,f,c
  3290  0027A8                     	endif
  3291  0027A8  0009               	tblrd		*+
  3292  0027AA  CFF5 F013          	movff	tablat,___flmul@a
  3293  0027AE  0009               	tblrd		*+
  3294  0027B0  CFF5 F014          	movff	tablat,___flmul@a+1
  3295  0027B4  0009               	tblrd		*+
  3296  0027B6  CFF5 F015          	movff	tablat,___flmul@a+2
  3297  0027BA  000A               	tblrd		*-
  3298  0027BC  CFF5 F016          	movff	tablat,___flmul@a+3
  3299  0027C0  EC18  F011         	call	___flmul	;wreg free
  3300  0027C4  C00F  F028         	movff	?___flmul,?_fround
  3301  0027C8  C010  F029         	movff	?___flmul+1,?_fround+1
  3302  0027CC  C011  F02A         	movff	?___flmul+2,?_fround+2
  3303  0027D0  C012  F02B         	movff	?___flmul+3,?_fround+3
  3304  0027D4  EF8F  F014         	goto	l159
  3305  0027D8                     l2847:
  3306                           
  3307                           ;doprnt.c: 423: else if(prec > 10)
  3308  0027D8  0E0A               	movlw	10
  3309  0027DA  6434               	cpfsgt	fround@prec^0,c
  3310  0027DC  EFF2  F013         	goto	u3121
  3311  0027E0  EFF4  F013         	goto	u3120
  3312  0027E4                     u3121:
  3313  0027E4  EF66  F014         	goto	l2853
  3314  0027E8                     u3120:
  3315  0027E8                     
  3316                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3317  0027E8  0E00               	movlw	0
  3318  0027EA  6E13               	movwf	___flmul@a^0,c
  3319  0027EC  0E00               	movlw	0
  3320  0027EE  6E14               	movwf	(___flmul@a+1)^0,c
  3321  0027F0  0E00               	movlw	0
  3322  0027F2  6E15               	movwf	(___flmul@a+2)^0,c
  3323  0027F4  0E3F               	movlw	63
  3324  0027F6  6E16               	movwf	(___flmul@a+3)^0,c
  3325  0027F8  0E00               	movlw	0
  3326  0027FA  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  3327  0027FC  0E0A               	movlw	10
  3328  0027FE  6E08               	movwf	___lwdiv@divisor^0,c
  3329  002800  C034  F006         	movff	fround@prec,___lwdiv@dividend
  3330  002804  6A07               	clrf	(___lwdiv@dividend+1)^0,c
  3331  002806  ECC1  F01B         	call	___lwdiv	;wreg free
  3332  00280A  90D8               	bcf	status,0,c
  3333  00280C  3606               	rlcf	?___lwdiv^0,f,c
  3334  00280E  3607               	rlcf	(?___lwdiv+1)^0,f,c
  3335  002810  90D8               	bcf	status,0,c
  3336  002812  3606               	rlcf	?___lwdiv^0,f,c
  3337  002814  3607               	rlcf	(?___lwdiv+1)^0,f,c
  3338  002816  0E24               	movlw	36
  3339  002818  2606               	addwf	?___lwdiv^0,f,c
  3340  00281A  0E00               	movlw	0
  3341  00281C  2207               	addwfc	(?___lwdiv+1)^0,f,c
  3342  00281E  0E35               	movlw	low __npowers_
  3343  002820  2406               	addwf	?___lwdiv^0,w,c
  3344  002822  6EF6               	movwf	tblptrl,c
  3345  002824  0E0F               	movlw	high __npowers_
  3346  002826  2007               	addwfc	(?___lwdiv+1)^0,w,c
  3347  002828  6EF7               	movwf	tblptrh,c
  3348  00282A                     	if	1	;There are 3 active tblptr bytes
  3349  00282A  6AF8               	clrf	tblptru,c
  3350  00282C  0E00               	movlw	low (__mediumconst shr (0+16))
  3351  00282E  22F8               	addwfc	tblptru,f,c
  3352  002830                     	endif
  3353  002830  0009               	tblrd		*+
  3354  002832  CFF5 F00F          	movff	tablat,___flmul@b
  3355  002836  0009               	tblrd		*+
  3356  002838  CFF5 F010          	movff	tablat,___flmul@b+1
  3357  00283C  0009               	tblrd		*+
  3358  00283E  CFF5 F011          	movff	tablat,___flmul@b+2
  3359  002842  000A               	tblrd		*-
  3360  002844  CFF5 F012          	movff	tablat,___flmul@b+3
  3361  002848  EC18  F011         	call	___flmul	;wreg free
  3362  00284C  C00F  F030         	movff	?___flmul,_fround$1684
  3363  002850  C010  F031         	movff	?___flmul+1,_fround$1684+1
  3364  002854  C011  F032         	movff	?___flmul+2,_fround$1684+2
  3365  002858  C012  F033         	movff	?___flmul+3,_fround$1684+3
  3366                           
  3367                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3368  00285C  C030  F00F         	movff	_fround$1684,___flmul@b
  3369  002860  C031  F010         	movff	_fround$1684+1,___flmul@b+1
  3370  002864  C032  F011         	movff	_fround$1684+2,___flmul@b+2
  3371  002868  C033  F012         	movff	_fround$1684+3,___flmul@b+3
  3372  00286C  0E00               	movlw	0
  3373  00286E  6E04               	movwf	(___lwmod@divisor+1)^0,c
  3374  002870  0E0A               	movlw	10
  3375  002872  6E03               	movwf	___lwmod@divisor^0,c
  3376  002874  C034  F001         	movff	fround@prec,___lwmod@dividend
  3377  002878  6A02               	clrf	(___lwmod@dividend+1)^0,c
  3378  00287A  ECFB  F01B         	call	___lwmod	;wreg free
  3379  00287E  90D8               	bcf	status,0,c
  3380  002880  3601               	rlcf	?___lwmod^0,f,c
  3381  002882  3602               	rlcf	(?___lwmod+1)^0,f,c
  3382  002884  90D8               	bcf	status,0,c
  3383  002886  3601               	rlcf	?___lwmod^0,f,c
  3384  002888  3602               	rlcf	(?___lwmod+1)^0,f,c
  3385  00288A  0E35               	movlw	low __npowers_
  3386  00288C  2401               	addwf	?___lwmod^0,w,c
  3387  00288E  6EF6               	movwf	tblptrl,c
  3388  002890  0E0F               	movlw	high __npowers_
  3389  002892  2002               	addwfc	(?___lwmod+1)^0,w,c
  3390  002894  6EF7               	movwf	tblptrh,c
  3391  002896                     	if	1	;There are 3 active tblptr bytes
  3392  002896  6AF8               	clrf	tblptru,c
  3393  002898  0E00               	movlw	low (__mediumconst shr (0+16))
  3394  00289A  22F8               	addwfc	tblptru,f,c
  3395  00289C                     	endif
  3396  00289C  0009               	tblrd		*+
  3397  00289E  CFF5 F013          	movff	tablat,___flmul@a
  3398  0028A2  0009               	tblrd		*+
  3399  0028A4  CFF5 F014          	movff	tablat,___flmul@a+1
  3400  0028A8  0009               	tblrd		*+
  3401  0028AA  CFF5 F015          	movff	tablat,___flmul@a+2
  3402  0028AE  000A               	tblrd		*-
  3403  0028B0  CFF5 F016          	movff	tablat,___flmul@a+3
  3404  0028B4  EC18  F011         	call	___flmul	;wreg free
  3405  0028B8  C00F  F028         	movff	?___flmul,?_fround
  3406  0028BC  C010  F029         	movff	?___flmul+1,?_fround+1
  3407  0028C0  C011  F02A         	movff	?___flmul+2,?_fround+2
  3408  0028C4  C012  F02B         	movff	?___flmul+3,?_fround+3
  3409  0028C8  EF8F  F014         	goto	l159
  3410  0028CC                     l2853:
  3411                           
  3412                           ;doprnt.c: 425: return 0.5 * _npowers_[prec];
  3413  0028CC  5034               	movf	fround@prec^0,w,c
  3414  0028CE  0D04               	mullw	4
  3415  0028D0  0E35               	movlw	low __npowers_
  3416  0028D2  24F3               	addwf	243,w,c
  3417  0028D4  6EF6               	movwf	tblptrl,c
  3418  0028D6  0E0F               	movlw	high __npowers_
  3419  0028D8  20F4               	addwfc	244,w,c
  3420  0028DA  6EF7               	movwf	tblptrh,c
  3421  0028DC                     	if	1	;There are 3 active tblptr bytes
  3422  0028DC  6AF8               	clrf	tblptru,c
  3423  0028DE  0E00               	movlw	low (__mediumconst shr (0+16))
  3424  0028E0  22F8               	addwfc	tblptru,f,c
  3425  0028E2                     	endif
  3426  0028E2  0009               	tblrd		*+
  3427  0028E4  CFF5 F00F          	movff	tablat,___flmul@b
  3428  0028E8  0009               	tblrd		*+
  3429  0028EA  CFF5 F010          	movff	tablat,___flmul@b+1
  3430  0028EE  0009               	tblrd		*+
  3431  0028F0  CFF5 F011          	movff	tablat,___flmul@b+2
  3432  0028F4  000A               	tblrd		*-
  3433  0028F6  CFF5 F012          	movff	tablat,___flmul@b+3
  3434  0028FA  0E00               	movlw	0
  3435  0028FC  6E13               	movwf	___flmul@a^0,c
  3436  0028FE  0E00               	movlw	0
  3437  002900  6E14               	movwf	(___flmul@a+1)^0,c
  3438  002902  0E00               	movlw	0
  3439  002904  6E15               	movwf	(___flmul@a+2)^0,c
  3440  002906  0E3F               	movlw	63
  3441  002908  6E16               	movwf	(___flmul@a+3)^0,c
  3442  00290A  EC18  F011         	call	___flmul	;wreg free
  3443  00290E  C00F  F028         	movff	?___flmul,?_fround
  3444  002912  C010  F029         	movff	?___flmul+1,?_fround+1
  3445  002916  C011  F02A         	movff	?___flmul+2,?_fround+2
  3446  00291A  C012  F02B         	movff	?___flmul+3,?_fround+3
  3447  00291E                     l159:
  3448  00291E  0012               	return		;funcret
  3449  002920                     __end_of_fround:
  3450                           	callstack 0
  3451                           
  3452 ;; *************** function ___lwmod *****************
  3453 ;; Defined at:
  3454 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lwmod.c"
  3455 ;; Parameters:    Size  Location     Type
  3456 ;;  dividend        2    0[COMRAM] unsigned int 
  3457 ;;  divisor         2    2[COMRAM] unsigned int 
  3458 ;; Auto vars:     Size  Location     Type
  3459 ;;  counter         1    4[COMRAM] unsigned char 
  3460 ;; Return value:  Size  Location     Type
  3461 ;;                  2    0[COMRAM] unsigned int 
  3462 ;; Registers used:
  3463 ;;		wreg, status,2, status,0
  3464 ;; Tracked objects:
  3465 ;;		On entry : 0/0
  3466 ;;		On exit  : 0/0
  3467 ;;		Unchanged: 0/0
  3468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3469 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3470 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3472 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3473 ;;Total ram usage:        5 bytes
  3474 ;; Hardware stack levels used: 1
  3475 ;; Hardware stack levels required when called: 1
  3476 ;; This function calls:
  3477 ;;		Nothing
  3478 ;; This function is called by:
  3479 ;;		_fround
  3480 ;; This function uses a non-reentrant model
  3481 ;;
  3482                           
  3483                           	psect	text7
  3484  0037F6                     __ptext7:
  3485                           	callstack 0
  3486  0037F6                     ___lwmod:
  3487                           	callstack 27
  3488  0037F6  5003               	movf	___lwmod@divisor^0,w,c
  3489  0037F8  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  3490  0037FA  B4D8               	btfsc	status,2,c
  3491  0037FC  EF02  F01C         	goto	u2771
  3492  003800  EF04  F01C         	goto	u2770
  3493  003804                     u2771:
  3494  003804  EF28  F01C         	goto	l758
  3495  003808                     u2770:
  3496  003808  0E01               	movlw	1
  3497  00380A  6E05               	movwf	___lwmod@counter^0,c
  3498  00380C  EF0C  F01C         	goto	l2741
  3499  003810                     l2739:
  3500  003810  90D8               	bcf	status,0,c
  3501  003812  3603               	rlcf	___lwmod@divisor^0,f,c
  3502  003814  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  3503  003816  2A05               	incf	___lwmod@counter^0,f,c
  3504  003818                     l2741:
  3505  003818  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  3506  00381A  EF11  F01C         	goto	u2781
  3507  00381E  EF13  F01C         	goto	u2780
  3508  003822                     u2781:
  3509  003822  EF08  F01C         	goto	l2739
  3510  003826                     u2780:
  3511  003826                     l2743:
  3512  003826  5003               	movf	___lwmod@divisor^0,w,c
  3513  003828  5C01               	subwf	___lwmod@dividend^0,w,c
  3514  00382A  5004               	movf	(___lwmod@divisor+1)^0,w,c
  3515  00382C  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  3516  00382E  A0D8               	btfss	status,0,c
  3517  003830  EF1C  F01C         	goto	u2791
  3518  003834  EF1E  F01C         	goto	u2790
  3519  003838                     u2791:
  3520  003838  EF22  F01C         	goto	l2747
  3521  00383C                     u2790:
  3522  00383C  5003               	movf	___lwmod@divisor^0,w,c
  3523  00383E  5E01               	subwf	___lwmod@dividend^0,f,c
  3524  003840  5004               	movf	(___lwmod@divisor+1)^0,w,c
  3525  003842  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  3526  003844                     l2747:
  3527  003844  90D8               	bcf	status,0,c
  3528  003846  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  3529  003848  3203               	rrcf	___lwmod@divisor^0,f,c
  3530  00384A  2E05               	decfsz	___lwmod@counter^0,f,c
  3531  00384C  EF13  F01C         	goto	l2743
  3532  003850                     l758:
  3533  003850  C001  F001         	movff	___lwmod@dividend,?___lwmod
  3534  003854  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  3535  003858  0012               	return		;funcret
  3536  00385A                     __end_of___lwmod:
  3537                           	callstack 0
  3538                           
  3539 ;; *************** function ___lwdiv *****************
  3540 ;; Defined at:
  3541 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lwdiv.c"
  3542 ;; Parameters:    Size  Location     Type
  3543 ;;  dividend        2    5[COMRAM] unsigned int 
  3544 ;;  divisor         2    7[COMRAM] unsigned int 
  3545 ;; Auto vars:     Size  Location     Type
  3546 ;;  quotient        2    9[COMRAM] unsigned int 
  3547 ;;  counter         1   11[COMRAM] unsigned char 
  3548 ;; Return value:  Size  Location     Type
  3549 ;;                  2    5[COMRAM] unsigned int 
  3550 ;; Registers used:
  3551 ;;		wreg, status,2, status,0
  3552 ;; Tracked objects:
  3553 ;;		On entry : 0/0
  3554 ;;		On exit  : 0/0
  3555 ;;		Unchanged: 0/0
  3556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3557 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3558 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3560 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3561 ;;Total ram usage:        7 bytes
  3562 ;; Hardware stack levels used: 1
  3563 ;; Hardware stack levels required when called: 1
  3564 ;; This function calls:
  3565 ;;		Nothing
  3566 ;; This function is called by:
  3567 ;;		_fround
  3568 ;; This function uses a non-reentrant model
  3569 ;;
  3570                           
  3571                           	psect	text8
  3572  003782                     __ptext8:
  3573                           	callstack 0
  3574  003782                     ___lwdiv:
  3575                           	callstack 27
  3576  003782  0E00               	movlw	0
  3577  003784  6E0B               	movwf	(___lwdiv@quotient+1)^0,c
  3578  003786  0E00               	movlw	0
  3579  003788  6E0A               	movwf	___lwdiv@quotient^0,c
  3580  00378A  5008               	movf	___lwdiv@divisor^0,w,c
  3581  00378C  1009               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3582  00378E  B4D8               	btfsc	status,2,c
  3583  003790  EFCC  F01B         	goto	u2741
  3584  003794  EFCE  F01B         	goto	u2740
  3585  003798                     u2741:
  3586  003798  EFF6  F01B         	goto	l748
  3587  00379C                     u2740:
  3588  00379C  0E01               	movlw	1
  3589  00379E  6E0C               	movwf	___lwdiv@counter^0,c
  3590  0037A0  EFD6  F01B         	goto	l2721
  3591  0037A4                     l2719:
  3592  0037A4  90D8               	bcf	status,0,c
  3593  0037A6  3608               	rlcf	___lwdiv@divisor^0,f,c
  3594  0037A8  3609               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3595  0037AA  2A0C               	incf	___lwdiv@counter^0,f,c
  3596  0037AC                     l2721:
  3597  0037AC  AE09               	btfss	(___lwdiv@divisor+1)^0,7,c
  3598  0037AE  EFDB  F01B         	goto	u2751
  3599  0037B2  EFDD  F01B         	goto	u2750
  3600  0037B6                     u2751:
  3601  0037B6  EFD2  F01B         	goto	l2719
  3602  0037BA                     u2750:
  3603  0037BA                     l2723:
  3604  0037BA  90D8               	bcf	status,0,c
  3605  0037BC  360A               	rlcf	___lwdiv@quotient^0,f,c
  3606  0037BE  360B               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3607  0037C0  5008               	movf	___lwdiv@divisor^0,w,c
  3608  0037C2  5C06               	subwf	___lwdiv@dividend^0,w,c
  3609  0037C4  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  3610  0037C6  5807               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3611  0037C8  A0D8               	btfss	status,0,c
  3612  0037CA  EFE9  F01B         	goto	u2761
  3613  0037CE  EFEB  F01B         	goto	u2760
  3614  0037D2                     u2761:
  3615  0037D2  EFF0  F01B         	goto	l2731
  3616  0037D6                     u2760:
  3617  0037D6  5008               	movf	___lwdiv@divisor^0,w,c
  3618  0037D8  5E06               	subwf	___lwdiv@dividend^0,f,c
  3619  0037DA  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  3620  0037DC  5A07               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3621  0037DE  800A               	bsf	___lwdiv@quotient^0,0,c
  3622  0037E0                     l2731:
  3623  0037E0  90D8               	bcf	status,0,c
  3624  0037E2  3209               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3625  0037E4  3208               	rrcf	___lwdiv@divisor^0,f,c
  3626  0037E6  2E0C               	decfsz	___lwdiv@counter^0,f,c
  3627  0037E8  EFDD  F01B         	goto	l2723
  3628  0037EC                     l748:
  3629  0037EC  C00A  F006         	movff	___lwdiv@quotient,?___lwdiv
  3630  0037F0  C00B  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3631  0037F4  0012               	return		;funcret
  3632  0037F6                     __end_of___lwdiv:
  3633                           	callstack 0
  3634                           
  3635 ;; *************** function ___flmul *****************
  3636 ;; Defined at:
  3637 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\sprcmul.c"
  3638 ;; Parameters:    Size  Location     Type
  3639 ;;  b               4   14[COMRAM] unsigned int 
  3640 ;;  a               4   18[COMRAM] unsigned int 
  3641 ;; Auto vars:     Size  Location     Type
  3642 ;;  prod            4   33[COMRAM] struct .
  3643 ;;  grs             4   27[COMRAM] unsigned long 
  3644 ;;  temp            2   37[COMRAM] struct .
  3645 ;;  bexp            1   32[COMRAM] unsigned char 
  3646 ;;  aexp            1   31[COMRAM] unsigned char 
  3647 ;;  sign            1   26[COMRAM] unsigned char 
  3648 ;; Return value:  Size  Location     Type
  3649 ;;                  4   14[COMRAM] unsigned char 
  3650 ;; Registers used:
  3651 ;;		wreg, status,2, status,0, prodl, prodh
  3652 ;; Tracked objects:
  3653 ;;		On entry : 0/0
  3654 ;;		On exit  : 0/0
  3655 ;;		Unchanged: 0/0
  3656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3657 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3658 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3659 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3660 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3661 ;;Total ram usage:       25 bytes
  3662 ;; Hardware stack levels used: 1
  3663 ;; Hardware stack levels required when called: 1
  3664 ;; This function calls:
  3665 ;;		Nothing
  3666 ;; This function is called by:
  3667 ;;		_fround
  3668 ;;		_scale
  3669 ;;		_sprintf
  3670 ;; This function uses a non-reentrant model
  3671 ;;
  3672                           
  3673                           	psect	text9
  3674  002230                     __ptext9:
  3675                           	callstack 0
  3676  002230                     ___flmul:
  3677                           	callstack 27
  3678  002230  5012               	movf	(___flmul@b+3)^0,w,c
  3679  002232  0B80               	andlw	128
  3680  002234  6E1B               	movwf	___flmul@sign^0,c
  3681  002236  5012               	movf	(___flmul@b+3)^0,w,c
  3682  002238  2412               	addwf	(___flmul@b+3)^0,w,c
  3683  00223A  6E21               	movwf	___flmul@bexp^0,c
  3684  00223C  AE11               	btfss	(___flmul@b+2)^0,7,c
  3685  00223E  EF23  F011         	goto	u2431
  3686  002242  EF25  F011         	goto	u2430
  3687  002246                     u2431:
  3688  002246  EF26  F011         	goto	l2509
  3689  00224A                     u2430:
  3690  00224A  8021               	bsf	___flmul@bexp^0,0,c
  3691  00224C                     l2509:
  3692  00224C  5021               	movf	___flmul@bexp^0,w,c
  3693  00224E  B4D8               	btfsc	status,2,c
  3694  002250  EF2C  F011         	goto	u2441
  3695  002254  EF2E  F011         	goto	u2440
  3696  002258                     u2441:
  3697  002258  EF41  F011         	goto	l2517
  3698  00225C                     u2440:
  3699  00225C  2821               	incf	___flmul@bexp^0,w,c
  3700  00225E  A4D8               	btfss	status,2,c
  3701  002260  EF34  F011         	goto	u2451
  3702  002264  EF36  F011         	goto	u2450
  3703  002268                     u2451:
  3704  002268  EF3E  F011         	goto	l2515
  3705  00226C                     u2450:
  3706  00226C  0E00               	movlw	0
  3707  00226E  6E0F               	movwf	___flmul@b^0,c
  3708  002270  0E00               	movlw	0
  3709  002272  6E10               	movwf	(___flmul@b+1)^0,c
  3710  002274  0E00               	movlw	0
  3711  002276  6E11               	movwf	(___flmul@b+2)^0,c
  3712  002278  0E00               	movlw	0
  3713  00227A  6E12               	movwf	(___flmul@b+3)^0,c
  3714  00227C                     l2515:
  3715  00227C  8E11               	bsf	(___flmul@b+2)^0,7,c
  3716  00227E  EF49  F011         	goto	l2519
  3717  002282                     l2517:
  3718  002282  0E00               	movlw	0
  3719  002284  6E0F               	movwf	___flmul@b^0,c
  3720  002286  0E00               	movlw	0
  3721  002288  6E10               	movwf	(___flmul@b+1)^0,c
  3722  00228A  0E00               	movlw	0
  3723  00228C  6E11               	movwf	(___flmul@b+2)^0,c
  3724  00228E  0E00               	movlw	0
  3725  002290  6E12               	movwf	(___flmul@b+3)^0,c
  3726  002292                     l2519:
  3727  002292  5016               	movf	(___flmul@a+3)^0,w,c
  3728  002294  0B80               	andlw	128
  3729  002296  1A1B               	xorwf	___flmul@sign^0,f,c
  3730  002298  5016               	movf	(___flmul@a+3)^0,w,c
  3731  00229A  2416               	addwf	(___flmul@a+3)^0,w,c
  3732  00229C  6E20               	movwf	___flmul@aexp^0,c
  3733  00229E  AE15               	btfss	(___flmul@a+2)^0,7,c
  3734  0022A0  EF54  F011         	goto	u2461
  3735  0022A4  EF56  F011         	goto	u2460
  3736  0022A8                     u2461:
  3737  0022A8  EF57  F011         	goto	l2527
  3738  0022AC                     u2460:
  3739  0022AC  8020               	bsf	___flmul@aexp^0,0,c
  3740  0022AE                     l2527:
  3741  0022AE  5020               	movf	___flmul@aexp^0,w,c
  3742  0022B0  B4D8               	btfsc	status,2,c
  3743  0022B2  EF5D  F011         	goto	u2471
  3744  0022B6  EF5F  F011         	goto	u2470
  3745  0022BA                     u2471:
  3746  0022BA  EF72  F011         	goto	l2535
  3747  0022BE                     u2470:
  3748  0022BE  2820               	incf	___flmul@aexp^0,w,c
  3749  0022C0  A4D8               	btfss	status,2,c
  3750  0022C2  EF65  F011         	goto	u2481
  3751  0022C6  EF67  F011         	goto	u2480
  3752  0022CA                     u2481:
  3753  0022CA  EF6F  F011         	goto	l2533
  3754  0022CE                     u2480:
  3755  0022CE  0E00               	movlw	0
  3756  0022D0  6E13               	movwf	___flmul@a^0,c
  3757  0022D2  0E00               	movlw	0
  3758  0022D4  6E14               	movwf	(___flmul@a+1)^0,c
  3759  0022D6  0E00               	movlw	0
  3760  0022D8  6E15               	movwf	(___flmul@a+2)^0,c
  3761  0022DA  0E00               	movlw	0
  3762  0022DC  6E16               	movwf	(___flmul@a+3)^0,c
  3763  0022DE                     l2533:
  3764  0022DE  8E15               	bsf	(___flmul@a+2)^0,7,c
  3765  0022E0  EF7A  F011         	goto	l871
  3766  0022E4                     l2535:
  3767  0022E4  0E00               	movlw	0
  3768  0022E6  6E13               	movwf	___flmul@a^0,c
  3769  0022E8  0E00               	movlw	0
  3770  0022EA  6E14               	movwf	(___flmul@a+1)^0,c
  3771  0022EC  0E00               	movlw	0
  3772  0022EE  6E15               	movwf	(___flmul@a+2)^0,c
  3773  0022F0  0E00               	movlw	0
  3774  0022F2  6E16               	movwf	(___flmul@a+3)^0,c
  3775  0022F4                     l871:
  3776  0022F4  5020               	movf	___flmul@aexp^0,w,c
  3777  0022F6  B4D8               	btfsc	status,2,c
  3778  0022F8  EF80  F011         	goto	u2491
  3779  0022FC  EF82  F011         	goto	u2490
  3780  002300                     u2491:
  3781  002300  EF8A  F011         	goto	l2539
  3782  002304                     u2490:
  3783  002304  5021               	movf	___flmul@bexp^0,w,c
  3784  002306  A4D8               	btfss	status,2,c
  3785  002308  EF88  F011         	goto	u2501
  3786  00230C  EF8A  F011         	goto	u2500
  3787  002310                     u2501:
  3788  002310  EF94  F011         	goto	l2543
  3789  002314                     u2500:
  3790  002314                     l2539:
  3791  002314  0E00               	movlw	0
  3792  002316  6E0F               	movwf	?___flmul^0,c
  3793  002318  0E00               	movlw	0
  3794  00231A  6E10               	movwf	(?___flmul+1)^0,c
  3795  00231C  0E00               	movlw	0
  3796  00231E  6E11               	movwf	(?___flmul+2)^0,c
  3797  002320  0E00               	movlw	0
  3798  002322  6E12               	movwf	(?___flmul+3)^0,c
  3799  002324  EF2C  F013         	goto	l875
  3800  002328                     l2543:
  3801  002328  5015               	movf	(___flmul@a+2)^0,w,c
  3802  00232A  020F               	mulwf	___flmul@b^0,c
  3803  00232C  CFF3 F026          	movff	prodl,___flmul@temp
  3804  002330  CFF4 F027          	movff	prodh,___flmul@temp+1
  3805  002334  5026               	movf	___flmul@temp^0,w,c
  3806  002336  6E1C               	movwf	___flmul@grs^0,c
  3807  002338  6A1D               	clrf	(___flmul@grs+1)^0,c
  3808  00233A  6A1E               	clrf	(___flmul@grs+2)^0,c
  3809  00233C  6A1F               	clrf	(___flmul@grs+3)^0,c
  3810  00233E  5027               	movf	(___flmul@temp+1)^0,w,c
  3811  002340  6E22               	movwf	___flmul@prod^0,c
  3812  002342  6A23               	clrf	(___flmul@prod+1)^0,c
  3813  002344  6A24               	clrf	(___flmul@prod+2)^0,c
  3814  002346  6A25               	clrf	(___flmul@prod+3)^0,c
  3815  002348  5014               	movf	(___flmul@a+1)^0,w,c
  3816  00234A  0210               	mulwf	(___flmul@b+1)^0,c
  3817  00234C  CFF3 F026          	movff	prodl,___flmul@temp
  3818  002350  CFF4 F027          	movff	prodh,___flmul@temp+1
  3819  002354  5026               	movf	___flmul@temp^0,w,c
  3820  002356  261C               	addwf	___flmul@grs^0,f,c
  3821  002358  0E00               	movlw	0
  3822  00235A  221D               	addwfc	(___flmul@grs+1)^0,f,c
  3823  00235C  221E               	addwfc	(___flmul@grs+2)^0,f,c
  3824  00235E  221F               	addwfc	(___flmul@grs+3)^0,f,c
  3825  002360  5027               	movf	(___flmul@temp+1)^0,w,c
  3826  002362  2622               	addwf	___flmul@prod^0,f,c
  3827  002364  0E00               	movlw	0
  3828  002366  2223               	addwfc	(___flmul@prod+1)^0,f,c
  3829  002368  2224               	addwfc	(___flmul@prod+2)^0,f,c
  3830  00236A  2225               	addwfc	(___flmul@prod+3)^0,f,c
  3831  00236C  5013               	movf	___flmul@a^0,w,c
  3832  00236E  0211               	mulwf	(___flmul@b+2)^0,c
  3833  002370  CFF3 F026          	movff	prodl,___flmul@temp
  3834  002374  CFF4 F027          	movff	prodh,___flmul@temp+1
  3835  002378  5026               	movf	___flmul@temp^0,w,c
  3836  00237A  261C               	addwf	___flmul@grs^0,f,c
  3837  00237C  0E00               	movlw	0
  3838  00237E  221D               	addwfc	(___flmul@grs+1)^0,f,c
  3839  002380  221E               	addwfc	(___flmul@grs+2)^0,f,c
  3840  002382  221F               	addwfc	(___flmul@grs+3)^0,f,c
  3841  002384  5027               	movf	(___flmul@temp+1)^0,w,c
  3842  002386  2622               	addwf	___flmul@prod^0,f,c
  3843  002388  0E00               	movlw	0
  3844  00238A  2223               	addwfc	(___flmul@prod+1)^0,f,c
  3845  00238C  2224               	addwfc	(___flmul@prod+2)^0,f,c
  3846  00238E  2225               	addwfc	(___flmul@prod+3)^0,f,c
  3847  002390  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  3848  002394  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  3849  002398  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  3850  00239C  6A1C               	clrf	___flmul@grs^0,c
  3851  00239E  5013               	movf	___flmul@a^0,w,c
  3852  0023A0  0210               	mulwf	(___flmul@b+1)^0,c
  3853  0023A2  CFF3 F026          	movff	prodl,___flmul@temp
  3854  0023A6  CFF4 F027          	movff	prodh,___flmul@temp+1
  3855  0023AA  5026               	movf	___flmul@temp^0,w,c
  3856  0023AC  261C               	addwf	___flmul@grs^0,f,c
  3857  0023AE  5027               	movf	(___flmul@temp+1)^0,w,c
  3858  0023B0  221D               	addwfc	(___flmul@grs+1)^0,f,c
  3859  0023B2  0E00               	movlw	0
  3860  0023B4  221E               	addwfc	(___flmul@grs+2)^0,f,c
  3861  0023B6  0E00               	movlw	0
  3862  0023B8  221F               	addwfc	(___flmul@grs+3)^0,f,c
  3863  0023BA  5014               	movf	(___flmul@a+1)^0,w,c
  3864  0023BC  020F               	mulwf	___flmul@b^0,c
  3865  0023BE  CFF3 F026          	movff	prodl,___flmul@temp
  3866  0023C2  CFF4 F027          	movff	prodh,___flmul@temp+1
  3867  0023C6  5026               	movf	___flmul@temp^0,w,c
  3868  0023C8  261C               	addwf	___flmul@grs^0,f,c
  3869  0023CA  5027               	movf	(___flmul@temp+1)^0,w,c
  3870  0023CC  221D               	addwfc	(___flmul@grs+1)^0,f,c
  3871  0023CE  0E00               	movlw	0
  3872  0023D0  221E               	addwfc	(___flmul@grs+2)^0,f,c
  3873  0023D2  0E00               	movlw	0
  3874  0023D4  221F               	addwfc	(___flmul@grs+3)^0,f,c
  3875  0023D6  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  3876  0023DA  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  3877  0023DE  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  3878  0023E2  6A1C               	clrf	___flmul@grs^0,c
  3879  0023E4  5013               	movf	___flmul@a^0,w,c
  3880  0023E6  020F               	mulwf	___flmul@b^0,c
  3881  0023E8  CFF3 F026          	movff	prodl,___flmul@temp
  3882  0023EC  CFF4 F027          	movff	prodh,___flmul@temp+1
  3883  0023F0  5026               	movf	___flmul@temp^0,w,c
  3884  0023F2  261C               	addwf	___flmul@grs^0,f,c
  3885  0023F4  5027               	movf	(___flmul@temp+1)^0,w,c
  3886  0023F6  221D               	addwfc	(___flmul@grs+1)^0,f,c
  3887  0023F8  0E00               	movlw	0
  3888  0023FA  221E               	addwfc	(___flmul@grs+2)^0,f,c
  3889  0023FC  0E00               	movlw	0
  3890  0023FE  221F               	addwfc	(___flmul@grs+3)^0,f,c
  3891  002400  5015               	movf	(___flmul@a+2)^0,w,c
  3892  002402  0210               	mulwf	(___flmul@b+1)^0,c
  3893  002404  CFF3 F026          	movff	prodl,___flmul@temp
  3894  002408  CFF4 F027          	movff	prodh,___flmul@temp+1
  3895  00240C  5026               	movf	___flmul@temp^0,w,c
  3896  00240E  2622               	addwf	___flmul@prod^0,f,c
  3897  002410  5027               	movf	(___flmul@temp+1)^0,w,c
  3898  002412  2223               	addwfc	(___flmul@prod+1)^0,f,c
  3899  002414  0E00               	movlw	0
  3900  002416  2224               	addwfc	(___flmul@prod+2)^0,f,c
  3901  002418  0E00               	movlw	0
  3902  00241A  2225               	addwfc	(___flmul@prod+3)^0,f,c
  3903  00241C  5014               	movf	(___flmul@a+1)^0,w,c
  3904  00241E  0211               	mulwf	(___flmul@b+2)^0,c
  3905  002420  CFF3 F026          	movff	prodl,___flmul@temp
  3906  002424  CFF4 F027          	movff	prodh,___flmul@temp+1
  3907  002428  5026               	movf	___flmul@temp^0,w,c
  3908  00242A  2622               	addwf	___flmul@prod^0,f,c
  3909  00242C  5027               	movf	(___flmul@temp+1)^0,w,c
  3910  00242E  2223               	addwfc	(___flmul@prod+1)^0,f,c
  3911  002430  0E00               	movlw	0
  3912  002432  2224               	addwfc	(___flmul@prod+2)^0,f,c
  3913  002434  0E00               	movlw	0
  3914  002436  2225               	addwfc	(___flmul@prod+3)^0,f,c
  3915  002438  5015               	movf	(___flmul@a+2)^0,w,c
  3916  00243A  0211               	mulwf	(___flmul@b+2)^0,c
  3917  00243C  CFF3 F026          	movff	prodl,___flmul@temp
  3918  002440  CFF4 F027          	movff	prodh,___flmul@temp+1
  3919  002444  5026               	movf	___flmul@temp^0,w,c
  3920  002446  6E17               	movwf	??___flmul^0,c
  3921  002448  5027               	movf	(___flmul@temp+1)^0,w,c
  3922  00244A  6E18               	movwf	(??___flmul+1)^0,c
  3923  00244C  6A19               	clrf	(??___flmul+2)^0,c
  3924  00244E  6A1A               	clrf	(??___flmul+3)^0,c
  3925  002450  C019  F01A         	movff	??___flmul+2,??___flmul+3
  3926  002454  C018  F019         	movff	??___flmul+1,??___flmul+2
  3927  002458  C017  F018         	movff	??___flmul,??___flmul+1
  3928  00245C  6A17               	clrf	??___flmul^0,c
  3929  00245E  5017               	movf	??___flmul^0,w,c
  3930  002460  2622               	addwf	___flmul@prod^0,f,c
  3931  002462  5018               	movf	(??___flmul+1)^0,w,c
  3932  002464  2223               	addwfc	(___flmul@prod+1)^0,f,c
  3933  002466  5019               	movf	(??___flmul+2)^0,w,c
  3934  002468  2224               	addwfc	(___flmul@prod+2)^0,f,c
  3935  00246A  501A               	movf	(??___flmul+3)^0,w,c
  3936  00246C  2225               	addwfc	(___flmul@prod+3)^0,f,c
  3937  00246E  C01C  F017         	movff	___flmul@grs,??___flmul
  3938  002472  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  3939  002476  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  3940  00247A  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  3941  00247E  0E19               	movlw	25
  3942  002480  EF47  F012         	goto	u2510
  3943  002484                     u2515:
  3944  002484  90D8               	bcf	status,0,c
  3945  002486  321A               	rrcf	(??___flmul+3)^0,f,c
  3946  002488  3219               	rrcf	(??___flmul+2)^0,f,c
  3947  00248A  3218               	rrcf	(??___flmul+1)^0,f,c
  3948  00248C  3217               	rrcf	??___flmul^0,f,c
  3949  00248E                     u2510:
  3950  00248E  2EE8               	decfsz	wreg,f,c
  3951  002490  EF42  F012         	goto	u2515
  3952  002494  5017               	movf	??___flmul^0,w,c
  3953  002496  2622               	addwf	___flmul@prod^0,f,c
  3954  002498  5018               	movf	(??___flmul+1)^0,w,c
  3955  00249A  2223               	addwfc	(___flmul@prod+1)^0,f,c
  3956  00249C  5019               	movf	(??___flmul+2)^0,w,c
  3957  00249E  2224               	addwfc	(___flmul@prod+2)^0,f,c
  3958  0024A0  501A               	movf	(??___flmul+3)^0,w,c
  3959  0024A2  2225               	addwfc	(___flmul@prod+3)^0,f,c
  3960  0024A4  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  3961  0024A8  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  3962  0024AC  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  3963  0024B0  6A1C               	clrf	___flmul@grs^0,c
  3964  0024B2  5020               	movf	___flmul@aexp^0,w,c
  3965  0024B4  C021  F017         	movff	___flmul@bexp,??___flmul
  3966  0024B8  6A18               	clrf	(??___flmul+1)^0,c
  3967  0024BA  2617               	addwf	??___flmul^0,f,c
  3968  0024BC  0E00               	movlw	0
  3969  0024BE  2218               	addwfc	(??___flmul+1)^0,f,c
  3970  0024C0  0E82               	movlw	130
  3971  0024C2  2417               	addwf	??___flmul^0,w,c
  3972  0024C4  6E26               	movwf	___flmul@temp^0,c
  3973  0024C6  0EFF               	movlw	255
  3974  0024C8  2018               	addwfc	(??___flmul+1)^0,w,c
  3975  0024CA  6E27               	movwf	(___flmul@temp+1)^0,c
  3976  0024CC  EF7D  F012         	goto	l2591
  3977  0024D0                     l2585:
  3978  0024D0  90D8               	bcf	status,0,c
  3979  0024D2  3622               	rlcf	___flmul@prod^0,f,c
  3980  0024D4  3623               	rlcf	(___flmul@prod+1)^0,f,c
  3981  0024D6  3624               	rlcf	(___flmul@prod+2)^0,f,c
  3982  0024D8  3625               	rlcf	(___flmul@prod+3)^0,f,c
  3983  0024DA  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  3984  0024DC  EF72  F012         	goto	u2521
  3985  0024E0  EF74  F012         	goto	u2520
  3986  0024E4                     u2521:
  3987  0024E4  EF75  F012         	goto	l878
  3988  0024E8                     u2520:
  3989  0024E8  8022               	bsf	___flmul@prod^0,0,c
  3990  0024EA                     l878:
  3991  0024EA  90D8               	bcf	status,0,c
  3992  0024EC  361C               	rlcf	___flmul@grs^0,f,c
  3993  0024EE  361D               	rlcf	(___flmul@grs+1)^0,f,c
  3994  0024F0  361E               	rlcf	(___flmul@grs+2)^0,f,c
  3995  0024F2  361F               	rlcf	(___flmul@grs+3)^0,f,c
  3996  0024F4  0626               	decf	___flmul@temp^0,f,c
  3997  0024F6  A0D8               	btfss	status,0,c
  3998  0024F8  0627               	decf	(___flmul@temp+1)^0,f,c
  3999  0024FA                     l2591:
  4000  0024FA  AE24               	btfss	(___flmul@prod+2)^0,7,c
  4001  0024FC  EF82  F012         	goto	u2531
  4002  002500  EF84  F012         	goto	u2530
  4003  002504                     u2531:
  4004  002504  EF68  F012         	goto	l2585
  4005  002508                     u2530:
  4006  002508  0E00               	movlw	0
  4007  00250A  6E20               	movwf	___flmul@aexp^0,c
  4008  00250C  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  4009  00250E  EF8B  F012         	goto	u2541
  4010  002512  EF8D  F012         	goto	u2540
  4011  002516                     u2541:
  4012  002516  EFB1  F012         	goto	l880
  4013  00251A                     u2540:
  4014  00251A  0EFF               	movlw	255
  4015  00251C  141C               	andwf	___flmul@grs^0,w,c
  4016  00251E  6E17               	movwf	??___flmul^0,c
  4017  002520  0EFF               	movlw	255
  4018  002522  141D               	andwf	(___flmul@grs+1)^0,w,c
  4019  002524  6E18               	movwf	(??___flmul+1)^0,c
  4020  002526  0EFF               	movlw	255
  4021  002528  141E               	andwf	(___flmul@grs+2)^0,w,c
  4022  00252A  6E19               	movwf	(??___flmul+2)^0,c
  4023  00252C  0E7F               	movlw	127
  4024  00252E  141F               	andwf	(___flmul@grs+3)^0,w,c
  4025  002530  6E1A               	movwf	(??___flmul+3)^0,c
  4026  002532  5017               	movf	??___flmul^0,w,c
  4027  002534  1018               	iorwf	(??___flmul+1)^0,w,c
  4028  002536  1019               	iorwf	(??___flmul+2)^0,w,c
  4029  002538  101A               	iorwf	(??___flmul+3)^0,w,c
  4030  00253A  B4D8               	btfsc	status,2,c
  4031  00253C  EFA2  F012         	goto	u2551
  4032  002540  EFA4  F012         	goto	u2550
  4033  002544                     u2551:
  4034  002544  EFA8  F012         	goto	l881
  4035  002548                     u2550:
  4036  002548                     l2599:
  4037  002548  0E01               	movlw	1
  4038  00254A  6E20               	movwf	___flmul@aexp^0,c
  4039  00254C  EFB1  F012         	goto	l880
  4040  002550                     l881:
  4041  002550  A022               	btfss	___flmul@prod^0,0,c
  4042  002552  EFAD  F012         	goto	u2561
  4043  002556  EFAF  F012         	goto	u2560
  4044  00255A                     u2561:
  4045  00255A  EFB1  F012         	goto	l880
  4046  00255E                     u2560:
  4047  00255E  EFA4  F012         	goto	l2599
  4048  002562                     l880:
  4049  002562  5020               	movf	___flmul@aexp^0,w,c
  4050  002564  B4D8               	btfsc	status,2,c
  4051  002566  EFB7  F012         	goto	u2571
  4052  00256A  EFB9  F012         	goto	u2570
  4053  00256E                     u2571:
  4054  00256E  EFDD  F012         	goto	l2611
  4055  002572                     u2570:
  4056  002572  0E01               	movlw	1
  4057  002574  2622               	addwf	___flmul@prod^0,f,c
  4058  002576  0E00               	movlw	0
  4059  002578  2223               	addwfc	(___flmul@prod+1)^0,f,c
  4060  00257A  2224               	addwfc	(___flmul@prod+2)^0,f,c
  4061  00257C  2225               	addwfc	(___flmul@prod+3)^0,f,c
  4062  00257E  A025               	btfss	(___flmul@prod+3)^0,0,c
  4063  002580  EFC4  F012         	goto	u2581
  4064  002584  EFC6  F012         	goto	u2580
  4065  002588                     u2581:
  4066  002588  EFDD  F012         	goto	l2611
  4067  00258C                     u2580:
  4068  00258C  C022  F017         	movff	___flmul@prod,??___flmul
  4069  002590  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  4070  002594  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  4071  002598  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  4072  00259C  341A               	rlcf	(??___flmul+3)^0,w,c
  4073  00259E  321A               	rrcf	(??___flmul+3)^0,f,c
  4074  0025A0  3219               	rrcf	(??___flmul+2)^0,f,c
  4075  0025A2  3218               	rrcf	(??___flmul+1)^0,f,c
  4076  0025A4  3217               	rrcf	??___flmul^0,f,c
  4077  0025A6  C017  F022         	movff	??___flmul,___flmul@prod
  4078  0025AA  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  4079  0025AE  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  4080  0025B2  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  4081  0025B6  4A26               	infsnz	___flmul@temp^0,f,c
  4082  0025B8  2A27               	incf	(___flmul@temp+1)^0,f,c
  4083  0025BA                     l2611:
  4084  0025BA  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  4085  0025BC  EFE8  F012         	goto	u2591
  4086  0025C0  5027               	movf	(___flmul@temp+1)^0,w,c
  4087  0025C2  E108               	bnz	u2590
  4088  0025C4  2826               	incf	___flmul@temp^0,w,c
  4089  0025C6  A0D8               	btfss	status,0,c
  4090  0025C8  EFE8  F012         	goto	u2591
  4091  0025CC  EFEA  F012         	goto	u2590
  4092  0025D0                     u2591:
  4093  0025D0  EFF4  F012         	goto	l2615
  4094  0025D4                     u2590:
  4095  0025D4  0E00               	movlw	0
  4096  0025D6  6E22               	movwf	___flmul@prod^0,c
  4097  0025D8  0E00               	movlw	0
  4098  0025DA  6E23               	movwf	(___flmul@prod+1)^0,c
  4099  0025DC  0E80               	movlw	128
  4100  0025DE  6E24               	movwf	(___flmul@prod+2)^0,c
  4101  0025E0  0E7F               	movlw	127
  4102  0025E2  6E25               	movwf	(___flmul@prod+3)^0,c
  4103  0025E4  EF22  F013         	goto	l2627
  4104  0025E8                     l2615:
  4105  0025E8  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  4106  0025EA  EF01  F013         	goto	u2600
  4107  0025EE  5027               	movf	(___flmul@temp+1)^0,w,c
  4108  0025F0  E106               	bnz	u2601
  4109  0025F2  0426               	decf	___flmul@temp^0,w,c
  4110  0025F4  B0D8               	btfsc	status,0,c
  4111  0025F6  EFFF  F012         	goto	u2601
  4112  0025FA  EF01  F013         	goto	u2600
  4113  0025FE                     u2601:
  4114  0025FE  EF0D  F013         	goto	l888
  4115  002602                     u2600:
  4116  002602  0E00               	movlw	0
  4117  002604  6E22               	movwf	___flmul@prod^0,c
  4118  002606  0E00               	movlw	0
  4119  002608  6E23               	movwf	(___flmul@prod+1)^0,c
  4120  00260A  0E00               	movlw	0
  4121  00260C  6E24               	movwf	(___flmul@prod+2)^0,c
  4122  00260E  0E00               	movlw	0
  4123  002610  6E25               	movwf	(___flmul@prod+3)^0,c
  4124  002612  0E00               	movlw	0
  4125  002614  6E1B               	movwf	___flmul@sign^0,c
  4126  002616  EF22  F013         	goto	l2627
  4127  00261A                     l888:
  4128  00261A  C026  F021         	movff	___flmul@temp,___flmul@bexp
  4129  00261E  0EFF               	movlw	255
  4130  002620  1622               	andwf	___flmul@prod^0,f,c
  4131  002622  0EFF               	movlw	255
  4132  002624  1623               	andwf	(___flmul@prod+1)^0,f,c
  4133  002626  0E7F               	movlw	127
  4134  002628  1624               	andwf	(___flmul@prod+2)^0,f,c
  4135  00262A  0E00               	movlw	0
  4136  00262C  1625               	andwf	(___flmul@prod+3)^0,f,c
  4137  00262E  A021               	btfss	___flmul@bexp^0,0,c
  4138  002630  EF1C  F013         	goto	u2611
  4139  002634  EF1E  F013         	goto	u2610
  4140  002638                     u2611:
  4141  002638  EF1F  F013         	goto	l2625
  4142  00263C                     u2610:
  4143  00263C  8E24               	bsf	(___flmul@prod+2)^0,7,c
  4144  00263E                     l2625:
  4145  00263E  90D8               	bcf	status,0,c
  4146  002640  3021               	rrcf	___flmul@bexp^0,w,c
  4147  002642  6E25               	movwf	(___flmul@prod+3)^0,c
  4148  002644                     l2627:
  4149  002644  501B               	movf	___flmul@sign^0,w,c
  4150  002646  1225               	iorwf	(___flmul@prod+3)^0,f,c
  4151  002648  C022  F00F         	movff	___flmul@prod,?___flmul
  4152  00264C  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  4153  002650  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  4154  002654  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  4155  002658                     l875:
  4156  002658  0012               	return		;funcret
  4157  00265A                     __end_of___flmul:
  4158                           	callstack 0
  4159                           
  4160 ;; *************** function __tdiv_to_l_ *****************
  4161 ;; Defined at:
  4162 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\ftdivl.c"
  4163 ;; Parameters:    Size  Location     Type
  4164 ;;  f1              4    0[COMRAM] float 
  4165 ;;  f2              4    4[COMRAM] float 
  4166 ;; Auto vars:     Size  Location     Type
  4167 ;;  quot            4   11[COMRAM] unsigned long 
  4168 ;;  exp1            1   16[COMRAM] unsigned char 
  4169 ;;  cntr            1   15[COMRAM] unsigned char 
  4170 ;; Return value:  Size  Location     Type
  4171 ;;                  4    0[COMRAM] unsigned long 
  4172 ;; Registers used:
  4173 ;;		wreg, status,2, status,0
  4174 ;; Tracked objects:
  4175 ;;		On entry : 0/0
  4176 ;;		On exit  : 0/0
  4177 ;;		Unchanged: 0/0
  4178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4179 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4180 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4181 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4182 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4183 ;;Total ram usage:       17 bytes
  4184 ;; Hardware stack levels used: 1
  4185 ;; Hardware stack levels required when called: 1
  4186 ;; This function calls:
  4187 ;;		Nothing
  4188 ;; This function is called by:
  4189 ;;		_sprintf
  4190 ;; This function uses a non-reentrant model
  4191 ;;
  4192                           
  4193                           	psect	text10
  4194  002DF4                     __ptext10:
  4195                           	callstack 0
  4196  002DF4                     __tdiv_to_l_:
  4197                           	callstack 28
  4198  002DF4  C003  F009         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  4199  002DF8  6A0A               	clrf	(??__tdiv_to_l_+1)^0,c
  4200  002DFA  6A0B               	clrf	(??__tdiv_to_l_+2)^0,c
  4201  002DFC  3402               	rlcf	(__tdiv_to_l_@f1+1)^0,w,c
  4202  002DFE  3609               	rlcf	??__tdiv_to_l_^0,f,c
  4203  002E00  E301               	bnc	u3201
  4204  002E02  800A               	bsf	(??__tdiv_to_l_+1)^0,0,c
  4205  002E04                     u3201:
  4206  002E04  5009               	movf	??__tdiv_to_l_^0,w,c
  4207  002E06  6E11               	movwf	__tdiv_to_l_@exp1^0,c
  4208  002E08  5011               	movf	__tdiv_to_l_@exp1^0,w,c
  4209  002E0A  A4D8               	btfss	status,2,c
  4210  002E0C  EF0A  F017         	goto	u3211
  4211  002E10  EF0C  F017         	goto	u3210
  4212  002E14                     u3211:
  4213  002E14  EF16  F017         	goto	l2913
  4214  002E18                     u3210:
  4215  002E18                     l2909:
  4216  002E18  0E00               	movlw	0
  4217  002E1A  6E01               	movwf	?__tdiv_to_l_^0,c
  4218  002E1C  0E00               	movlw	0
  4219  002E1E  6E02               	movwf	(?__tdiv_to_l_+1)^0,c
  4220  002E20  0E00               	movlw	0
  4221  002E22  6E03               	movwf	(?__tdiv_to_l_+2)^0,c
  4222  002E24  0E00               	movlw	0
  4223  002E26  6E04               	movwf	(?__tdiv_to_l_+3)^0,c
  4224  002E28  EFA4  F017         	goto	l598
  4225  002E2C                     l2913:
  4226  002E2C  C007  F009         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  4227  002E30  6A0A               	clrf	(??__tdiv_to_l_+1)^0,c
  4228  002E32  6A0B               	clrf	(??__tdiv_to_l_+2)^0,c
  4229  002E34  3406               	rlcf	(__tdiv_to_l_@f2+1)^0,w,c
  4230  002E36  3609               	rlcf	??__tdiv_to_l_^0,f,c
  4231  002E38  E301               	bnc	u3221
  4232  002E3A  800A               	bsf	(??__tdiv_to_l_+1)^0,0,c
  4233  002E3C                     u3221:
  4234  002E3C  5009               	movf	??__tdiv_to_l_^0,w,c
  4235  002E3E  6E10               	movwf	__tdiv_to_l_@cntr^0,c
  4236  002E40  5010               	movf	__tdiv_to_l_@cntr^0,w,c
  4237  002E42  A4D8               	btfss	status,2,c
  4238  002E44  EF26  F017         	goto	u3231
  4239  002E48  EF28  F017         	goto	u3230
  4240  002E4C                     u3231:
  4241  002E4C  EF2A  F017         	goto	l2919
  4242  002E50                     u3230:
  4243  002E50  EF0C  F017         	goto	l2909
  4244  002E54                     l2919:
  4245  002E54  8E02               	bsf	(__tdiv_to_l_@f1+1)^0,7,c
  4246  002E56  0EFF               	movlw	255
  4247  002E58  1601               	andwf	__tdiv_to_l_@f1^0,f,c
  4248  002E5A  0EFF               	movlw	255
  4249  002E5C  1602               	andwf	(__tdiv_to_l_@f1+1)^0,f,c
  4250  002E5E  0E00               	movlw	0
  4251  002E60  1603               	andwf	(__tdiv_to_l_@f1+2)^0,f,c
  4252  002E62  8E06               	bsf	(__tdiv_to_l_@f2+1)^0,7,c
  4253  002E64  0EFF               	movlw	255
  4254  002E66  1605               	andwf	__tdiv_to_l_@f2^0,f,c
  4255  002E68  0EFF               	movlw	255
  4256  002E6A  1606               	andwf	(__tdiv_to_l_@f2+1)^0,f,c
  4257  002E6C  0E00               	movlw	0
  4258  002E6E  1607               	andwf	(__tdiv_to_l_@f2+2)^0,f,c
  4259  002E70  0E00               	movlw	0
  4260  002E72  6E0C               	movwf	__tdiv_to_l_@quot^0,c
  4261  002E74  0E00               	movlw	0
  4262  002E76  6E0D               	movwf	(__tdiv_to_l_@quot+1)^0,c
  4263  002E78  0E00               	movlw	0
  4264  002E7A  6E0E               	movwf	(__tdiv_to_l_@quot+2)^0,c
  4265  002E7C  0E00               	movlw	0
  4266  002E7E  6E0F               	movwf	(__tdiv_to_l_@quot+3)^0,c
  4267  002E80  0E7F               	movlw	127
  4268  002E82  5E11               	subwf	__tdiv_to_l_@exp1^0,f,c
  4269  002E84  5010               	movf	__tdiv_to_l_@cntr^0,w,c
  4270  002E86  0F98               	addlw	152
  4271  002E88  5E11               	subwf	__tdiv_to_l_@exp1^0,f,c
  4272  002E8A  0E18               	movlw	24
  4273  002E8C  6E10               	movwf	__tdiv_to_l_@cntr^0,c
  4274  002E8E                     l600:
  4275  002E8E  90D8               	bcf	status,0,c
  4276  002E90  360C               	rlcf	__tdiv_to_l_@quot^0,f,c
  4277  002E92  360D               	rlcf	(__tdiv_to_l_@quot+1)^0,f,c
  4278  002E94  360E               	rlcf	(__tdiv_to_l_@quot+2)^0,f,c
  4279  002E96  360F               	rlcf	(__tdiv_to_l_@quot+3)^0,f,c
  4280  002E98  5005               	movf	__tdiv_to_l_@f2^0,w,c
  4281  002E9A  5C01               	subwf	__tdiv_to_l_@f1^0,w,c
  4282  002E9C  5006               	movf	(__tdiv_to_l_@f2+1)^0,w,c
  4283  002E9E  5802               	subwfb	(__tdiv_to_l_@f1+1)^0,w,c
  4284  002EA0  5007               	movf	(__tdiv_to_l_@f2+2)^0,w,c
  4285  002EA2  5803               	subwfb	(__tdiv_to_l_@f1+2)^0,w,c
  4286  002EA4  A0D8               	btfss	status,0,c
  4287  002EA6  EF57  F017         	goto	u3241
  4288  002EAA  EF59  F017         	goto	u3240
  4289  002EAE                     u3241:
  4290  002EAE  EF60  F017         	goto	l601
  4291  002EB2                     u3240:
  4292  002EB2  5005               	movf	__tdiv_to_l_@f2^0,w,c
  4293  002EB4  5E01               	subwf	__tdiv_to_l_@f1^0,f,c
  4294  002EB6  5006               	movf	(__tdiv_to_l_@f2+1)^0,w,c
  4295  002EB8  5A02               	subwfb	(__tdiv_to_l_@f1+1)^0,f,c
  4296  002EBA  5007               	movf	(__tdiv_to_l_@f2+2)^0,w,c
  4297  002EBC  5A03               	subwfb	(__tdiv_to_l_@f1+2)^0,f,c
  4298  002EBE  800C               	bsf	__tdiv_to_l_@quot^0,0,c
  4299  002EC0                     l601:
  4300  002EC0  90D8               	bcf	status,0,c
  4301  002EC2  3601               	rlcf	__tdiv_to_l_@f1^0,f,c
  4302  002EC4  3602               	rlcf	(__tdiv_to_l_@f1+1)^0,f,c
  4303  002EC6  3603               	rlcf	(__tdiv_to_l_@f1+2)^0,f,c
  4304  002EC8  2E10               	decfsz	__tdiv_to_l_@cntr^0,f,c
  4305  002ECA  EF47  F017         	goto	l600
  4306  002ECE  BE11               	btfsc	__tdiv_to_l_@exp1^0,7,c
  4307  002ED0  EF6E  F017         	goto	u3250
  4308  002ED4  EF6C  F017         	goto	u3251
  4309  002ED8                     u3251:
  4310  002ED8  EF84  F017         	goto	l2953
  4311  002EDC                     u3250:
  4312  002EDC  5011               	movf	__tdiv_to_l_@exp1^0,w,c
  4313  002EDE  0A80               	xorlw	128
  4314  002EE0  0F97               	addlw	151
  4315  002EE2  B0D8               	btfsc	status,0,c
  4316  002EE4  EF76  F017         	goto	u3261
  4317  002EE8  EF78  F017         	goto	u3260
  4318  002EEC                     u3261:
  4319  002EEC  EF7A  F017         	goto	l2949
  4320  002EF0                     u3260:
  4321  002EF0  EF0C  F017         	goto	l2909
  4322  002EF4                     l2949:
  4323  002EF4  90D8               	bcf	status,0,c
  4324  002EF6  320F               	rrcf	(__tdiv_to_l_@quot+3)^0,f,c
  4325  002EF8  320E               	rrcf	(__tdiv_to_l_@quot+2)^0,f,c
  4326  002EFA  320D               	rrcf	(__tdiv_to_l_@quot+1)^0,f,c
  4327  002EFC  320C               	rrcf	__tdiv_to_l_@quot^0,f,c
  4328  002EFE  3E11               	incfsz	__tdiv_to_l_@exp1^0,f,c
  4329  002F00  EF7A  F017         	goto	l2949
  4330  002F04  EF9C  F017         	goto	l607
  4331  002F08                     l2953:
  4332  002F08  0E17               	movlw	23
  4333  002F0A  6411               	cpfsgt	__tdiv_to_l_@exp1^0,c
  4334  002F0C  EF8A  F017         	goto	u3271
  4335  002F10  EF8C  F017         	goto	u3270
  4336  002F14                     u3271:
  4337  002F14  EF94  F017         	goto	l2961
  4338  002F18                     u3270:
  4339  002F18  EF0C  F017         	goto	l2909
  4340  002F1C                     l2959:
  4341  002F1C  90D8               	bcf	status,0,c
  4342  002F1E  360C               	rlcf	__tdiv_to_l_@quot^0,f,c
  4343  002F20  360D               	rlcf	(__tdiv_to_l_@quot+1)^0,f,c
  4344  002F22  360E               	rlcf	(__tdiv_to_l_@quot+2)^0,f,c
  4345  002F24  360F               	rlcf	(__tdiv_to_l_@quot+3)^0,f,c
  4346  002F26  0611               	decf	__tdiv_to_l_@exp1^0,f,c
  4347  002F28                     l2961:
  4348  002F28  5011               	movf	__tdiv_to_l_@exp1^0,w,c
  4349  002F2A  A4D8               	btfss	status,2,c
  4350  002F2C  EF9A  F017         	goto	u3281
  4351  002F30  EF9C  F017         	goto	u3280
  4352  002F34                     u3281:
  4353  002F34  EF8E  F017         	goto	l2959
  4354  002F38                     u3280:
  4355  002F38                     l607:
  4356  002F38  C00C  F001         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  4357  002F3C  C00D  F002         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  4358  002F40  C00E  F003         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  4359  002F44  C00F  F004         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  4360  002F48                     l598:
  4361  002F48  0012               	return		;funcret
  4362  002F4A                     __end_of__tdiv_to_l_:
  4363                           	callstack 0
  4364                           
  4365 ;; *************** function __div_to_l_ *****************
  4366 ;; Defined at:
  4367 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\fldivl.c"
  4368 ;; Parameters:    Size  Location     Type
  4369 ;;  f1              4    0[COMRAM] unsigned long 
  4370 ;;  f2              4    4[COMRAM] unsigned long 
  4371 ;; Auto vars:     Size  Location     Type
  4372 ;;  quot            4    8[COMRAM] unsigned long 
  4373 ;;  exp1            1   13[COMRAM] unsigned char 
  4374 ;;  cntr            1   12[COMRAM] unsigned char 
  4375 ;; Return value:  Size  Location     Type
  4376 ;;                  4    0[COMRAM] unsigned long 
  4377 ;; Registers used:
  4378 ;;		wreg, status,2, status,0
  4379 ;; Tracked objects:
  4380 ;;		On entry : 0/0
  4381 ;;		On exit  : 0/0
  4382 ;;		Unchanged: 0/0
  4383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4384 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4385 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4387 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4388 ;;Total ram usage:       14 bytes
  4389 ;; Hardware stack levels used: 1
  4390 ;; Hardware stack levels required when called: 1
  4391 ;; This function calls:
  4392 ;;		Nothing
  4393 ;; This function is called by:
  4394 ;;		_sprintf
  4395 ;; This function uses a non-reentrant model
  4396 ;;
  4397                           
  4398                           	psect	text11
  4399  002F4A                     __ptext11:
  4400                           	callstack 0
  4401  002F4A                     __div_to_l_:
  4402                           	callstack 28
  4403  002F4A  3403               	rlcf	(__div_to_l_@f1+2)^0,w,c
  4404  002F4C  3404               	rlcf	(__div_to_l_@f1+3)^0,w,c
  4405  002F4E  6E0E               	movwf	__div_to_l_@exp1^0,c
  4406  002F50  500E               	movf	__div_to_l_@exp1^0,w,c
  4407  002F52  A4D8               	btfss	status,2,c
  4408  002F54  EFAE  F017         	goto	u3291
  4409  002F58  EFB0  F017         	goto	u3290
  4410  002F5C                     u3291:
  4411  002F5C  EFBA  F017         	goto	l2969
  4412  002F60                     u3290:
  4413  002F60                     l2965:
  4414  002F60  0E00               	movlw	0
  4415  002F62  6E01               	movwf	?__div_to_l_^0,c
  4416  002F64  0E00               	movlw	0
  4417  002F66  6E02               	movwf	(?__div_to_l_+1)^0,c
  4418  002F68  0E00               	movlw	0
  4419  002F6A  6E03               	movwf	(?__div_to_l_+2)^0,c
  4420  002F6C  0E00               	movlw	0
  4421  002F6E  6E04               	movwf	(?__div_to_l_+3)^0,c
  4422  002F70  EF4A  F018         	goto	l489
  4423  002F74                     l2969:
  4424  002F74  3407               	rlcf	(__div_to_l_@f2+2)^0,w,c
  4425  002F76  3408               	rlcf	(__div_to_l_@f2+3)^0,w,c
  4426  002F78  6E0D               	movwf	__div_to_l_@cntr^0,c
  4427  002F7A  500D               	movf	__div_to_l_@cntr^0,w,c
  4428  002F7C  A4D8               	btfss	status,2,c
  4429  002F7E  EFC3  F017         	goto	u3301
  4430  002F82  EFC5  F017         	goto	u3300
  4431  002F86                     u3301:
  4432  002F86  EFC7  F017         	goto	l2975
  4433  002F8A                     u3300:
  4434  002F8A  EFB0  F017         	goto	l2965
  4435  002F8E                     l2975:
  4436  002F8E  8E03               	bsf	(__div_to_l_@f1+2)^0,7,c
  4437  002F90  0EFF               	movlw	255
  4438  002F92  1601               	andwf	__div_to_l_@f1^0,f,c
  4439  002F94  0EFF               	movlw	255
  4440  002F96  1602               	andwf	(__div_to_l_@f1+1)^0,f,c
  4441  002F98  0EFF               	movlw	255
  4442  002F9A  1603               	andwf	(__div_to_l_@f1+2)^0,f,c
  4443  002F9C  0E00               	movlw	0
  4444  002F9E  1604               	andwf	(__div_to_l_@f1+3)^0,f,c
  4445  002FA0  8E07               	bsf	(__div_to_l_@f2+2)^0,7,c
  4446  002FA2  0EFF               	movlw	255
  4447  002FA4  1605               	andwf	__div_to_l_@f2^0,f,c
  4448  002FA6  0EFF               	movlw	255
  4449  002FA8  1606               	andwf	(__div_to_l_@f2+1)^0,f,c
  4450  002FAA  0EFF               	movlw	255
  4451  002FAC  1607               	andwf	(__div_to_l_@f2+2)^0,f,c
  4452  002FAE  0E00               	movlw	0
  4453  002FB0  1608               	andwf	(__div_to_l_@f2+3)^0,f,c
  4454  002FB2  0E00               	movlw	0
  4455  002FB4  6E09               	movwf	__div_to_l_@quot^0,c
  4456  002FB6  0E00               	movlw	0
  4457  002FB8  6E0A               	movwf	(__div_to_l_@quot+1)^0,c
  4458  002FBA  0E00               	movlw	0
  4459  002FBC  6E0B               	movwf	(__div_to_l_@quot+2)^0,c
  4460  002FBE  0E00               	movlw	0
  4461  002FC0  6E0C               	movwf	(__div_to_l_@quot+3)^0,c
  4462  002FC2  0E7F               	movlw	127
  4463  002FC4  5E0E               	subwf	__div_to_l_@exp1^0,f,c
  4464  002FC6  500D               	movf	__div_to_l_@cntr^0,w,c
  4465  002FC8  0FA0               	addlw	160
  4466  002FCA  5E0E               	subwf	__div_to_l_@exp1^0,f,c
  4467  002FCC  0E20               	movlw	32
  4468  002FCE  6E0D               	movwf	__div_to_l_@cntr^0,c
  4469  002FD0                     l2989:
  4470  002FD0  90D8               	bcf	status,0,c
  4471  002FD2  3609               	rlcf	__div_to_l_@quot^0,f,c
  4472  002FD4  360A               	rlcf	(__div_to_l_@quot+1)^0,f,c
  4473  002FD6  360B               	rlcf	(__div_to_l_@quot+2)^0,f,c
  4474  002FD8  360C               	rlcf	(__div_to_l_@quot+3)^0,f,c
  4475  002FDA  5005               	movf	__div_to_l_@f2^0,w,c
  4476  002FDC  5C01               	subwf	__div_to_l_@f1^0,w,c
  4477  002FDE  5006               	movf	(__div_to_l_@f2+1)^0,w,c
  4478  002FE0  5802               	subwfb	(__div_to_l_@f1+1)^0,w,c
  4479  002FE2  5007               	movf	(__div_to_l_@f2+2)^0,w,c
  4480  002FE4  5803               	subwfb	(__div_to_l_@f1+2)^0,w,c
  4481  002FE6  5008               	movf	(__div_to_l_@f2+3)^0,w,c
  4482  002FE8  5804               	subwfb	(__div_to_l_@f1+3)^0,w,c
  4483  002FEA  A0D8               	btfss	status,0,c
  4484  002FEC  EFFA  F017         	goto	u3311
  4485  002FF0  EFFC  F017         	goto	u3310
  4486  002FF4                     u3311:
  4487  002FF4  EF05  F018         	goto	l2997
  4488  002FF8                     u3310:
  4489  002FF8  5005               	movf	__div_to_l_@f2^0,w,c
  4490  002FFA  5E01               	subwf	__div_to_l_@f1^0,f,c
  4491  002FFC  5006               	movf	(__div_to_l_@f2+1)^0,w,c
  4492  002FFE  5A02               	subwfb	(__div_to_l_@f1+1)^0,f,c
  4493  003000  5007               	movf	(__div_to_l_@f2+2)^0,w,c
  4494  003002  5A03               	subwfb	(__div_to_l_@f1+2)^0,f,c
  4495  003004  5008               	movf	(__div_to_l_@f2+3)^0,w,c
  4496  003006  5A04               	subwfb	(__div_to_l_@f1+3)^0,f,c
  4497  003008  8009               	bsf	__div_to_l_@quot^0,0,c
  4498  00300A                     l2997:
  4499  00300A  90D8               	bcf	status,0,c
  4500  00300C  3601               	rlcf	__div_to_l_@f1^0,f,c
  4501  00300E  3602               	rlcf	(__div_to_l_@f1+1)^0,f,c
  4502  003010  3603               	rlcf	(__div_to_l_@f1+2)^0,f,c
  4503  003012  3604               	rlcf	(__div_to_l_@f1+3)^0,f,c
  4504  003014  2E0D               	decfsz	__div_to_l_@cntr^0,f,c
  4505  003016  EFE8  F017         	goto	l2989
  4506  00301A  BE0E               	btfsc	__div_to_l_@exp1^0,7,c
  4507  00301C  EF14  F018         	goto	u3320
  4508  003020  EF12  F018         	goto	u3321
  4509  003024                     u3321:
  4510  003024  EF2A  F018         	goto	l3013
  4511  003028                     u3320:
  4512  003028  500E               	movf	__div_to_l_@exp1^0,w,c
  4513  00302A  0A80               	xorlw	128
  4514  00302C  0F9F               	addlw	159
  4515  00302E  B0D8               	btfsc	status,0,c
  4516  003030  EF1C  F018         	goto	u3331
  4517  003034  EF1E  F018         	goto	u3330
  4518  003038                     u3331:
  4519  003038  EF20  F018         	goto	l3009
  4520  00303C                     u3330:
  4521  00303C  EFB0  F017         	goto	l2965
  4522  003040                     l3009:
  4523  003040  90D8               	bcf	status,0,c
  4524  003042  320C               	rrcf	(__div_to_l_@quot+3)^0,f,c
  4525  003044  320B               	rrcf	(__div_to_l_@quot+2)^0,f,c
  4526  003046  320A               	rrcf	(__div_to_l_@quot+1)^0,f,c
  4527  003048  3209               	rrcf	__div_to_l_@quot^0,f,c
  4528  00304A  3E0E               	incfsz	__div_to_l_@exp1^0,f,c
  4529  00304C  EF20  F018         	goto	l3009
  4530  003050  EF42  F018         	goto	l498
  4531  003054                     l3013:
  4532  003054  0E1F               	movlw	31
  4533  003056  640E               	cpfsgt	__div_to_l_@exp1^0,c
  4534  003058  EF30  F018         	goto	u3341
  4535  00305C  EF32  F018         	goto	u3340
  4536  003060                     u3341:
  4537  003060  EF3A  F018         	goto	l3021
  4538  003064                     u3340:
  4539  003064  EFB0  F017         	goto	l2965
  4540  003068                     l3019:
  4541  003068  90D8               	bcf	status,0,c
  4542  00306A  3609               	rlcf	__div_to_l_@quot^0,f,c
  4543  00306C  360A               	rlcf	(__div_to_l_@quot+1)^0,f,c
  4544  00306E  360B               	rlcf	(__div_to_l_@quot+2)^0,f,c
  4545  003070  360C               	rlcf	(__div_to_l_@quot+3)^0,f,c
  4546  003072  060E               	decf	__div_to_l_@exp1^0,f,c
  4547  003074                     l3021:
  4548  003074  500E               	movf	__div_to_l_@exp1^0,w,c
  4549  003076  A4D8               	btfss	status,2,c
  4550  003078  EF40  F018         	goto	u3351
  4551  00307C  EF42  F018         	goto	u3350
  4552  003080                     u3351:
  4553  003080  EF34  F018         	goto	l3019
  4554  003084                     u3350:
  4555  003084                     l498:
  4556  003084  C009  F001         	movff	__div_to_l_@quot,?__div_to_l_
  4557  003088  C00A  F002         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  4558  00308C  C00B  F003         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  4559  003090  C00C  F004         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  4560  003094                     l489:
  4561  003094  0012               	return		;funcret
  4562  003096                     __end_of__div_to_l_:
  4563                           	callstack 0
  4564                           
  4565 ;; *************** function ___xxtofl *****************
  4566 ;; Defined at:
  4567 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\xxtofl.c"
  4568 ;; Parameters:    Size  Location     Type
  4569 ;;  sign            1    wreg     unsigned char 
  4570 ;;  val             4    0[COMRAM] long 
  4571 ;; Auto vars:     Size  Location     Type
  4572 ;;  sign            1    8[COMRAM] unsigned char 
  4573 ;;  arg             4   10[COMRAM] unsigned long 
  4574 ;;  exp             1    9[COMRAM] unsigned char 
  4575 ;; Return value:  Size  Location     Type
  4576 ;;                  4    0[COMRAM] unsigned char 
  4577 ;; Registers used:
  4578 ;;		wreg, status,2, status,0
  4579 ;; Tracked objects:
  4580 ;;		On entry : 0/0
  4581 ;;		On exit  : 0/0
  4582 ;;		Unchanged: 0/0
  4583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4584 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4585 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4586 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4587 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4588 ;;Total ram usage:       14 bytes
  4589 ;; Hardware stack levels used: 1
  4590 ;; Hardware stack levels required when called: 1
  4591 ;; This function calls:
  4592 ;;		Nothing
  4593 ;; This function is called by:
  4594 ;;		_sprintf
  4595 ;; This function uses a non-reentrant model
  4596 ;;
  4597                           
  4598                           	psect	text12
  4599  002920                     __ptext12:
  4600                           	callstack 0
  4601  002920                     ___xxtofl:
  4602                           	callstack 28
  4603                           
  4604                           ;incstack = 0
  4605                           ;___xxtofl@sign stored from wreg
  4606  002920  6E09               	movwf	___xxtofl@sign^0,c
  4607  002922  5009               	movf	___xxtofl@sign^0,w,c
  4608  002924  B4D8               	btfsc	status,2,c
  4609  002926  EF97  F014         	goto	u3581
  4610  00292A  EF99  F014         	goto	u3580
  4611  00292E                     u3581:
  4612  00292E  EFBB  F014         	goto	l912
  4613  002932                     u3580:
  4614  002932  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  4615  002934  EFA0  F014         	goto	u3590
  4616  002938  EF9E  F014         	goto	u3591
  4617  00293C                     u3591:
  4618  00293C  EFBB  F014         	goto	l912
  4619  002940                     u3590:
  4620  002940  C001  F005         	movff	___xxtofl@val,??___xxtofl
  4621  002944  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  4622  002948  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  4623  00294C  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  4624  002950  1E05               	comf	??___xxtofl^0,f,c
  4625  002952  1E06               	comf	(??___xxtofl+1)^0,f,c
  4626  002954  1E07               	comf	(??___xxtofl+2)^0,f,c
  4627  002956  1E08               	comf	(??___xxtofl+3)^0,f,c
  4628  002958  2A05               	incf	??___xxtofl^0,f,c
  4629  00295A  0E00               	movlw	0
  4630  00295C  2206               	addwfc	(??___xxtofl+1)^0,f,c
  4631  00295E  2207               	addwfc	(??___xxtofl+2)^0,f,c
  4632  002960  2208               	addwfc	(??___xxtofl+3)^0,f,c
  4633  002962  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  4634  002966  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  4635  00296A  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  4636  00296E  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  4637  002972  EFC3  F014         	goto	l3169
  4638  002976                     l912:
  4639  002976  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  4640  00297A  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  4641  00297E  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  4642  002982  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  4643  002986                     l3169:
  4644  002986  5001               	movf	___xxtofl@val^0,w,c
  4645  002988  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  4646  00298A  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  4647  00298C  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  4648  00298E  A4D8               	btfss	status,2,c
  4649  002990  EFCC  F014         	goto	u3601
  4650  002994  EFCE  F014         	goto	u3600
  4651  002998                     u3601:
  4652  002998  EFD8  F014         	goto	l3175
  4653  00299C                     u3600:
  4654  00299C  0E00               	movlw	0
  4655  00299E  6E01               	movwf	?___xxtofl^0,c
  4656  0029A0  0E00               	movlw	0
  4657  0029A2  6E02               	movwf	(?___xxtofl+1)^0,c
  4658  0029A4  0E00               	movlw	0
  4659  0029A6  6E03               	movwf	(?___xxtofl+2)^0,c
  4660  0029A8  0E00               	movlw	0
  4661  0029AA  6E04               	movwf	(?___xxtofl+3)^0,c
  4662  0029AC  EF69  F015         	goto	l915
  4663  0029B0                     l3175:
  4664  0029B0  0E96               	movlw	150
  4665  0029B2  6E0A               	movwf	___xxtofl@exp^0,c
  4666  0029B4  EFE2  F014         	goto	l3179
  4667  0029B8                     l3177:
  4668  0029B8  2A0A               	incf	___xxtofl@exp^0,f,c
  4669  0029BA  90D8               	bcf	status,0,c
  4670  0029BC  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  4671  0029BE  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  4672  0029C0  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  4673  0029C2  320B               	rrcf	___xxtofl@arg^0,f,c
  4674  0029C4                     l3179:
  4675  0029C4  0E00               	movlw	0
  4676  0029C6  140B               	andwf	___xxtofl@arg^0,w,c
  4677  0029C8  6E05               	movwf	??___xxtofl^0,c
  4678  0029CA  0E00               	movlw	0
  4679  0029CC  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  4680  0029CE  6E06               	movwf	(??___xxtofl+1)^0,c
  4681  0029D0  0E00               	movlw	0
  4682  0029D2  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  4683  0029D4  6E07               	movwf	(??___xxtofl+2)^0,c
  4684  0029D6  0EFE               	movlw	254
  4685  0029D8  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  4686  0029DA  6E08               	movwf	(??___xxtofl+3)^0,c
  4687  0029DC  5005               	movf	??___xxtofl^0,w,c
  4688  0029DE  1006               	iorwf	(??___xxtofl+1)^0,w,c
  4689  0029E0  1007               	iorwf	(??___xxtofl+2)^0,w,c
  4690  0029E2  1008               	iorwf	(??___xxtofl+3)^0,w,c
  4691  0029E4  A4D8               	btfss	status,2,c
  4692  0029E6  EFF7  F014         	goto	u3611
  4693  0029EA  EFF9  F014         	goto	u3610
  4694  0029EE                     u3611:
  4695  0029EE  EFDC  F014         	goto	l3177
  4696  0029F2                     u3610:
  4697  0029F2  EF07  F015         	goto	l919
  4698  0029F6                     l3181:
  4699  0029F6  2A0A               	incf	___xxtofl@exp^0,f,c
  4700  0029F8  0E01               	movlw	1
  4701  0029FA  260B               	addwf	___xxtofl@arg^0,f,c
  4702  0029FC  0E00               	movlw	0
  4703  0029FE  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  4704  002A00  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  4705  002A02  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  4706  002A04  90D8               	bcf	status,0,c
  4707  002A06  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  4708  002A08  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  4709  002A0A  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  4710  002A0C  320B               	rrcf	___xxtofl@arg^0,f,c
  4711  002A0E                     l919:
  4712  002A0E  0E00               	movlw	0
  4713  002A10  140B               	andwf	___xxtofl@arg^0,w,c
  4714  002A12  6E05               	movwf	??___xxtofl^0,c
  4715  002A14  0E00               	movlw	0
  4716  002A16  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  4717  002A18  6E06               	movwf	(??___xxtofl+1)^0,c
  4718  002A1A  0E00               	movlw	0
  4719  002A1C  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  4720  002A1E  6E07               	movwf	(??___xxtofl+2)^0,c
  4721  002A20  0EFF               	movlw	255
  4722  002A22  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  4723  002A24  6E08               	movwf	(??___xxtofl+3)^0,c
  4724  002A26  5005               	movf	??___xxtofl^0,w,c
  4725  002A28  1006               	iorwf	(??___xxtofl+1)^0,w,c
  4726  002A2A  1007               	iorwf	(??___xxtofl+2)^0,w,c
  4727  002A2C  1008               	iorwf	(??___xxtofl+3)^0,w,c
  4728  002A2E  A4D8               	btfss	status,2,c
  4729  002A30  EF1C  F015         	goto	u3621
  4730  002A34  EF1E  F015         	goto	u3620
  4731  002A38                     u3621:
  4732  002A38  EFFB  F014         	goto	l3181
  4733  002A3C                     u3620:
  4734  002A3C  EF26  F015         	goto	l3189
  4735  002A40                     l3187:
  4736  002A40  060A               	decf	___xxtofl@exp^0,f,c
  4737  002A42  90D8               	bcf	status,0,c
  4738  002A44  360B               	rlcf	___xxtofl@arg^0,f,c
  4739  002A46  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  4740  002A48  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  4741  002A4A  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  4742  002A4C                     l3189:
  4743  002A4C  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  4744  002A4E  EF2B  F015         	goto	u3631
  4745  002A52  EF2D  F015         	goto	u3630
  4746  002A56                     u3631:
  4747  002A56  EF35  F015         	goto	l926
  4748  002A5A                     u3630:
  4749  002A5A  0E02               	movlw	2
  4750  002A5C  600A               	cpfslt	___xxtofl@exp^0,c
  4751  002A5E  EF33  F015         	goto	u3641
  4752  002A62  EF35  F015         	goto	u3640
  4753  002A66                     u3641:
  4754  002A66  EF20  F015         	goto	l3187
  4755  002A6A                     u3640:
  4756  002A6A                     l926:
  4757  002A6A  B00A               	btfsc	___xxtofl@exp^0,0,c
  4758  002A6C  EF3A  F015         	goto	u3651
  4759  002A70  EF3C  F015         	goto	u3650
  4760  002A74                     u3651:
  4761  002A74  EF3D  F015         	goto	l3195
  4762  002A78                     u3650:
  4763  002A78  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  4764  002A7A                     l3195:
  4765  002A7A  90D8               	bcf	status,0,c
  4766  002A7C  320A               	rrcf	___xxtofl@exp^0,f,c
  4767  002A7E  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  4768  002A82  6A06               	clrf	(??___xxtofl+1)^0,c
  4769  002A84  6A07               	clrf	(??___xxtofl+2)^0,c
  4770  002A86  6A08               	clrf	(??___xxtofl+3)^0,c
  4771  002A88  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  4772  002A8C  6A07               	clrf	(??___xxtofl+2)^0,c
  4773  002A8E  6A06               	clrf	(??___xxtofl+1)^0,c
  4774  002A90  6A05               	clrf	??___xxtofl^0,c
  4775  002A92  5005               	movf	??___xxtofl^0,w,c
  4776  002A94  120B               	iorwf	___xxtofl@arg^0,f,c
  4777  002A96  5006               	movf	(??___xxtofl+1)^0,w,c
  4778  002A98  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  4779  002A9A  5007               	movf	(??___xxtofl+2)^0,w,c
  4780  002A9C  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  4781  002A9E  5008               	movf	(??___xxtofl+3)^0,w,c
  4782  002AA0  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  4783  002AA2  5009               	movf	___xxtofl@sign^0,w,c
  4784  002AA4  B4D8               	btfsc	status,2,c
  4785  002AA6  EF57  F015         	goto	u3661
  4786  002AAA  EF59  F015         	goto	u3660
  4787  002AAE                     u3661:
  4788  002AAE  EF61  F015         	goto	l3205
  4789  002AB2                     u3660:
  4790  002AB2  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  4791  002AB4  EF60  F015         	goto	u3670
  4792  002AB8  EF5E  F015         	goto	u3671
  4793  002ABC                     u3671:
  4794  002ABC  EF61  F015         	goto	l3205
  4795  002AC0                     u3670:
  4796  002AC0  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  4797  002AC2                     l3205:
  4798  002AC2  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  4799  002AC6  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  4800  002ACA  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  4801  002ACE  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  4802  002AD2                     l915:
  4803  002AD2  0012               	return		;funcret
  4804  002AD4                     __end_of___xxtofl:
  4805                           	callstack 0
  4806                           
  4807 ;; *************** function ___wmul *****************
  4808 ;; Defined at:
  4809 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\Umul16.c"
  4810 ;; Parameters:    Size  Location     Type
  4811 ;;  multiplier      2    0[COMRAM] unsigned int 
  4812 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4813 ;; Auto vars:     Size  Location     Type
  4814 ;;  product         2    4[COMRAM] unsigned int 
  4815 ;; Return value:  Size  Location     Type
  4816 ;;                  2    0[COMRAM] unsigned int 
  4817 ;; Registers used:
  4818 ;;		wreg, status,2, status,0, prodl, prodh
  4819 ;; Tracked objects:
  4820 ;;		On entry : 0/0
  4821 ;;		On exit  : 0/0
  4822 ;;		Unchanged: 0/0
  4823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4824 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4825 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4827 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4828 ;;Total ram usage:        6 bytes
  4829 ;; Hardware stack levels used: 1
  4830 ;; Hardware stack levels required when called: 1
  4831 ;; This function calls:
  4832 ;;		Nothing
  4833 ;; This function is called by:
  4834 ;;		_sprintf
  4835 ;; This function uses a non-reentrant model
  4836 ;;
  4837                           
  4838                           	psect	text13
  4839  003982                     __ptext13:
  4840                           	callstack 0
  4841  003982                     ___wmul:
  4842                           	callstack 28
  4843  003982  5001               	movf	___wmul@multiplier^0,w,c
  4844  003984  0203               	mulwf	___wmul@multiplicand^0,c
  4845  003986  CFF3 F005          	movff	prodl,___wmul@product
  4846  00398A  CFF4 F006          	movff	prodh,___wmul@product+1
  4847  00398E  5001               	movf	___wmul@multiplier^0,w,c
  4848  003990  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  4849  003992  50F3               	movf	243,w,c
  4850  003994  2606               	addwf	(___wmul@product+1)^0,f,c
  4851  003996  5002               	movf	(___wmul@multiplier+1)^0,w,c
  4852  003998  0203               	mulwf	___wmul@multiplicand^0,c
  4853  00399A  50F3               	movf	243,w,c
  4854  00399C  2606               	addwf	(___wmul@product+1)^0,f,c
  4855  00399E  C005  F001         	movff	___wmul@product,?___wmul
  4856  0039A2  C006  F002         	movff	___wmul@product+1,?___wmul+1
  4857  0039A6  0012               	return		;funcret
  4858  0039A8                     __end_of___wmul:
  4859                           	callstack 0
  4860                           
  4861 ;; *************** function ___llmod *****************
  4862 ;; Defined at:
  4863 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\llmod.c"
  4864 ;; Parameters:    Size  Location     Type
  4865 ;;  dividend        4    0[COMRAM] unsigned long 
  4866 ;;  divisor         4    4[COMRAM] unsigned long 
  4867 ;; Auto vars:     Size  Location     Type
  4868 ;;  counter         1    8[COMRAM] unsigned char 
  4869 ;; Return value:  Size  Location     Type
  4870 ;;                  4    0[COMRAM] unsigned long 
  4871 ;; Registers used:
  4872 ;;		wreg, status,2, status,0
  4873 ;; Tracked objects:
  4874 ;;		On entry : 0/0
  4875 ;;		On exit  : 0/0
  4876 ;;		Unchanged: 0/0
  4877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4878 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4879 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4881 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4882 ;;Total ram usage:        9 bytes
  4883 ;; Hardware stack levels used: 1
  4884 ;; Hardware stack levels required when called: 1
  4885 ;; This function calls:
  4886 ;;		Nothing
  4887 ;; This function is called by:
  4888 ;;		_sprintf
  4889 ;; This function uses a non-reentrant model
  4890 ;;
  4891                           
  4892                           	psect	text14
  4893  003684                     __ptext14:
  4894                           	callstack 0
  4895  003684                     ___llmod:
  4896                           	callstack 28
  4897  003684  5005               	movf	___llmod@divisor^0,w,c
  4898  003686  1006               	iorwf	(___llmod@divisor+1)^0,w,c
  4899  003688  1007               	iorwf	(___llmod@divisor+2)^0,w,c
  4900  00368A  1008               	iorwf	(___llmod@divisor+3)^0,w,c
  4901  00368C  B4D8               	btfsc	status,2,c
  4902  00368E  EF4B  F01B         	goto	u3551
  4903  003692  EF4D  F01B         	goto	u3550
  4904  003696                     u3551:
  4905  003696  EF7D  F01B         	goto	l677
  4906  00369A                     u3550:
  4907  00369A  0E01               	movlw	1
  4908  00369C  6E09               	movwf	___llmod@counter^0,c
  4909  00369E  EF57  F01B         	goto	l3153
  4910  0036A2                     l3151:
  4911  0036A2  90D8               	bcf	status,0,c
  4912  0036A4  3605               	rlcf	___llmod@divisor^0,f,c
  4913  0036A6  3606               	rlcf	(___llmod@divisor+1)^0,f,c
  4914  0036A8  3607               	rlcf	(___llmod@divisor+2)^0,f,c
  4915  0036AA  3608               	rlcf	(___llmod@divisor+3)^0,f,c
  4916  0036AC  2A09               	incf	___llmod@counter^0,f,c
  4917  0036AE                     l3153:
  4918  0036AE  AE08               	btfss	(___llmod@divisor+3)^0,7,c
  4919  0036B0  EF5C  F01B         	goto	u3561
  4920  0036B4  EF5E  F01B         	goto	u3560
  4921  0036B8                     u3561:
  4922  0036B8  EF51  F01B         	goto	l3151
  4923  0036BC                     u3560:
  4924  0036BC                     l3155:
  4925  0036BC  5005               	movf	___llmod@divisor^0,w,c
  4926  0036BE  5C01               	subwf	___llmod@dividend^0,w,c
  4927  0036C0  5006               	movf	(___llmod@divisor+1)^0,w,c
  4928  0036C2  5802               	subwfb	(___llmod@dividend+1)^0,w,c
  4929  0036C4  5007               	movf	(___llmod@divisor+2)^0,w,c
  4930  0036C6  5803               	subwfb	(___llmod@dividend+2)^0,w,c
  4931  0036C8  5008               	movf	(___llmod@divisor+3)^0,w,c
  4932  0036CA  5804               	subwfb	(___llmod@dividend+3)^0,w,c
  4933  0036CC  A0D8               	btfss	status,0,c
  4934  0036CE  EF6B  F01B         	goto	u3571
  4935  0036D2  EF6D  F01B         	goto	u3570
  4936  0036D6                     u3571:
  4937  0036D6  EF75  F01B         	goto	l3159
  4938  0036DA                     u3570:
  4939  0036DA  5005               	movf	___llmod@divisor^0,w,c
  4940  0036DC  5E01               	subwf	___llmod@dividend^0,f,c
  4941  0036DE  5006               	movf	(___llmod@divisor+1)^0,w,c
  4942  0036E0  5A02               	subwfb	(___llmod@dividend+1)^0,f,c
  4943  0036E2  5007               	movf	(___llmod@divisor+2)^0,w,c
  4944  0036E4  5A03               	subwfb	(___llmod@dividend+2)^0,f,c
  4945  0036E6  5008               	movf	(___llmod@divisor+3)^0,w,c
  4946  0036E8  5A04               	subwfb	(___llmod@dividend+3)^0,f,c
  4947  0036EA                     l3159:
  4948  0036EA  90D8               	bcf	status,0,c
  4949  0036EC  3208               	rrcf	(___llmod@divisor+3)^0,f,c
  4950  0036EE  3207               	rrcf	(___llmod@divisor+2)^0,f,c
  4951  0036F0  3206               	rrcf	(___llmod@divisor+1)^0,f,c
  4952  0036F2  3205               	rrcf	___llmod@divisor^0,f,c
  4953  0036F4  2E09               	decfsz	___llmod@counter^0,f,c
  4954  0036F6  EF5E  F01B         	goto	l3155
  4955  0036FA                     l677:
  4956  0036FA  C001  F001         	movff	___llmod@dividend,?___llmod
  4957  0036FE  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
  4958  003702  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
  4959  003706  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
  4960  00370A  0012               	return		;funcret
  4961  00370C                     __end_of___llmod:
  4962                           	callstack 0
  4963                           
  4964 ;; *************** function ___lldiv *****************
  4965 ;; Defined at:
  4966 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\__lldiv.c"
  4967 ;; Parameters:    Size  Location     Type
  4968 ;;  dividend        4    0[COMRAM] unsigned long 
  4969 ;;  divisor         4    4[COMRAM] unsigned long 
  4970 ;; Auto vars:     Size  Location     Type
  4971 ;;  quotient        4    8[COMRAM] unsigned long 
  4972 ;;  counter         1   12[COMRAM] unsigned char 
  4973 ;; Return value:  Size  Location     Type
  4974 ;;                  4    0[COMRAM] unsigned long 
  4975 ;; Registers used:
  4976 ;;		wreg, status,2, status,0
  4977 ;; Tracked objects:
  4978 ;;		On entry : 0/0
  4979 ;;		On exit  : 0/0
  4980 ;;		Unchanged: 0/0
  4981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4982 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4983 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4985 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4986 ;;Total ram usage:       13 bytes
  4987 ;; Hardware stack levels used: 1
  4988 ;; Hardware stack levels required when called: 1
  4989 ;; This function calls:
  4990 ;;		Nothing
  4991 ;; This function is called by:
  4992 ;;		_sprintf
  4993 ;; This function uses a non-reentrant model
  4994 ;;
  4995                           
  4996                           	psect	text15
  4997  0035E0                     __ptext15:
  4998                           	callstack 0
  4999  0035E0                     ___lldiv:
  5000                           	callstack 28
  5001  0035E0  0E00               	movlw	0
  5002  0035E2  6E09               	movwf	___lldiv@quotient^0,c
  5003  0035E4  0E00               	movlw	0
  5004  0035E6  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  5005  0035E8  0E00               	movlw	0
  5006  0035EA  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  5007  0035EC  0E00               	movlw	0
  5008  0035EE  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  5009  0035F0  5005               	movf	___lldiv@divisor^0,w,c
  5010  0035F2  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  5011  0035F4  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  5012  0035F6  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  5013  0035F8  B4D8               	btfsc	status,2,c
  5014  0035FA  EF01  F01B         	goto	u3361
  5015  0035FE  EF03  F01B         	goto	u3360
  5016  003602                     u3361:
  5017  003602  EF39  F01B         	goto	l262
  5018  003606                     u3360:
  5019  003606  0E01               	movlw	1
  5020  003608  6E0D               	movwf	___lldiv@counter^0,c
  5021  00360A  EF0D  F01B         	goto	l3037
  5022  00360E                     l3035:
  5023  00360E  90D8               	bcf	status,0,c
  5024  003610  3605               	rlcf	___lldiv@divisor^0,f,c
  5025  003612  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  5026  003614  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  5027  003616  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  5028  003618  2A0D               	incf	___lldiv@counter^0,f,c
  5029  00361A                     l3037:
  5030  00361A  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  5031  00361C  EF12  F01B         	goto	u3371
  5032  003620  EF14  F01B         	goto	u3370
  5033  003624                     u3371:
  5034  003624  EF07  F01B         	goto	l3035
  5035  003628                     u3370:
  5036  003628                     l3039:
  5037  003628  90D8               	bcf	status,0,c
  5038  00362A  3609               	rlcf	___lldiv@quotient^0,f,c
  5039  00362C  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  5040  00362E  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  5041  003630  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  5042  003632  5005               	movf	___lldiv@divisor^0,w,c
  5043  003634  5C01               	subwf	___lldiv@dividend^0,w,c
  5044  003636  5006               	movf	(___lldiv@divisor+1)^0,w,c
  5045  003638  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  5046  00363A  5007               	movf	(___lldiv@divisor+2)^0,w,c
  5047  00363C  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  5048  00363E  5008               	movf	(___lldiv@divisor+3)^0,w,c
  5049  003640  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  5050  003642  A0D8               	btfss	status,0,c
  5051  003644  EF26  F01B         	goto	u3381
  5052  003648  EF28  F01B         	goto	u3380
  5053  00364C                     u3381:
  5054  00364C  EF31  F01B         	goto	l3047
  5055  003650                     u3380:
  5056  003650  5005               	movf	___lldiv@divisor^0,w,c
  5057  003652  5E01               	subwf	___lldiv@dividend^0,f,c
  5058  003654  5006               	movf	(___lldiv@divisor+1)^0,w,c
  5059  003656  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  5060  003658  5007               	movf	(___lldiv@divisor+2)^0,w,c
  5061  00365A  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  5062  00365C  5008               	movf	(___lldiv@divisor+3)^0,w,c
  5063  00365E  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  5064  003660  8009               	bsf	___lldiv@quotient^0,0,c
  5065  003662                     l3047:
  5066  003662  90D8               	bcf	status,0,c
  5067  003664  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  5068  003666  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  5069  003668  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  5070  00366A  3205               	rrcf	___lldiv@divisor^0,f,c
  5071  00366C  2E0D               	decfsz	___lldiv@counter^0,f,c
  5072  00366E  EF14  F01B         	goto	l3039
  5073  003672                     l262:
  5074  003672  C009  F001         	movff	___lldiv@quotient,?___lldiv
  5075  003676  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  5076  00367A  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  5077  00367E  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  5078  003682  0012               	return		;funcret
  5079  003684                     __end_of___lldiv:
  5080                           	callstack 0
  5081                           
  5082 ;; *************** function ___fltol *****************
  5083 ;; Defined at:
  5084 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\fltol.c"
  5085 ;; Parameters:    Size  Location     Type
  5086 ;;  f1              4   48[COMRAM] unsigned long 
  5087 ;; Auto vars:     Size  Location     Type
  5088 ;;  exp1            1   57[COMRAM] unsigned char 
  5089 ;;  sign1           1   56[COMRAM] unsigned char 
  5090 ;; Return value:  Size  Location     Type
  5091 ;;                  4   48[COMRAM] long 
  5092 ;; Registers used:
  5093 ;;		wreg, status,2, status,0
  5094 ;; Tracked objects:
  5095 ;;		On entry : 0/0
  5096 ;;		On exit  : 0/0
  5097 ;;		Unchanged: 0/0
  5098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5099 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5100 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5101 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5102 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5103 ;;Total ram usage:       10 bytes
  5104 ;; Hardware stack levels used: 1
  5105 ;; Hardware stack levels required when called: 1
  5106 ;; This function calls:
  5107 ;;		Nothing
  5108 ;; This function is called by:
  5109 ;;		_sprintf
  5110 ;; This function uses a non-reentrant model
  5111 ;;
  5112                           
  5113                           	psect	text16
  5114  0031B8                     __ptext16:
  5115                           	callstack 0
  5116  0031B8                     ___fltol:
  5117                           	callstack 28
  5118  0031B8  3433               	rlcf	(___fltol@f1+2)^0,w,c
  5119  0031BA  3434               	rlcf	(___fltol@f1+3)^0,w,c
  5120  0031BC  6E3A               	movwf	___fltol@exp1^0,c
  5121  0031BE  503A               	movf	___fltol@exp1^0,w,c
  5122  0031C0  A4D8               	btfss	status,2,c
  5123  0031C2  EFE5  F018         	goto	u3481
  5124  0031C6  EFE7  F018         	goto	u3480
  5125  0031CA                     u3481:
  5126  0031CA  EFF1  F018         	goto	l3109
  5127  0031CE                     u3480:
  5128  0031CE                     l3105:
  5129  0031CE  0E00               	movlw	0
  5130  0031D0  6E31               	movwf	?___fltol^0,c
  5131  0031D2  0E00               	movlw	0
  5132  0031D4  6E32               	movwf	(?___fltol+1)^0,c
  5133  0031D6  0E00               	movlw	0
  5134  0031D8  6E33               	movwf	(?___fltol+2)^0,c
  5135  0031DA  0E00               	movlw	0
  5136  0031DC  6E34               	movwf	(?___fltol+3)^0,c
  5137  0031DE  EF5E  F019         	goto	l541
  5138  0031E2                     l3109:
  5139  0031E2  C031  F035         	movff	___fltol@f1,??___fltol
  5140  0031E6  C032  F036         	movff	___fltol@f1+1,??___fltol+1
  5141  0031EA  C033  F037         	movff	___fltol@f1+2,??___fltol+2
  5142  0031EE  C034  F038         	movff	___fltol@f1+3,??___fltol+3
  5143  0031F2  0E20               	movlw	32
  5144  0031F4  EF01  F019         	goto	u3490
  5145  0031F8                     u3495:
  5146  0031F8  90D8               	bcf	status,0,c
  5147  0031FA  3238               	rrcf	(??___fltol+3)^0,f,c
  5148  0031FC  3237               	rrcf	(??___fltol+2)^0,f,c
  5149  0031FE  3236               	rrcf	(??___fltol+1)^0,f,c
  5150  003200  3235               	rrcf	??___fltol^0,f,c
  5151  003202                     u3490:
  5152  003202  2EE8               	decfsz	wreg,f,c
  5153  003204  EFFC  F018         	goto	u3495
  5154  003208  5035               	movf	??___fltol^0,w,c
  5155  00320A  6E39               	movwf	___fltol@sign1^0,c
  5156  00320C  8E33               	bsf	(___fltol@f1+2)^0,7,c
  5157  00320E  0EFF               	movlw	255
  5158  003210  1631               	andwf	___fltol@f1^0,f,c
  5159  003212  0EFF               	movlw	255
  5160  003214  1632               	andwf	(___fltol@f1+1)^0,f,c
  5161  003216  0EFF               	movlw	255
  5162  003218  1633               	andwf	(___fltol@f1+2)^0,f,c
  5163  00321A  0E00               	movlw	0
  5164  00321C  1634               	andwf	(___fltol@f1+3)^0,f,c
  5165  00321E  0E96               	movlw	150
  5166  003220  5E3A               	subwf	___fltol@exp1^0,f,c
  5167  003222  BE3A               	btfsc	___fltol@exp1^0,7,c
  5168  003224  EF18  F019         	goto	u3500
  5169  003228  EF16  F019         	goto	u3501
  5170  00322C                     u3501:
  5171  00322C  EF2E  F019         	goto	l3129
  5172  003230                     u3500:
  5173  003230  503A               	movf	___fltol@exp1^0,w,c
  5174  003232  0A80               	xorlw	128
  5175  003234  0F97               	addlw	151
  5176  003236  B0D8               	btfsc	status,0,c
  5177  003238  EF20  F019         	goto	u3511
  5178  00323C  EF22  F019         	goto	u3510
  5179  003240                     u3511:
  5180  003240  EF24  F019         	goto	l3125
  5181  003244                     u3510:
  5182  003244  EFE7  F018         	goto	l3105
  5183  003248                     l3125:
  5184  003248  90D8               	bcf	status,0,c
  5185  00324A  3234               	rrcf	(___fltol@f1+3)^0,f,c
  5186  00324C  3233               	rrcf	(___fltol@f1+2)^0,f,c
  5187  00324E  3232               	rrcf	(___fltol@f1+1)^0,f,c
  5188  003250  3231               	rrcf	___fltol@f1^0,f,c
  5189  003252  3E3A               	incfsz	___fltol@exp1^0,f,c
  5190  003254  EF24  F019         	goto	l3125
  5191  003258  EF46  F019         	goto	l3139
  5192  00325C                     l3129:
  5193  00325C  0E1F               	movlw	31
  5194  00325E  643A               	cpfsgt	___fltol@exp1^0,c
  5195  003260  EF34  F019         	goto	u3521
  5196  003264  EF36  F019         	goto	u3520
  5197  003268                     u3521:
  5198  003268  EF3E  F019         	goto	l3137
  5199  00326C                     u3520:
  5200  00326C  EFE7  F018         	goto	l3105
  5201  003270                     l3135:
  5202  003270  90D8               	bcf	status,0,c
  5203  003272  3631               	rlcf	___fltol@f1^0,f,c
  5204  003274  3632               	rlcf	(___fltol@f1+1)^0,f,c
  5205  003276  3633               	rlcf	(___fltol@f1+2)^0,f,c
  5206  003278  3634               	rlcf	(___fltol@f1+3)^0,f,c
  5207  00327A  063A               	decf	___fltol@exp1^0,f,c
  5208  00327C                     l3137:
  5209  00327C  503A               	movf	___fltol@exp1^0,w,c
  5210  00327E  A4D8               	btfss	status,2,c
  5211  003280  EF44  F019         	goto	u3531
  5212  003284  EF46  F019         	goto	u3530
  5213  003288                     u3531:
  5214  003288  EF38  F019         	goto	l3135
  5215  00328C                     u3530:
  5216  00328C                     l3139:
  5217  00328C  5039               	movf	___fltol@sign1^0,w,c
  5218  00328E  B4D8               	btfsc	status,2,c
  5219  003290  EF4C  F019         	goto	u3541
  5220  003294  EF4E  F019         	goto	u3540
  5221  003298                     u3541:
  5222  003298  EF56  F019         	goto	l3143
  5223  00329C                     u3540:
  5224  00329C  1E34               	comf	(___fltol@f1+3)^0,f,c
  5225  00329E  1E33               	comf	(___fltol@f1+2)^0,f,c
  5226  0032A0  1E32               	comf	(___fltol@f1+1)^0,f,c
  5227  0032A2  6C31               	negf	___fltol@f1^0,c
  5228  0032A4  0E00               	movlw	0
  5229  0032A6  2232               	addwfc	(___fltol@f1+1)^0,f,c
  5230  0032A8  2233               	addwfc	(___fltol@f1+2)^0,f,c
  5231  0032AA  2234               	addwfc	(___fltol@f1+3)^0,f,c
  5232  0032AC                     l3143:
  5233  0032AC  C031  F031         	movff	___fltol@f1,?___fltol
  5234  0032B0  C032  F032         	movff	___fltol@f1+1,?___fltol+1
  5235  0032B4  C033  F033         	movff	___fltol@f1+2,?___fltol+2
  5236  0032B8  C034  F034         	movff	___fltol@f1+3,?___fltol+3
  5237  0032BC                     l541:
  5238  0032BC  0012               	return		;funcret
  5239  0032BE                     __end_of___fltol:
  5240                           	callstack 0
  5241                           
  5242 ;; *************** function ___flsub *****************
  5243 ;; Defined at:
  5244 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\sprcadd.c"
  5245 ;; Parameters:    Size  Location     Type
  5246 ;;  b               4   68[COMRAM] long 
  5247 ;;  a               4   72[COMRAM] long 
  5248 ;; Auto vars:     Size  Location     Type
  5249 ;;		None
  5250 ;; Return value:  Size  Location     Type
  5251 ;;                  4   68[COMRAM] long 
  5252 ;; Registers used:
  5253 ;;		wreg, status,2, status,0, cstack
  5254 ;; Tracked objects:
  5255 ;;		On entry : 0/0
  5256 ;;		On exit  : 0/0
  5257 ;;		Unchanged: 0/0
  5258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5259 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5262 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5263 ;;Total ram usage:        8 bytes
  5264 ;; Hardware stack levels used: 1
  5265 ;; Hardware stack levels required when called: 2
  5266 ;; This function calls:
  5267 ;;		___fladd
  5268 ;; This function is called by:
  5269 ;;		_main
  5270 ;;		_sprintf
  5271 ;; This function uses a non-reentrant model
  5272 ;;
  5273                           
  5274                           	psect	text17
  5275  0038AA                     __ptext17:
  5276                           	callstack 0
  5277  0038AA                     ___flsub:
  5278                           	callstack 27
  5279  0038AA  0E00               	movlw	0
  5280  0038AC  1A49               	xorwf	___flsub@a^0,f,c
  5281  0038AE  0E00               	movlw	0
  5282  0038B0  1A4A               	xorwf	(___flsub@a+1)^0,f,c
  5283  0038B2  0E00               	movlw	0
  5284  0038B4  1A4B               	xorwf	(___flsub@a+2)^0,f,c
  5285  0038B6  0E80               	movlw	128
  5286  0038B8  1A4C               	xorwf	(___flsub@a+3)^0,f,c
  5287  0038BA  C045  F035         	movff	___flsub@b,___fladd@b
  5288  0038BE  C046  F036         	movff	___flsub@b+1,___fladd@b+1
  5289  0038C2  C047  F037         	movff	___flsub@b+2,___fladd@b+2
  5290  0038C6  C048  F038         	movff	___flsub@b+3,___fladd@b+3
  5291  0038CA  C049  F039         	movff	___flsub@a,___fladd@a
  5292  0038CE  C04A  F03A         	movff	___flsub@a+1,___fladd@a+1
  5293  0038D2  C04B  F03B         	movff	___flsub@a+2,___fladd@a+2
  5294  0038D6  C04C  F03C         	movff	___flsub@a+3,___fladd@a+3
  5295  0038DA  EC8E  F00C         	call	___fladd	;wreg free
  5296  0038DE  C035  F045         	movff	?___fladd,?___flsub
  5297  0038E2  C036  F046         	movff	?___fladd+1,?___flsub+1
  5298  0038E6  C037  F047         	movff	?___fladd+2,?___flsub+2
  5299  0038EA  C038  F048         	movff	?___fladd+3,?___flsub+3
  5300  0038EE  0012               	return		;funcret
  5301  0038F0                     __end_of___flsub:
  5302                           	callstack 0
  5303                           
  5304 ;; *************** function ___fladd *****************
  5305 ;; Defined at:
  5306 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\sprcadd.c"
  5307 ;; Parameters:    Size  Location     Type
  5308 ;;  b               4   52[COMRAM] long 
  5309 ;;  a               4   56[COMRAM] long 
  5310 ;; Auto vars:     Size  Location     Type
  5311 ;;  grs             1   67[COMRAM] unsigned char 
  5312 ;;  bexp            1   66[COMRAM] unsigned char 
  5313 ;;  aexp            1   65[COMRAM] unsigned char 
  5314 ;;  signs           1   64[COMRAM] unsigned char 
  5315 ;; Return value:  Size  Location     Type
  5316 ;;                  4   52[COMRAM] unsigned char 
  5317 ;; Registers used:
  5318 ;;		wreg, status,2, status,0
  5319 ;; Tracked objects:
  5320 ;;		On entry : 0/0
  5321 ;;		On exit  : 0/0
  5322 ;;		Unchanged: 0/0
  5323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5324 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5325 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5326 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5327 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5328 ;;Total ram usage:       16 bytes
  5329 ;; Hardware stack levels used: 1
  5330 ;; Hardware stack levels required when called: 1
  5331 ;; This function calls:
  5332 ;;		Nothing
  5333 ;; This function is called by:
  5334 ;;		_sprintf
  5335 ;;		___flsub
  5336 ;; This function uses a non-reentrant model
  5337 ;;
  5338                           
  5339                           	psect	text18
  5340  00191C                     __ptext18:
  5341                           	callstack 0
  5342  00191C                     ___fladd:
  5343                           	callstack 27
  5344  00191C  5038               	movf	(___fladd@b+3)^0,w,c
  5345  00191E  0B80               	andlw	128
  5346  001920  6E41               	movwf	___fladd@signs^0,c
  5347  001922  5038               	movf	(___fladd@b+3)^0,w,c
  5348  001924  2438               	addwf	(___fladd@b+3)^0,w,c
  5349  001926  6E43               	movwf	___fladd@bexp^0,c
  5350  001928  AE37               	btfss	(___fladd@b+2)^0,7,c
  5351  00192A  EF99  F00C         	goto	u2041
  5352  00192E  EF9B  F00C         	goto	u2040
  5353  001932                     u2041:
  5354  001932  EF9C  F00C         	goto	l2307
  5355  001936                     u2040:
  5356  001936  8043               	bsf	___fladd@bexp^0,0,c
  5357  001938                     l2307:
  5358  001938  5043               	movf	___fladd@bexp^0,w,c
  5359  00193A  B4D8               	btfsc	status,2,c
  5360  00193C  EFA2  F00C         	goto	u2051
  5361  001940  EFA4  F00C         	goto	u2050
  5362  001944                     u2051:
  5363  001944  EFB9  F00C         	goto	l2317
  5364  001948                     u2050:
  5365  001948  2843               	incf	___fladd@bexp^0,w,c
  5366  00194A  A4D8               	btfss	status,2,c
  5367  00194C  EFAA  F00C         	goto	u2061
  5368  001950  EFAC  F00C         	goto	u2060
  5369  001954                     u2061:
  5370  001954  EFB4  F00C         	goto	l2313
  5371  001958                     u2060:
  5372  001958  0E00               	movlw	0
  5373  00195A  6E35               	movwf	___fladd@b^0,c
  5374  00195C  0E00               	movlw	0
  5375  00195E  6E36               	movwf	(___fladd@b+1)^0,c
  5376  001960  0E00               	movlw	0
  5377  001962  6E37               	movwf	(___fladd@b+2)^0,c
  5378  001964  0E00               	movlw	0
  5379  001966  6E38               	movwf	(___fladd@b+3)^0,c
  5380  001968                     l2313:
  5381  001968  8E37               	bsf	(___fladd@b+2)^0,7,c
  5382  00196A  0E00               	movlw	0
  5383  00196C  6E38               	movwf	(___fladd@b+3)^0,c
  5384  00196E  EFC1  F00C         	goto	l2319
  5385  001972                     l2317:
  5386  001972  0E00               	movlw	0
  5387  001974  6E35               	movwf	___fladd@b^0,c
  5388  001976  0E00               	movlw	0
  5389  001978  6E36               	movwf	(___fladd@b+1)^0,c
  5390  00197A  0E00               	movlw	0
  5391  00197C  6E37               	movwf	(___fladd@b+2)^0,c
  5392  00197E  0E00               	movlw	0
  5393  001980  6E38               	movwf	(___fladd@b+3)^0,c
  5394  001982                     l2319:
  5395  001982  503C               	movf	(___fladd@a+3)^0,w,c
  5396  001984  0B80               	andlw	128
  5397  001986  6E42               	movwf	___fladd@aexp^0,c
  5398  001988  5041               	movf	___fladd@signs^0,w,c
  5399  00198A  1842               	xorwf	___fladd@aexp^0,w,c
  5400  00198C  B4D8               	btfsc	status,2,c
  5401  00198E  EFCB  F00C         	goto	u2071
  5402  001992  EFCD  F00C         	goto	u2070
  5403  001996                     u2071:
  5404  001996  EFCE  F00C         	goto	l2325
  5405  00199A                     u2070:
  5406  00199A  8C41               	bsf	___fladd@signs^0,6,c
  5407  00199C                     l2325:
  5408  00199C  503C               	movf	(___fladd@a+3)^0,w,c
  5409  00199E  243C               	addwf	(___fladd@a+3)^0,w,c
  5410  0019A0  6E42               	movwf	___fladd@aexp^0,c
  5411  0019A2  AE3B               	btfss	(___fladd@a+2)^0,7,c
  5412  0019A4  EFD6  F00C         	goto	u2081
  5413  0019A8  EFD8  F00C         	goto	u2080
  5414  0019AC                     u2081:
  5415  0019AC  EFD9  F00C         	goto	l2331
  5416  0019B0                     u2080:
  5417  0019B0  8042               	bsf	___fladd@aexp^0,0,c
  5418  0019B2                     l2331:
  5419  0019B2  5042               	movf	___fladd@aexp^0,w,c
  5420  0019B4  B4D8               	btfsc	status,2,c
  5421  0019B6  EFDF  F00C         	goto	u2091
  5422  0019BA  EFE1  F00C         	goto	u2090
  5423  0019BE                     u2091:
  5424  0019BE  EFF6  F00C         	goto	l2341
  5425  0019C2                     u2090:
  5426  0019C2  2842               	incf	___fladd@aexp^0,w,c
  5427  0019C4  A4D8               	btfss	status,2,c
  5428  0019C6  EFE7  F00C         	goto	u2101
  5429  0019CA  EFE9  F00C         	goto	u2100
  5430  0019CE                     u2101:
  5431  0019CE  EFF1  F00C         	goto	l2337
  5432  0019D2                     u2100:
  5433  0019D2  0E00               	movlw	0
  5434  0019D4  6E39               	movwf	___fladd@a^0,c
  5435  0019D6  0E00               	movlw	0
  5436  0019D8  6E3A               	movwf	(___fladd@a+1)^0,c
  5437  0019DA  0E00               	movlw	0
  5438  0019DC  6E3B               	movwf	(___fladd@a+2)^0,c
  5439  0019DE  0E00               	movlw	0
  5440  0019E0  6E3C               	movwf	(___fladd@a+3)^0,c
  5441  0019E2                     l2337:
  5442  0019E2  8E3B               	bsf	(___fladd@a+2)^0,7,c
  5443  0019E4  0E00               	movlw	0
  5444  0019E6  6E3C               	movwf	(___fladd@a+3)^0,c
  5445  0019E8  EFFE  F00C         	goto	l2343
  5446  0019EC                     l2341:
  5447  0019EC  0E00               	movlw	0
  5448  0019EE  6E39               	movwf	___fladd@a^0,c
  5449  0019F0  0E00               	movlw	0
  5450  0019F2  6E3A               	movwf	(___fladd@a+1)^0,c
  5451  0019F4  0E00               	movlw	0
  5452  0019F6  6E3B               	movwf	(___fladd@a+2)^0,c
  5453  0019F8  0E00               	movlw	0
  5454  0019FA  6E3C               	movwf	(___fladd@a+3)^0,c
  5455  0019FC                     l2343:
  5456  0019FC  5043               	movf	___fladd@bexp^0,w,c
  5457  0019FE  5C42               	subwf	___fladd@aexp^0,w,c
  5458  001A00  B0D8               	btfsc	status,0,c
  5459  001A02  EF05  F00D         	goto	u2111
  5460  001A06  EF07  F00D         	goto	u2110
  5461  001A0A                     u2111:
  5462  001A0A  EF2E  F00D         	goto	l2379
  5463  001A0E                     u2110:
  5464  001A0E  AC41               	btfss	___fladd@signs^0,6,c
  5465  001A10  EF0C  F00D         	goto	u2121
  5466  001A14  EF0E  F00D         	goto	u2120
  5467  001A18                     u2121:
  5468  001A18  EF10  F00D         	goto	l2349
  5469  001A1C                     u2120:
  5470  001A1C  0E80               	movlw	128
  5471  001A1E  1A41               	xorwf	___fladd@signs^0,f,c
  5472  001A20                     l2349:
  5473  001A20  C043  F044         	movff	___fladd@bexp,___fladd@grs
  5474  001A24  C042  F043         	movff	___fladd@aexp,___fladd@bexp
  5475  001A28  C044  F042         	movff	___fladd@grs,___fladd@aexp
  5476  001A2C  C035  F044         	movff	___fladd@b,___fladd@grs
  5477  001A30  C039  F035         	movff	___fladd@a,___fladd@b
  5478  001A34  C044  F039         	movff	___fladd@grs,___fladd@a
  5479  001A38  C036  F044         	movff	___fladd@b+1,___fladd@grs
  5480  001A3C  C03A  F036         	movff	___fladd@a+1,___fladd@b+1
  5481  001A40  C044  F03A         	movff	___fladd@grs,___fladd@a+1
  5482  001A44  C037  F044         	movff	___fladd@b+2,___fladd@grs
  5483  001A48  C03B  F037         	movff	___fladd@a+2,___fladd@b+2
  5484  001A4C  C044  F03B         	movff	___fladd@grs,___fladd@a+2
  5485  001A50  C038  F044         	movff	___fladd@b+3,___fladd@grs
  5486  001A54  C03C  F038         	movff	___fladd@a+3,___fladd@b+3
  5487  001A58  C044  F03C         	movff	___fladd@grs,___fladd@a+3
  5488  001A5C                     l2379:
  5489  001A5C  0E00               	movlw	0
  5490  001A5E  6E44               	movwf	___fladd@grs^0,c
  5491  001A60  5043               	movf	___fladd@bexp^0,w,c
  5492  001A62  C042  F03D         	movff	___fladd@aexp,??___fladd
  5493  001A66  6A3E               	clrf	(??___fladd+1)^0,c
  5494  001A68  5E3D               	subwf	??___fladd^0,f,c
  5495  001A6A  0E00               	movlw	0
  5496  001A6C  5A3E               	subwfb	(??___fladd+1)^0,f,c
  5497  001A6E  BE3E               	btfsc	(??___fladd+1)^0,7,c
  5498  001A70  EF43  F00D         	goto	u2131
  5499  001A74  503E               	movf	(??___fladd+1)^0,w,c
  5500  001A76  E109               	bnz	u2130
  5501  001A78  0E1A               	movlw	26
  5502  001A7A  5C3D               	subwf	??___fladd^0,w,c
  5503  001A7C  A0D8               	btfss	status,0,c
  5504  001A7E  EF43  F00D         	goto	u2131
  5505  001A82  EF45  F00D         	goto	u2130
  5506  001A86                     u2131:
  5507  001A86  EF7C  F00D         	goto	l786
  5508  001A8A                     u2130:
  5509  001A8A  5035               	movf	___fladd@b^0,w,c
  5510  001A8C  1036               	iorwf	(___fladd@b+1)^0,w,c
  5511  001A8E  1037               	iorwf	(___fladd@b+2)^0,w,c
  5512  001A90  1038               	iorwf	(___fladd@b+3)^0,w,c
  5513  001A92  A4D8               	btfss	status,2,c
  5514  001A94  EF4E  F00D         	goto	u2141
  5515  001A98  EF51  F00D         	goto	u2140
  5516  001A9C                     u2141:
  5517  001A9C  0E01               	movlw	1
  5518  001A9E  EF52  F00D         	goto	u2150
  5519  001AA2                     u2140:
  5520  001AA2  0E00               	movlw	0
  5521  001AA4                     u2150:
  5522  001AA4  6E44               	movwf	___fladd@grs^0,c
  5523  001AA6  0E00               	movlw	0
  5524  001AA8  6E35               	movwf	___fladd@b^0,c
  5525  001AAA  0E00               	movlw	0
  5526  001AAC  6E36               	movwf	(___fladd@b+1)^0,c
  5527  001AAE  0E00               	movlw	0
  5528  001AB0  6E37               	movwf	(___fladd@b+2)^0,c
  5529  001AB2  0E00               	movlw	0
  5530  001AB4  6E38               	movwf	(___fladd@b+3)^0,c
  5531  001AB6  C042  F043         	movff	___fladd@aexp,___fladd@bexp
  5532  001ABA  EF85  F00D         	goto	l785
  5533  001ABE                     l787:
  5534  001ABE  A044               	btfss	___fladd@grs^0,0,c
  5535  001AC0  EF64  F00D         	goto	u2161
  5536  001AC4  EF66  F00D         	goto	u2160
  5537  001AC8                     u2161:
  5538  001AC8  EF6C  F00D         	goto	l2391
  5539  001ACC                     u2160:
  5540  001ACC  90D8               	bcf	status,0,c
  5541  001ACE  3044               	rrcf	___fladd@grs^0,w,c
  5542  001AD0  0901               	iorlw	1
  5543  001AD2  6E44               	movwf	___fladd@grs^0,c
  5544  001AD4  EF6E  F00D         	goto	l2393
  5545  001AD8                     l2391:
  5546  001AD8  90D8               	bcf	status,0,c
  5547  001ADA  3244               	rrcf	___fladd@grs^0,f,c
  5548  001ADC                     l2393:
  5549  001ADC  A035               	btfss	___fladd@b^0,0,c
  5550  001ADE  EF73  F00D         	goto	u2171
  5551  001AE2  EF75  F00D         	goto	u2170
  5552  001AE6                     u2171:
  5553  001AE6  EF76  F00D         	goto	l2397
  5554  001AEA                     u2170:
  5555  001AEA  8E44               	bsf	___fladd@grs^0,7,c
  5556  001AEC                     l2397:
  5557  001AEC  3438               	rlcf	(___fladd@b+3)^0,w,c
  5558  001AEE  3238               	rrcf	(___fladd@b+3)^0,f,c
  5559  001AF0  3237               	rrcf	(___fladd@b+2)^0,f,c
  5560  001AF2  3236               	rrcf	(___fladd@b+1)^0,f,c
  5561  001AF4  3235               	rrcf	___fladd@b^0,f,c
  5562  001AF6  2A43               	incf	___fladd@bexp^0,f,c
  5563  001AF8                     l786:
  5564  001AF8  5042               	movf	___fladd@aexp^0,w,c
  5565  001AFA  5C43               	subwf	___fladd@bexp^0,w,c
  5566  001AFC  A0D8               	btfss	status,0,c
  5567  001AFE  EF83  F00D         	goto	u2181
  5568  001B02  EF85  F00D         	goto	u2180
  5569  001B06                     u2181:
  5570  001B06  EF5F  F00D         	goto	l787
  5571  001B0A                     u2180:
  5572  001B0A                     l785:
  5573  001B0A  BC41               	btfsc	___fladd@signs^0,6,c
  5574  001B0C  EF8A  F00D         	goto	u2191
  5575  001B10  EF8C  F00D         	goto	u2190
  5576  001B14                     u2191:
  5577  001B14  EFCC  F00D         	goto	l2425
  5578  001B18                     u2190:
  5579  001B18  5043               	movf	___fladd@bexp^0,w,c
  5580  001B1A  A4D8               	btfss	status,2,c
  5581  001B1C  EF92  F00D         	goto	u2201
  5582  001B20  EF94  F00D         	goto	u2200
  5583  001B24                     u2201:
  5584  001B24  EF9E  F00D         	goto	l2407
  5585  001B28                     u2200:
  5586  001B28  0E00               	movlw	0
  5587  001B2A  6E35               	movwf	?___fladd^0,c
  5588  001B2C  0E00               	movlw	0
  5589  001B2E  6E36               	movwf	(?___fladd+1)^0,c
  5590  001B30  0E00               	movlw	0
  5591  001B32  6E37               	movwf	(?___fladd+2)^0,c
  5592  001B34  0E00               	movlw	0
  5593  001B36  6E38               	movwf	(?___fladd+3)^0,c
  5594  001B38  EFED  F00E         	goto	l794
  5595  001B3C                     l2407:
  5596  001B3C  5039               	movf	___fladd@a^0,w,c
  5597  001B3E  2635               	addwf	___fladd@b^0,f,c
  5598  001B40  503A               	movf	(___fladd@a+1)^0,w,c
  5599  001B42  2236               	addwfc	(___fladd@b+1)^0,f,c
  5600  001B44  503B               	movf	(___fladd@a+2)^0,w,c
  5601  001B46  2237               	addwfc	(___fladd@b+2)^0,f,c
  5602  001B48  503C               	movf	(___fladd@a+3)^0,w,c
  5603  001B4A  2238               	addwfc	(___fladd@b+3)^0,f,c
  5604  001B4C  A038               	btfss	(___fladd@b+3)^0,0,c
  5605  001B4E  EFAB  F00D         	goto	u2211
  5606  001B52  EFAD  F00D         	goto	u2210
  5607  001B56                     u2211:
  5608  001B56  EF59  F00E         	goto	l2461
  5609  001B5A                     u2210:
  5610  001B5A  A044               	btfss	___fladd@grs^0,0,c
  5611  001B5C  EFB2  F00D         	goto	u2221
  5612  001B60  EFB4  F00D         	goto	u2220
  5613  001B64                     u2221:
  5614  001B64  EFBA  F00D         	goto	l2415
  5615  001B68                     u2220:
  5616  001B68  90D8               	bcf	status,0,c
  5617  001B6A  3044               	rrcf	___fladd@grs^0,w,c
  5618  001B6C  0901               	iorlw	1
  5619  001B6E  6E44               	movwf	___fladd@grs^0,c
  5620  001B70  EFBC  F00D         	goto	l2417
  5621  001B74                     l2415:
  5622  001B74  90D8               	bcf	status,0,c
  5623  001B76  3244               	rrcf	___fladd@grs^0,f,c
  5624  001B78                     l2417:
  5625  001B78  A035               	btfss	___fladd@b^0,0,c
  5626  001B7A  EFC1  F00D         	goto	u2231
  5627  001B7E  EFC3  F00D         	goto	u2230
  5628  001B82                     u2231:
  5629  001B82  EFC4  F00D         	goto	l2421
  5630  001B86                     u2230:
  5631  001B86  8E44               	bsf	___fladd@grs^0,7,c
  5632  001B88                     l2421:
  5633  001B88  3438               	rlcf	(___fladd@b+3)^0,w,c
  5634  001B8A  3238               	rrcf	(___fladd@b+3)^0,f,c
  5635  001B8C  3237               	rrcf	(___fladd@b+2)^0,f,c
  5636  001B8E  3236               	rrcf	(___fladd@b+1)^0,f,c
  5637  001B90  3235               	rrcf	___fladd@b^0,f,c
  5638  001B92  2A43               	incf	___fladd@bexp^0,f,c
  5639  001B94  EF59  F00E         	goto	l2461
  5640  001B98                     l2425:
  5641  001B98  5039               	movf	___fladd@a^0,w,c
  5642  001B9A  5C35               	subwf	___fladd@b^0,w,c
  5643  001B9C  503A               	movf	(___fladd@a+1)^0,w,c
  5644  001B9E  5836               	subwfb	(___fladd@b+1)^0,w,c
  5645  001BA0  503B               	movf	(___fladd@a+2)^0,w,c
  5646  001BA2  5837               	subwfb	(___fladd@b+2)^0,w,c
  5647  001BA4  5038               	movf	(___fladd@b+3)^0,w,c
  5648  001BA6  0A80               	xorlw	128
  5649  001BA8  6E3D               	movwf	??___fladd^0,c
  5650  001BAA  503C               	movf	(___fladd@a+3)^0,w,c
  5651  001BAC  0A80               	xorlw	128
  5652  001BAE  583D               	subwfb	??___fladd^0,w,c
  5653  001BB0  B0D8               	btfsc	status,0,c
  5654  001BB2  EFDD  F00D         	goto	u2241
  5655  001BB6  EFDF  F00D         	goto	u2240
  5656  001BBA                     u2241:
  5657  001BBA  EF0A  F00E         	goto	l2435
  5658  001BBE                     u2240:
  5659  001BBE  5035               	movf	___fladd@b^0,w,c
  5660  001BC0  5C39               	subwf	___fladd@a^0,w,c
  5661  001BC2  6E3D               	movwf	??___fladd^0,c
  5662  001BC4  5036               	movf	(___fladd@b+1)^0,w,c
  5663  001BC6  583A               	subwfb	(___fladd@a+1)^0,w,c
  5664  001BC8  6E3E               	movwf	(??___fladd+1)^0,c
  5665  001BCA  5037               	movf	(___fladd@b+2)^0,w,c
  5666  001BCC  583B               	subwfb	(___fladd@a+2)^0,w,c
  5667  001BCE  6E3F               	movwf	(??___fladd+2)^0,c
  5668  001BD0  5038               	movf	(___fladd@b+3)^0,w,c
  5669  001BD2  583C               	subwfb	(___fladd@a+3)^0,w,c
  5670  001BD4  6E40               	movwf	(??___fladd+3)^0,c
  5671  001BD6  0EFF               	movlw	255
  5672  001BD8  243D               	addwf	??___fladd^0,w,c
  5673  001BDA  6E35               	movwf	___fladd@b^0,c
  5674  001BDC  0EFF               	movlw	255
  5675  001BDE  203E               	addwfc	(??___fladd+1)^0,w,c
  5676  001BE0  6E36               	movwf	(___fladd@b+1)^0,c
  5677  001BE2  0EFF               	movlw	255
  5678  001BE4  203F               	addwfc	(??___fladd+2)^0,w,c
  5679  001BE6  6E37               	movwf	(___fladd@b+2)^0,c
  5680  001BE8  0EFF               	movlw	255
  5681  001BEA  2040               	addwfc	(??___fladd+3)^0,w,c
  5682  001BEC  6E38               	movwf	(___fladd@b+3)^0,c
  5683  001BEE  0E80               	movlw	128
  5684  001BF0  1A41               	xorwf	___fladd@signs^0,f,c
  5685  001BF2  6C44               	negf	___fladd@grs^0,c
  5686  001BF4  5044               	movf	___fladd@grs^0,w,c
  5687  001BF6  A4D8               	btfss	status,2,c
  5688  001BF8  EF00  F00E         	goto	u2251
  5689  001BFC  EF02  F00E         	goto	u2250
  5690  001C00                     u2251:
  5691  001C00  EF12  F00E         	goto	l802
  5692  001C04                     u2250:
  5693  001C04  0E01               	movlw	1
  5694  001C06  2635               	addwf	___fladd@b^0,f,c
  5695  001C08  0E00               	movlw	0
  5696  001C0A  2236               	addwfc	(___fladd@b+1)^0,f,c
  5697  001C0C  2237               	addwfc	(___fladd@b+2)^0,f,c
  5698  001C0E  2238               	addwfc	(___fladd@b+3)^0,f,c
  5699  001C10  EF12  F00E         	goto	l802
  5700  001C14                     l2435:
  5701  001C14  5039               	movf	___fladd@a^0,w,c
  5702  001C16  5E35               	subwf	___fladd@b^0,f,c
  5703  001C18  503A               	movf	(___fladd@a+1)^0,w,c
  5704  001C1A  5A36               	subwfb	(___fladd@b+1)^0,f,c
  5705  001C1C  503B               	movf	(___fladd@a+2)^0,w,c
  5706  001C1E  5A37               	subwfb	(___fladd@b+2)^0,f,c
  5707  001C20  503C               	movf	(___fladd@a+3)^0,w,c
  5708  001C22  5A38               	subwfb	(___fladd@b+3)^0,f,c
  5709  001C24                     l802:
  5710  001C24  5035               	movf	___fladd@b^0,w,c
  5711  001C26  1036               	iorwf	(___fladd@b+1)^0,w,c
  5712  001C28  1037               	iorwf	(___fladd@b+2)^0,w,c
  5713  001C2A  1038               	iorwf	(___fladd@b+3)^0,w,c
  5714  001C2C  A4D8               	btfss	status,2,c
  5715  001C2E  EF1B  F00E         	goto	u2261
  5716  001C32  EF1D  F00E         	goto	u2260
  5717  001C36                     u2261:
  5718  001C36  EF52  F00E         	goto	l2459
  5719  001C3A                     u2260:
  5720  001C3A  5044               	movf	___fladd@grs^0,w,c
  5721  001C3C  A4D8               	btfss	status,2,c
  5722  001C3E  EF23  F00E         	goto	u2271
  5723  001C42  EF25  F00E         	goto	u2270
  5724  001C46                     u2271:
  5725  001C46  EF52  F00E         	goto	l2459
  5726  001C4A                     u2270:
  5727  001C4A  0E00               	movlw	0
  5728  001C4C  6E35               	movwf	?___fladd^0,c
  5729  001C4E  0E00               	movlw	0
  5730  001C50  6E36               	movwf	(?___fladd+1)^0,c
  5731  001C52  0E00               	movlw	0
  5732  001C54  6E37               	movwf	(?___fladd+2)^0,c
  5733  001C56  0E00               	movlw	0
  5734  001C58  6E38               	movwf	(?___fladd+3)^0,c
  5735  001C5A  EFED  F00E         	goto	l794
  5736  001C5E                     l2443:
  5737  001C5E  90D8               	bcf	status,0,c
  5738  001C60  3635               	rlcf	___fladd@b^0,f,c
  5739  001C62  3636               	rlcf	(___fladd@b+1)^0,f,c
  5740  001C64  3637               	rlcf	(___fladd@b+2)^0,f,c
  5741  001C66  3638               	rlcf	(___fladd@b+3)^0,f,c
  5742  001C68  AE44               	btfss	___fladd@grs^0,7,c
  5743  001C6A  EF39  F00E         	goto	u2281
  5744  001C6E  EF3B  F00E         	goto	u2280
  5745  001C72                     u2281:
  5746  001C72  EF3C  F00E         	goto	l2449
  5747  001C76                     u2280:
  5748  001C76  8035               	bsf	___fladd@b^0,0,c
  5749  001C78                     l2449:
  5750  001C78  A044               	btfss	___fladd@grs^0,0,c
  5751  001C7A  EF41  F00E         	goto	u2291
  5752  001C7E  EF43  F00E         	goto	u2290
  5753  001C82                     u2291:
  5754  001C82  EF47  F00E         	goto	l2453
  5755  001C86                     u2290:
  5756  001C86  80D8               	bsf	status,0,c
  5757  001C88  3644               	rlcf	___fladd@grs^0,f,c
  5758  001C8A  EF49  F00E         	goto	l2455
  5759  001C8E                     l2453:
  5760  001C8E  90D8               	bcf	status,0,c
  5761  001C90  3644               	rlcf	___fladd@grs^0,f,c
  5762  001C92                     l2455:
  5763  001C92  5043               	movf	___fladd@bexp^0,w,c
  5764  001C94  B4D8               	btfsc	status,2,c
  5765  001C96  EF4F  F00E         	goto	u2301
  5766  001C9A  EF51  F00E         	goto	u2300
  5767  001C9E                     u2301:
  5768  001C9E  EF52  F00E         	goto	l2459
  5769  001CA2                     u2300:
  5770  001CA2  0643               	decf	___fladd@bexp^0,f,c
  5771  001CA4                     l2459:
  5772  001CA4  AE37               	btfss	(___fladd@b+2)^0,7,c
  5773  001CA6  EF57  F00E         	goto	u2311
  5774  001CAA  EF59  F00E         	goto	u2310
  5775  001CAE                     u2311:
  5776  001CAE  EF2F  F00E         	goto	l2443
  5777  001CB2                     u2310:
  5778  001CB2                     l2461:
  5779  001CB2  0E00               	movlw	0
  5780  001CB4  6E42               	movwf	___fladd@aexp^0,c
  5781  001CB6  AE44               	btfss	___fladd@grs^0,7,c
  5782  001CB8  EF60  F00E         	goto	u2321
  5783  001CBC  EF62  F00E         	goto	u2320
  5784  001CC0                     u2321:
  5785  001CC0  EF7A  F00E         	goto	l811
  5786  001CC4                     u2320:
  5787  001CC4  C044  F03D         	movff	___fladd@grs,??___fladd
  5788  001CC8  0E7F               	movlw	127
  5789  001CCA  163D               	andwf	??___fladd^0,f,c
  5790  001CCC  B4D8               	btfsc	status,2,c
  5791  001CCE  EF6B  F00E         	goto	u2331
  5792  001CD2  EF6D  F00E         	goto	u2330
  5793  001CD6                     u2331:
  5794  001CD6  EF71  F00E         	goto	l812
  5795  001CDA                     u2330:
  5796  001CDA                     l2467:
  5797  001CDA  0E01               	movlw	1
  5798  001CDC  6E42               	movwf	___fladd@aexp^0,c
  5799  001CDE  EF7A  F00E         	goto	l811
  5800  001CE2                     l812:
  5801  001CE2  A035               	btfss	___fladd@b^0,0,c
  5802  001CE4  EF76  F00E         	goto	u2341
  5803  001CE8  EF78  F00E         	goto	u2340
  5804  001CEC                     u2341:
  5805  001CEC  EF7A  F00E         	goto	l811
  5806  001CF0                     u2340:
  5807  001CF0  EF6D  F00E         	goto	l2467
  5808  001CF4                     l811:
  5809  001CF4  5042               	movf	___fladd@aexp^0,w,c
  5810  001CF6  B4D8               	btfsc	status,2,c
  5811  001CF8  EF80  F00E         	goto	u2351
  5812  001CFC  EF82  F00E         	goto	u2350
  5813  001D00                     u2351:
  5814  001D00  EFAD  F00E         	goto	l2479
  5815  001D04                     u2350:
  5816  001D04  0E01               	movlw	1
  5817  001D06  2635               	addwf	___fladd@b^0,f,c
  5818  001D08  0E00               	movlw	0
  5819  001D0A  2236               	addwfc	(___fladd@b+1)^0,f,c
  5820  001D0C  2237               	addwfc	(___fladd@b+2)^0,f,c
  5821  001D0E  2238               	addwfc	(___fladd@b+3)^0,f,c
  5822  001D10  A038               	btfss	(___fladd@b+3)^0,0,c
  5823  001D12  EF8D  F00E         	goto	u2361
  5824  001D16  EF8F  F00E         	goto	u2360
  5825  001D1A                     u2361:
  5826  001D1A  EFAD  F00E         	goto	l2479
  5827  001D1E                     u2360:
  5828  001D1E  C035  F03D         	movff	___fladd@b,??___fladd
  5829  001D22  C036  F03E         	movff	___fladd@b+1,??___fladd+1
  5830  001D26  C037  F03F         	movff	___fladd@b+2,??___fladd+2
  5831  001D2A  C038  F040         	movff	___fladd@b+3,??___fladd+3
  5832  001D2E  3440               	rlcf	(??___fladd+3)^0,w,c
  5833  001D30  3240               	rrcf	(??___fladd+3)^0,f,c
  5834  001D32  323F               	rrcf	(??___fladd+2)^0,f,c
  5835  001D34  323E               	rrcf	(??___fladd+1)^0,f,c
  5836  001D36  323D               	rrcf	??___fladd^0,f,c
  5837  001D38  C03D  F035         	movff	??___fladd,___fladd@b
  5838  001D3C  C03E  F036         	movff	??___fladd+1,___fladd@b+1
  5839  001D40  C03F  F037         	movff	??___fladd+2,___fladd@b+2
  5840  001D44  C040  F038         	movff	??___fladd+3,___fladd@b+3
  5841  001D48  2843               	incf	___fladd@bexp^0,w,c
  5842  001D4A  B4D8               	btfsc	status,2,c
  5843  001D4C  EFAA  F00E         	goto	u2371
  5844  001D50  EFAC  F00E         	goto	u2370
  5845  001D54                     u2371:
  5846  001D54  EFAD  F00E         	goto	l2479
  5847  001D58                     u2370:
  5848  001D58  2A43               	incf	___fladd@bexp^0,f,c
  5849  001D5A                     l2479:
  5850  001D5A  2843               	incf	___fladd@bexp^0,w,c
  5851  001D5C  B4D8               	btfsc	status,2,c
  5852  001D5E  EFB3  F00E         	goto	u2381
  5853  001D62  EFB5  F00E         	goto	u2380
  5854  001D66                     u2381:
  5855  001D66  EFBD  F00E         	goto	l2483
  5856  001D6A                     u2380:
  5857  001D6A  5043               	movf	___fladd@bexp^0,w,c
  5858  001D6C  A4D8               	btfss	status,2,c
  5859  001D6E  EFBB  F00E         	goto	u2391
  5860  001D72  EFBD  F00E         	goto	u2390
  5861  001D76                     u2391:
  5862  001D76  EFCF  F00E         	goto	l2487
  5863  001D7A                     u2390:
  5864  001D7A                     l2483:
  5865  001D7A  0E00               	movlw	0
  5866  001D7C  6E35               	movwf	___fladd@b^0,c
  5867  001D7E  0E00               	movlw	0
  5868  001D80  6E36               	movwf	(___fladd@b+1)^0,c
  5869  001D82  0E00               	movlw	0
  5870  001D84  6E37               	movwf	(___fladd@b+2)^0,c
  5871  001D86  0E00               	movlw	0
  5872  001D88  6E38               	movwf	(___fladd@b+3)^0,c
  5873  001D8A  5043               	movf	___fladd@bexp^0,w,c
  5874  001D8C  A4D8               	btfss	status,2,c
  5875  001D8E  EFCB  F00E         	goto	u2401
  5876  001D92  EFCD  F00E         	goto	u2400
  5877  001D96                     u2401:
  5878  001D96  EFCF  F00E         	goto	l2487
  5879  001D9A                     u2400:
  5880  001D9A  0E00               	movlw	0
  5881  001D9C  6E41               	movwf	___fladd@signs^0,c
  5882  001D9E                     l2487:
  5883  001D9E  A043               	btfss	___fladd@bexp^0,0,c
  5884  001DA0  EFD4  F00E         	goto	u2411
  5885  001DA4  EFD6  F00E         	goto	u2410
  5886  001DA8                     u2411:
  5887  001DA8  EFD9  F00E         	goto	l2491
  5888  001DAC                     u2410:
  5889  001DAC  8E37               	bsf	(___fladd@b+2)^0,7,c
  5890  001DAE  EFDA  F00E         	goto	l2493
  5891  001DB2                     l2491:
  5892  001DB2  9E37               	bcf	(___fladd@b+2)^0,7,c
  5893  001DB4                     l2493:
  5894  001DB4  90D8               	bcf	status,0,c
  5895  001DB6  3043               	rrcf	___fladd@bexp^0,w,c
  5896  001DB8  6E38               	movwf	(___fladd@b+3)^0,c
  5897  001DBA  AE41               	btfss	___fladd@signs^0,7,c
  5898  001DBC  EFE2  F00E         	goto	u2421
  5899  001DC0  EFE4  F00E         	goto	u2420
  5900  001DC4                     u2421:
  5901  001DC4  EFE5  F00E         	goto	l2499
  5902  001DC8                     u2420:
  5903  001DC8  8E38               	bsf	(___fladd@b+3)^0,7,c
  5904  001DCA                     l2499:
  5905  001DCA  C035  F035         	movff	___fladd@b,?___fladd
  5906  001DCE  C036  F036         	movff	___fladd@b+1,?___fladd+1
  5907  001DD2  C037  F037         	movff	___fladd@b+2,?___fladd+2
  5908  001DD6  C038  F038         	movff	___fladd@b+3,?___fladd+3
  5909  001DDA                     l794:
  5910  001DDA  0012               	return		;funcret
  5911  001DDC                     __end_of___fladd:
  5912                           	callstack 0
  5913                           
  5914 ;; *************** function ___flneg *****************
  5915 ;; Defined at:
  5916 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\flneg.c"
  5917 ;; Parameters:    Size  Location     Type
  5918 ;;  f1              4    0[COMRAM] unsigned char 
  5919 ;; Auto vars:     Size  Location     Type
  5920 ;;		None
  5921 ;; Return value:  Size  Location     Type
  5922 ;;                  4    0[COMRAM] unsigned char 
  5923 ;; Registers used:
  5924 ;;		wreg, status,2, status,0
  5925 ;; Tracked objects:
  5926 ;;		On entry : 0/0
  5927 ;;		On exit  : 0/0
  5928 ;;		Unchanged: 0/0
  5929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5930 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5933 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5934 ;;Total ram usage:        4 bytes
  5935 ;; Hardware stack levels used: 1
  5936 ;; Hardware stack levels required when called: 1
  5937 ;; This function calls:
  5938 ;;		Nothing
  5939 ;; This function is called by:
  5940 ;;		_sprintf
  5941 ;; This function uses a non-reentrant model
  5942 ;;
  5943                           
  5944                           	psect	text19
  5945  0038F0                     __ptext19:
  5946                           	callstack 0
  5947  0038F0                     ___flneg:
  5948                           	callstack 28
  5949  0038F0  5001               	movf	___flneg@f1^0,w,c
  5950  0038F2  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5951  0038F4  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5952  0038F6  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5953  0038F8  B4D8               	btfsc	status,2,c
  5954  0038FA  EF81  F01C         	goto	u3471
  5955  0038FE  EF83  F01C         	goto	u3470
  5956  003902                     u3471:
  5957  003902  EF8B  F01C         	goto	l3099
  5958  003906                     u3470:
  5959  003906  0E00               	movlw	0
  5960  003908  1A01               	xorwf	___flneg@f1^0,f,c
  5961  00390A  0E00               	movlw	0
  5962  00390C  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5963  00390E  0E00               	movlw	0
  5964  003910  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5965  003912  0E80               	movlw	128
  5966  003914  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5967  003916                     l3099:
  5968  003916  C001  F001         	movff	___flneg@f1,?___flneg
  5969  00391A  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5970  00391E  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5971  003922  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5972  003926  0012               	return		;funcret
  5973  003928                     __end_of___flneg:
  5974                           	callstack 0
  5975                           
  5976 ;; *************** function ___flge *****************
  5977 ;; Defined at:
  5978 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\flge.c"
  5979 ;; Parameters:    Size  Location     Type
  5980 ;;  ff1             4    0[COMRAM] unsigned char 
  5981 ;;  ff2             4    4[COMRAM] unsigned char 
  5982 ;; Auto vars:     Size  Location     Type
  5983 ;;		None
  5984 ;; Return value:  Size  Location     Type
  5985 ;;		None               void
  5986 ;; Registers used:
  5987 ;;		wreg, status,2, status,0
  5988 ;; Tracked objects:
  5989 ;;		On entry : 0/0
  5990 ;;		On exit  : 0/0
  5991 ;;		Unchanged: 0/0
  5992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5993 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5995 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5996 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5997 ;;Total ram usage:       12 bytes
  5998 ;; Hardware stack levels used: 1
  5999 ;; Hardware stack levels required when called: 1
  6000 ;; This function calls:
  6001 ;;		Nothing
  6002 ;; This function is called by:
  6003 ;;		_sprintf
  6004 ;; This function uses a non-reentrant model
  6005 ;;
  6006                           
  6007                           	psect	text20
  6008  0032BE                     __ptext20:
  6009                           	callstack 0
  6010  0032BE                     ___flge:
  6011                           	callstack 28
  6012  0032BE  0E00               	movlw	0
  6013  0032C0  1401               	andwf	___flge@ff1^0,w,c
  6014  0032C2  6E09               	movwf	??___flge^0,c
  6015  0032C4  0E00               	movlw	0
  6016  0032C6  1402               	andwf	(___flge@ff1+1)^0,w,c
  6017  0032C8  6E0A               	movwf	(??___flge+1)^0,c
  6018  0032CA  0E80               	movlw	128
  6019  0032CC  1403               	andwf	(___flge@ff1+2)^0,w,c
  6020  0032CE  6E0B               	movwf	(??___flge+2)^0,c
  6021  0032D0  0E7F               	movlw	127
  6022  0032D2  1404               	andwf	(___flge@ff1+3)^0,w,c
  6023  0032D4  6E0C               	movwf	(??___flge+3)^0,c
  6024  0032D6  5009               	movf	??___flge^0,w,c
  6025  0032D8  100A               	iorwf	(??___flge+1)^0,w,c
  6026  0032DA  100B               	iorwf	(??___flge+2)^0,w,c
  6027  0032DC  100C               	iorwf	(??___flge+3)^0,w,c
  6028  0032DE  A4D8               	btfss	status,2,c
  6029  0032E0  EF74  F019         	goto	u3421
  6030  0032E4  EF76  F019         	goto	u3420
  6031  0032E8                     u3421:
  6032  0032E8  EF7E  F019         	goto	l3077
  6033  0032EC                     u3420:
  6034  0032EC  0E00               	movlw	0
  6035  0032EE  6E01               	movwf	___flge@ff1^0,c
  6036  0032F0  0E00               	movlw	0
  6037  0032F2  6E02               	movwf	(___flge@ff1+1)^0,c
  6038  0032F4  0E00               	movlw	0
  6039  0032F6  6E03               	movwf	(___flge@ff1+2)^0,c
  6040  0032F8  0E00               	movlw	0
  6041  0032FA  6E04               	movwf	(___flge@ff1+3)^0,c
  6042  0032FC                     l3077:
  6043  0032FC  0E00               	movlw	0
  6044  0032FE  1405               	andwf	___flge@ff2^0,w,c
  6045  003300  6E09               	movwf	??___flge^0,c
  6046  003302  0E00               	movlw	0
  6047  003304  1406               	andwf	(___flge@ff2+1)^0,w,c
  6048  003306  6E0A               	movwf	(??___flge+1)^0,c
  6049  003308  0E80               	movlw	128
  6050  00330A  1407               	andwf	(___flge@ff2+2)^0,w,c
  6051  00330C  6E0B               	movwf	(??___flge+2)^0,c
  6052  00330E  0E7F               	movlw	127
  6053  003310  1408               	andwf	(___flge@ff2+3)^0,w,c
  6054  003312  6E0C               	movwf	(??___flge+3)^0,c
  6055  003314  5009               	movf	??___flge^0,w,c
  6056  003316  100A               	iorwf	(??___flge+1)^0,w,c
  6057  003318  100B               	iorwf	(??___flge+2)^0,w,c
  6058  00331A  100C               	iorwf	(??___flge+3)^0,w,c
  6059  00331C  A4D8               	btfss	status,2,c
  6060  00331E  EF93  F019         	goto	u3431
  6061  003322  EF95  F019         	goto	u3430
  6062  003326                     u3431:
  6063  003326  EF9D  F019         	goto	l3081
  6064  00332A                     u3430:
  6065  00332A  0E00               	movlw	0
  6066  00332C  6E05               	movwf	___flge@ff2^0,c
  6067  00332E  0E00               	movlw	0
  6068  003330  6E06               	movwf	(___flge@ff2+1)^0,c
  6069  003332  0E00               	movlw	0
  6070  003334  6E07               	movwf	(___flge@ff2+2)^0,c
  6071  003336  0E00               	movlw	0
  6072  003338  6E08               	movwf	(___flge@ff2+3)^0,c
  6073  00333A                     l3081:
  6074  00333A  AE04               	btfss	(___flge@ff1+3)^0,7,c
  6075  00333C  EFA2  F019         	goto	u3441
  6076  003340  EFA4  F019         	goto	u3440
  6077  003344                     u3441:
  6078  003344  EFAD  F019         	goto	l3085
  6079  003348                     u3440:
  6080  003348  6C01               	negf	___flge@ff1^0,c
  6081  00334A  1E02               	comf	(___flge@ff1+1)^0,f,c
  6082  00334C  B0D8               	btfsc	status,0,c
  6083  00334E  2A02               	incf	(___flge@ff1+1)^0,f,c
  6084  003350  1E03               	comf	(___flge@ff1+2)^0,f,c
  6085  003352  B0D8               	btfsc	status,0,c
  6086  003354  2A03               	incf	(___flge@ff1+2)^0,f,c
  6087  003356  0E80               	movlw	128
  6088  003358  5604               	subfwb	(___flge@ff1+3)^0,f,c
  6089  00335A                     l3085:
  6090  00335A  AE08               	btfss	(___flge@ff2+3)^0,7,c
  6091  00335C  EFB2  F019         	goto	u3451
  6092  003360  EFB4  F019         	goto	u3450
  6093  003364                     u3451:
  6094  003364  EFBD  F019         	goto	l513
  6095  003368                     u3450:
  6096  003368  6C05               	negf	___flge@ff2^0,c
  6097  00336A  1E06               	comf	(___flge@ff2+1)^0,f,c
  6098  00336C  B0D8               	btfsc	status,0,c
  6099  00336E  2A06               	incf	(___flge@ff2+1)^0,f,c
  6100  003370  1E07               	comf	(___flge@ff2+2)^0,f,c
  6101  003372  B0D8               	btfsc	status,0,c
  6102  003374  2A07               	incf	(___flge@ff2+2)^0,f,c
  6103  003376  0E80               	movlw	128
  6104  003378  5608               	subfwb	(___flge@ff2+3)^0,f,c
  6105  00337A                     l513:
  6106  00337A  0E00               	movlw	0
  6107  00337C  1A01               	xorwf	___flge@ff1^0,f,c
  6108  00337E  0E00               	movlw	0
  6109  003380  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  6110  003382  0E00               	movlw	0
  6111  003384  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  6112  003386  0E80               	movlw	128
  6113  003388  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  6114  00338A  0E00               	movlw	0
  6115  00338C  1A05               	xorwf	___flge@ff2^0,f,c
  6116  00338E  0E00               	movlw	0
  6117  003390  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  6118  003392  0E00               	movlw	0
  6119  003394  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  6120  003396  0E80               	movlw	128
  6121  003398  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  6122  00339A  5005               	movf	___flge@ff2^0,w,c
  6123  00339C  5C01               	subwf	___flge@ff1^0,w,c
  6124  00339E  5006               	movf	(___flge@ff2+1)^0,w,c
  6125  0033A0  5802               	subwfb	(___flge@ff1+1)^0,w,c
  6126  0033A2  5007               	movf	(___flge@ff2+2)^0,w,c
  6127  0033A4  5803               	subwfb	(___flge@ff1+2)^0,w,c
  6128  0033A6  5008               	movf	(___flge@ff2+3)^0,w,c
  6129  0033A8  5804               	subwfb	(___flge@ff1+3)^0,w,c
  6130  0033AA  B0D8               	btfsc	status,0,c
  6131  0033AC  EFDA  F019         	goto	u3461
  6132  0033B0  EFDC  F019         	goto	u3460
  6133  0033B4                     u3461:
  6134  0033B4  EFDF  F019         	goto	l3091
  6135  0033B8                     u3460:
  6136  0033B8  90D8               	bcf	status,0,c
  6137  0033BA  EFE0  F019         	goto	l514
  6138  0033BE                     l3091:
  6139  0033BE  80D8               	bsf	status,0,c
  6140  0033C0                     l514:
  6141  0033C0  0012               	return		;funcret
  6142  0033C2                     __end_of___flge:
  6143                           	callstack 0
  6144                           
  6145 ;; *************** function ___fleq *****************
  6146 ;; Defined at:
  6147 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\fleq.c"
  6148 ;; Parameters:    Size  Location     Type
  6149 ;;  ff1             4    0[COMRAM] unsigned char 
  6150 ;;  ff2             4    4[COMRAM] unsigned char 
  6151 ;; Auto vars:     Size  Location     Type
  6152 ;;		None
  6153 ;; Return value:  Size  Location     Type
  6154 ;;		None               void
  6155 ;; Registers used:
  6156 ;;		wreg, status,2, status,0
  6157 ;; Tracked objects:
  6158 ;;		On entry : 0/0
  6159 ;;		On exit  : 0/0
  6160 ;;		Unchanged: 0/0
  6161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6162 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6164 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6165 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6166 ;;Total ram usage:       12 bytes
  6167 ;; Hardware stack levels used: 1
  6168 ;; Hardware stack levels required when called: 1
  6169 ;; This function calls:
  6170 ;;		Nothing
  6171 ;; This function is called by:
  6172 ;;		_sprintf
  6173 ;; This function uses a non-reentrant model
  6174 ;;
  6175                           
  6176                           	psect	text21
  6177  003536                     __ptext21:
  6178                           	callstack 0
  6179  003536                     ___fleq:
  6180                           	callstack 28
  6181  003536  0E00               	movlw	0
  6182  003538  1401               	andwf	___fleq@ff1^0,w,c
  6183  00353A  6E09               	movwf	??___fleq^0,c
  6184  00353C  0E00               	movlw	0
  6185  00353E  1402               	andwf	(___fleq@ff1+1)^0,w,c
  6186  003540  6E0A               	movwf	(??___fleq+1)^0,c
  6187  003542  0E80               	movlw	128
  6188  003544  1403               	andwf	(___fleq@ff1+2)^0,w,c
  6189  003546  6E0B               	movwf	(??___fleq+2)^0,c
  6190  003548  0E7F               	movlw	127
  6191  00354A  1404               	andwf	(___fleq@ff1+3)^0,w,c
  6192  00354C  6E0C               	movwf	(??___fleq+3)^0,c
  6193  00354E  5009               	movf	??___fleq^0,w,c
  6194  003550  100A               	iorwf	(??___fleq+1)^0,w,c
  6195  003552  100B               	iorwf	(??___fleq+2)^0,w,c
  6196  003554  100C               	iorwf	(??___fleq+3)^0,w,c
  6197  003556  A4D8               	btfss	status,2,c
  6198  003558  EFB0  F01A         	goto	u3391
  6199  00355C  EFB2  F01A         	goto	u3390
  6200  003560                     u3391:
  6201  003560  EFBA  F01A         	goto	l3061
  6202  003564                     u3390:
  6203  003564  0E00               	movlw	0
  6204  003566  6E01               	movwf	___fleq@ff1^0,c
  6205  003568  0E00               	movlw	0
  6206  00356A  6E02               	movwf	(___fleq@ff1+1)^0,c
  6207  00356C  0E00               	movlw	0
  6208  00356E  6E03               	movwf	(___fleq@ff1+2)^0,c
  6209  003570  0E00               	movlw	0
  6210  003572  6E04               	movwf	(___fleq@ff1+3)^0,c
  6211  003574                     l3061:
  6212  003574  0E00               	movlw	0
  6213  003576  1405               	andwf	___fleq@ff2^0,w,c
  6214  003578  6E09               	movwf	??___fleq^0,c
  6215  00357A  0E00               	movlw	0
  6216  00357C  1406               	andwf	(___fleq@ff2+1)^0,w,c
  6217  00357E  6E0A               	movwf	(??___fleq+1)^0,c
  6218  003580  0E80               	movlw	128
  6219  003582  1407               	andwf	(___fleq@ff2+2)^0,w,c
  6220  003584  6E0B               	movwf	(??___fleq+2)^0,c
  6221  003586  0E7F               	movlw	127
  6222  003588  1408               	andwf	(___fleq@ff2+3)^0,w,c
  6223  00358A  6E0C               	movwf	(??___fleq+3)^0,c
  6224  00358C  5009               	movf	??___fleq^0,w,c
  6225  00358E  100A               	iorwf	(??___fleq+1)^0,w,c
  6226  003590  100B               	iorwf	(??___fleq+2)^0,w,c
  6227  003592  100C               	iorwf	(??___fleq+3)^0,w,c
  6228  003594  A4D8               	btfss	status,2,c
  6229  003596  EFCF  F01A         	goto	u3401
  6230  00359A  EFD1  F01A         	goto	u3400
  6231  00359E                     u3401:
  6232  00359E  EFD9  F01A         	goto	l3065
  6233  0035A2                     u3400:
  6234  0035A2  0E00               	movlw	0
  6235  0035A4  6E05               	movwf	___fleq@ff2^0,c
  6236  0035A6  0E00               	movlw	0
  6237  0035A8  6E06               	movwf	(___fleq@ff2+1)^0,c
  6238  0035AA  0E00               	movlw	0
  6239  0035AC  6E07               	movwf	(___fleq@ff2+2)^0,c
  6240  0035AE  0E00               	movlw	0
  6241  0035B0  6E08               	movwf	(___fleq@ff2+3)^0,c
  6242  0035B2                     l3065:
  6243  0035B2  5005               	movf	___fleq@ff2^0,w,c
  6244  0035B4  1801               	xorwf	___fleq@ff1^0,w,c
  6245  0035B6  E10F               	bnz	u3410
  6246  0035B8  5006               	movf	(___fleq@ff2+1)^0,w,c
  6247  0035BA  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  6248  0035BC  E10C               	bnz	u3410
  6249  0035BE  5007               	movf	(___fleq@ff2+2)^0,w,c
  6250  0035C0  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  6251  0035C2  E109               	bnz	u3410
  6252  0035C4  5008               	movf	(___fleq@ff2+3)^0,w,c
  6253  0035C6  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  6254  0035C8  B4D8               	btfsc	status,2,c
  6255  0035CA  EFE9  F01A         	goto	u3411
  6256  0035CE  EFEB  F01A         	goto	u3410
  6257  0035D2                     u3411:
  6258  0035D2  EFEE  F01A         	goto	l3069
  6259  0035D6                     u3410:
  6260  0035D6  90D8               	bcf	status,0,c
  6261  0035D8  EFEF  F01A         	goto	l507
  6262  0035DC                     l3069:
  6263  0035DC  80D8               	bsf	status,0,c
  6264  0035DE                     l507:
  6265  0035DE  0012               	return		;funcret
  6266  0035E0                     __end_of___fleq:
  6267                           	callstack 0
  6268                           
  6269 ;; *************** function _TIMER0_Init *****************
  6270 ;; Defined at:
  6271 ;;		line 122 in file "main.c"
  6272 ;; Parameters:    Size  Location     Type
  6273 ;;		None
  6274 ;; Auto vars:     Size  Location     Type
  6275 ;;		None
  6276 ;; Return value:  Size  Location     Type
  6277 ;;                  1    wreg      void 
  6278 ;; Registers used:
  6279 ;;		wreg, status,2
  6280 ;; Tracked objects:
  6281 ;;		On entry : 0/0
  6282 ;;		On exit  : 0/0
  6283 ;;		Unchanged: 0/0
  6284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6289 ;;Total ram usage:        0 bytes
  6290 ;; Hardware stack levels used: 1
  6291 ;; Hardware stack levels required when called: 1
  6292 ;; This function calls:
  6293 ;;		Nothing
  6294 ;; This function is called by:
  6295 ;;		_main
  6296 ;; This function uses a non-reentrant model
  6297 ;;
  6298                           
  6299                           	psect	text22
  6300  0039C8                     __ptext22:
  6301                           	callstack 0
  6302  0039C8                     _TIMER0_Init:
  6303                           	callstack 29
  6304  0039C8                     
  6305                           ;main.c: 123: T0CONbits.T0PS = 0b111;
  6306  0039C8  0E07               	movlw	7
  6307  0039CA  12D5               	iorwf	213,f,c	;volatile
  6308  0039CC                     
  6309                           ;main.c: 124: T0CONbits.PSA = 0x00;
  6310  0039CC  96D5               	bcf	213,3,c	;volatile
  6311  0039CE                     
  6312                           ;main.c: 125: T0CONbits.T0SE = 0x00;
  6313  0039CE  98D5               	bcf	213,4,c	;volatile
  6314  0039D0                     
  6315                           ;main.c: 126: T0CONbits.T0CS = 0x00;
  6316  0039D0  9AD5               	bcf	213,5,c	;volatile
  6317  0039D2                     
  6318                           ;main.c: 127: T0CONbits.T08BIT = 0x01;
  6319  0039D2  8CD5               	bsf	213,6,c	;volatile
  6320                           
  6321                           ;main.c: 128: TMR0 = 0x00;
  6322  0039D4  0E00               	movlw	0
  6323  0039D6  6ED7               	movwf	215,c	;volatile
  6324  0039D8  0E00               	movlw	0
  6325  0039DA  6ED6               	movwf	214,c	;volatile
  6326  0039DC                     
  6327                           ;main.c: 129: INTCONbits.TMR0IE = 0x01;
  6328  0039DC  8AF2               	bsf	242,5,c	;volatile
  6329  0039DE                     
  6330                           ;main.c: 132: INTCONbits.GIE = 0x01;
  6331  0039DE  8EF2               	bsf	242,7,c	;volatile
  6332  0039E0                     
  6333                           ;main.c: 133: INTCONbits.PEIE = 0x01;
  6334  0039E0  8CF2               	bsf	242,6,c	;volatile
  6335  0039E2  0012               	return		;funcret
  6336  0039E4                     __end_of_TIMER0_Init:
  6337                           	callstack 0
  6338                           
  6339 ;; *************** function _LCD_SETUP_4BIT *****************
  6340 ;; Defined at:
  6341 ;;		line 34 in file "LCD.h"
  6342 ;; Parameters:    Size  Location     Type
  6343 ;;		None
  6344 ;; Auto vars:     Size  Location     Type
  6345 ;;		None
  6346 ;; Return value:  Size  Location     Type
  6347 ;;                  1    wreg      void 
  6348 ;; Registers used:
  6349 ;;		None
  6350 ;; Tracked objects:
  6351 ;;		On entry : 0/0
  6352 ;;		On exit  : 0/0
  6353 ;;		Unchanged: 0/0
  6354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6359 ;;Total ram usage:        0 bytes
  6360 ;; Hardware stack levels used: 1
  6361 ;; Hardware stack levels required when called: 1
  6362 ;; This function calls:
  6363 ;;		Nothing
  6364 ;; This function is called by:
  6365 ;;		_main
  6366 ;; This function uses a non-reentrant model
  6367 ;;
  6368                           
  6369                           	psect	text23
  6370  00395A                     __ptext23:
  6371                           	callstack 0
  6372  00395A                     _LCD_SETUP_4BIT:
  6373                           	callstack 29
  6374  00395A                     
  6375                           ;LCD.h: 40: CCP2CONbits.CCP2M0 = 0x00;
  6376  00395A  90BA               	bcf	186,0,c	;volatile
  6377                           
  6378                           ;LCD.h: 41: CCP2CONbits.CCP2M1 = 0x00;
  6379  00395C  92BA               	bcf	186,1,c	;volatile
  6380                           
  6381                           ;LCD.h: 42: CCP2CONbits.CCP2M2 = 0x00;
  6382  00395E  94BA               	bcf	186,2,c	;volatile
  6383                           
  6384                           ;LCD.h: 43: CCP2CONbits.CCP2M3 = 0x00;
  6385  003960  96BA               	bcf	186,3,c	;volatile
  6386                           
  6387                           ;LCD.h: 48: CCP1CONbits.CCP1M0 = 0x00;
  6388  003962  90BD               	bcf	189,0,c	;volatile
  6389                           
  6390                           ;LCD.h: 49: CCP1CONbits.CCP1M1 = 0x00;
  6391  003964  92BD               	bcf	189,1,c	;volatile
  6392                           
  6393                           ;LCD.h: 50: CCP1CONbits.CCP1M2 = 0x00;
  6394  003966  94BD               	bcf	189,2,c	;volatile
  6395                           
  6396                           ;LCD.h: 51: CCP1CONbits.CCP1M3 = 0x00;
  6397  003968  96BD               	bcf	189,3,c	;volatile
  6398                           
  6399                           ;LCD.h: 53: SSPCON1bits.SSPEN = 0x00;
  6400  00396A  9AC6               	bcf	198,5,c	;volatile
  6401                           
  6402                           ;LCD.h: 54: RCSTA1bits.SPEN = 0x00;
  6403  00396C  9EAB               	bcf	171,7,c	;volatile
  6404                           
  6405                           ;LCD.h: 55: RCSTA2bits.SPEN2 = 0x00;
  6406  00396E  9E6B               	bcf	107,7,c	;volatile
  6407                           
  6408                           ;LCD.h: 57: T1CONbits.T1OSCEN = 0x00;
  6409  003970  96CD               	bcf	205,3,c	;volatile
  6410                           
  6411                           ;LCD.h: 59: TRISJ0 = 0x00;
  6412  003972  909A               	bcf	3994,0,c	;volatile
  6413                           
  6414                           ;LCD.h: 60: TRISJ1 = 0x00;
  6415  003974  929A               	bcf	3994,1,c	;volatile
  6416                           
  6417                           ;LCD.h: 61: TRISB3 = 0x00;
  6418  003976  9693               	bcf	3987,3,c	;volatile
  6419                           
  6420                           ;LCD.h: 63: TRISC0 = 0x00;
  6421  003978  9094               	bcf	3988,0,c	;volatile
  6422                           
  6423                           ;LCD.h: 64: TRISC1 = 0x00;
  6424  00397A  9294               	bcf	3988,1,c	;volatile
  6425                           
  6426                           ;LCD.h: 65: TRISC2 = 0x00;
  6427  00397C  9494               	bcf	3988,2,c	;volatile
  6428                           
  6429                           ;LCD.h: 66: TRISC3 = 0x00;
  6430  00397E  9694               	bcf	3988,3,c	;volatile
  6431  003980  0012               	return		;funcret
  6432  003982                     __end_of_LCD_SETUP_4BIT:
  6433                           	callstack 0
  6434                           
  6435 ;; *************** function _LCD_INITIALIZE_4BIT *****************
  6436 ;; Defined at:
  6437 ;;		line 159 in file "LCD.h"
  6438 ;; Parameters:    Size  Location     Type
  6439 ;;		None
  6440 ;; Auto vars:     Size  Location     Type
  6441 ;;		None
  6442 ;; Return value:  Size  Location     Type
  6443 ;;                  1    wreg      void 
  6444 ;; Registers used:
  6445 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6446 ;; Tracked objects:
  6447 ;;		On entry : 0/0
  6448 ;;		On exit  : 0/0
  6449 ;;		Unchanged: 0/0
  6450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6454 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6455 ;;Total ram usage:        0 bytes
  6456 ;; Hardware stack levels used: 1
  6457 ;; Hardware stack levels required when called: 2
  6458 ;; This function calls:
  6459 ;;		_LCD_INSTRUCTION_4BIT
  6460 ;; This function is called by:
  6461 ;;		_main
  6462 ;; This function uses a non-reentrant model
  6463 ;;
  6464                           
  6465                           	psect	text24
  6466  0039A8                     __ptext24:
  6467                           	callstack 0
  6468  0039A8                     _LCD_INITIALIZE_4BIT:
  6469                           	callstack 28
  6470  0039A8                     
  6471                           ;LCD.h: 160: LCD_INSTRUCTION_4BIT(0x02);
  6472  0039A8  0E02               	movlw	2
  6473  0039AA  EC37  F016         	call	_LCD_INSTRUCTION_4BIT
  6474                           
  6475                           ;LCD.h: 161: LCD_INSTRUCTION_4BIT(0x28);
  6476  0039AE  0E28               	movlw	40
  6477  0039B0  EC37  F016         	call	_LCD_INSTRUCTION_4BIT
  6478                           
  6479                           ;LCD.h: 162: LCD_INSTRUCTION_4BIT(0x0c);
  6480  0039B4  0E0C               	movlw	12
  6481  0039B6  EC37  F016         	call	_LCD_INSTRUCTION_4BIT
  6482                           
  6483                           ;LCD.h: 163: LCD_INSTRUCTION_4BIT(0x06);
  6484  0039BA  0E06               	movlw	6
  6485  0039BC  EC37  F016         	call	_LCD_INSTRUCTION_4BIT
  6486                           
  6487                           ;LCD.h: 164: LCD_INSTRUCTION_4BIT(0x01);
  6488  0039C0  0E01               	movlw	1
  6489  0039C2  EC37  F016         	call	_LCD_INSTRUCTION_4BIT
  6490  0039C6  0012               	return		;funcret
  6491  0039C8                     __end_of_LCD_INITIALIZE_4BIT:
  6492                           	callstack 0
  6493                           
  6494 ;; *************** function _LCD_DISPLAY *****************
  6495 ;; Defined at:
  6496 ;;		line 169 in file "LCD.h"
  6497 ;; Parameters:    Size  Location     Type
  6498 ;;  string          2   22[COMRAM] PTR const unsigned char 
  6499 ;;		 -> STR_7(11), STR_6(11), STR_5(12), STR_4(11), 
  6500 ;;		 -> STR_3(11), main@s(20), STR_1(13), 
  6501 ;; Auto vars:     Size  Location     Type
  6502 ;;  x               2   28[COMRAM] int 
  6503 ;;  length          2   26[COMRAM] unsigned int 
  6504 ;; Return value:  Size  Location     Type
  6505 ;;                  1    wreg      void 
  6506 ;; Registers used:
  6507 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6508 ;; Tracked objects:
  6509 ;;		On entry : 0/0
  6510 ;;		On exit  : 0/0
  6511 ;;		Unchanged: 0/0
  6512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6513 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6514 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6515 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6516 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6517 ;;Total ram usage:        8 bytes
  6518 ;; Hardware stack levels used: 1
  6519 ;; Hardware stack levels required when called: 2
  6520 ;; This function calls:
  6521 ;;		_LCD_DATA
  6522 ;;		_strlen
  6523 ;; This function is called by:
  6524 ;;		_main
  6525 ;; This function uses a non-reentrant model
  6526 ;;
  6527                           
  6528                           	psect	text25
  6529  00370C                     __ptext25:
  6530                           	callstack 0
  6531  00370C                     _LCD_DISPLAY:
  6532                           	callstack 28
  6533  00370C                     
  6534                           ;LCD.h: 170: unsigned int length = strlen(string);
  6535  00370C  C017  F001         	movff	LCD_DISPLAY@string,strlen@s
  6536  003710  C018  F002         	movff	LCD_DISPLAY@string+1,strlen@s+1
  6537  003714  EC2D  F01C         	call	_strlen	;wreg free
  6538  003718  C001  F01B         	movff	?_strlen,LCD_DISPLAY@length
  6539  00371C  C002  F01C         	movff	?_strlen+1,LCD_DISPLAY@length+1
  6540  003720                     
  6541                           ;LCD.h: 171: signed int x;;LCD.h: 172: for(x = 0x00 ; x < length ; x-=-0x01){
  6542  003720  0E00               	movlw	0
  6543  003722  6E1E               	movwf	(LCD_DISPLAY@x+1)^0,c
  6544  003724  0E00               	movlw	0
  6545  003726  6E1D               	movwf	LCD_DISPLAY@x^0,c
  6546  003728  EFB5  F01B         	goto	l3221
  6547  00372C                     l3217:
  6548                           
  6549                           ;LCD.h: 173: LCD_DATA(string[x],0x04);
  6550  00372C  0E00               	movlw	0
  6551  00372E  6E02               	movwf	(LCD_DATA@mode+1)^0,c
  6552  003730  0E04               	movlw	4
  6553  003732  6E01               	movwf	LCD_DATA@mode^0,c
  6554  003734  501D               	movf	LCD_DISPLAY@x^0,w,c
  6555  003736  2417               	addwf	LCD_DISPLAY@string^0,w,c
  6556  003738  6E19               	movwf	??_LCD_DISPLAY^0,c
  6557  00373A  501E               	movf	(LCD_DISPLAY@x+1)^0,w,c
  6558  00373C  2018               	addwfc	(LCD_DISPLAY@string+1)^0,w,c
  6559  00373E  6E1A               	movwf	(??_LCD_DISPLAY+1)^0,c
  6560  003740  C019  FFF6         	movff	??_LCD_DISPLAY,tblptrl
  6561  003744  C01A  FFF7         	movff	??_LCD_DISPLAY+1,tblptrh
  6562  003748  0E00               	movlw	low (__smallconst shr (0+16))
  6563  00374A  6EF8               	movwf	tblptru,c
  6564  00374C  0E0E               	movlw	(high __ramtop+-1)
  6565  00374E  64F7               	cpfsgt	tblptrh,c
  6566  003750  D003               	bra	u3687
  6567  003752  0008               	tblrd		*
  6568  003754  50F5               	movf	tablat,w,c
  6569  003756  D005               	bra	u3680
  6570  003758                     u3687:
  6571  003758  CFF6 FFD9          	movff	tblptrl,fsr2l
  6572  00375C  CFF7 FFDA          	movff	tblptrh,fsr2h
  6573  003760  50DF               	movf	indf2,w,c
  6574  003762                     u3680:
  6575  003762  EC6A  F015         	call	_LCD_DATA
  6576  003766  4A1D               	infsnz	LCD_DISPLAY@x^0,f,c
  6577  003768  2A1E               	incf	(LCD_DISPLAY@x+1)^0,f,c
  6578  00376A                     l3221:
  6579  00376A  501B               	movf	LCD_DISPLAY@length^0,w,c
  6580  00376C  5C1D               	subwf	LCD_DISPLAY@x^0,w,c
  6581  00376E  501C               	movf	(LCD_DISPLAY@length+1)^0,w,c
  6582  003770  581E               	subwfb	(LCD_DISPLAY@x+1)^0,w,c
  6583  003772  A0D8               	btfss	status,0,c
  6584  003774  EFBE  F01B         	goto	u3691
  6585  003778  EFC0  F01B         	goto	u3690
  6586  00377C                     u3691:
  6587  00377C  EF96  F01B         	goto	l3217
  6588  003780                     u3690:
  6589  003780  0012               	return		;funcret
  6590  003782                     __end_of_LCD_DISPLAY:
  6591                           	callstack 0
  6592                           
  6593 ;; *************** function _strlen *****************
  6594 ;; Defined at:
  6595 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\strlen.c"
  6596 ;; Parameters:    Size  Location     Type
  6597 ;;  s               2    0[COMRAM] PTR const unsigned char 
  6598 ;;		 -> STR_7(11), STR_6(11), STR_5(12), STR_4(11), 
  6599 ;;		 -> STR_3(11), main@s(20), STR_1(13), 
  6600 ;; Auto vars:     Size  Location     Type
  6601 ;;  cp              2    2[COMRAM] PTR const unsigned char 
  6602 ;;		 -> STR_7(11), STR_6(11), STR_5(12), STR_4(11), 
  6603 ;;		 -> STR_3(11), main@s(20), STR_1(13), 
  6604 ;; Return value:  Size  Location     Type
  6605 ;;                  2    0[COMRAM] unsigned int 
  6606 ;; Registers used:
  6607 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6608 ;; Tracked objects:
  6609 ;;		On entry : 0/0
  6610 ;;		On exit  : 0/0
  6611 ;;		Unchanged: 0/0
  6612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6613 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6614 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6616 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6617 ;;Total ram usage:        4 bytes
  6618 ;; Hardware stack levels used: 1
  6619 ;; Hardware stack levels required when called: 1
  6620 ;; This function calls:
  6621 ;;		Nothing
  6622 ;; This function is called by:
  6623 ;;		_LCD_DISPLAY
  6624 ;; This function uses a non-reentrant model
  6625 ;;
  6626                           
  6627                           	psect	text26
  6628  00385A                     __ptext26:
  6629                           	callstack 0
  6630  00385A                     _strlen:
  6631                           	callstack 28
  6632  00385A  C001  F003         	movff	strlen@s,strlen@cp
  6633  00385E  C002  F004         	movff	strlen@s+1,strlen@cp+1
  6634  003862  EF35  F01C         	goto	l2833
  6635  003866                     l2831:
  6636  003866  4A03               	infsnz	strlen@cp^0,f,c
  6637  003868  2A04               	incf	(strlen@cp+1)^0,f,c
  6638  00386A                     l2833:
  6639  00386A  C003  FFF6         	movff	strlen@cp,tblptrl
  6640  00386E  C004  FFF7         	movff	strlen@cp+1,tblptrh
  6641  003872  0E00               	movlw	low (__smallconst shr (0+16))
  6642  003874  6EF8               	movwf	tblptru,c
  6643  003876  0E0E               	movlw	(high __ramtop+-1)
  6644  003878  64F7               	cpfsgt	tblptrh,c
  6645  00387A  D003               	bra	u3097
  6646  00387C  0008               	tblrd		*
  6647  00387E  50F5               	movf	tablat,w,c
  6648  003880  D005               	bra	u3090
  6649  003882                     u3097:
  6650  003882  CFF6 FFD9          	movff	tblptrl,fsr2l
  6651  003886  CFF7 FFDA          	movff	tblptrh,fsr2h
  6652  00388A  50DF               	movf	indf2,w,c
  6653  00388C                     u3090:
  6654  00388C  0900               	iorlw	0
  6655  00388E  A4D8               	btfss	status,2,c
  6656  003890  EF4C  F01C         	goto	u3101
  6657  003894  EF4E  F01C         	goto	u3100
  6658  003898                     u3101:
  6659  003898  EF33  F01C         	goto	l2831
  6660  00389C                     u3100:
  6661  00389C  5001               	movf	strlen@s^0,w,c
  6662  00389E  5C03               	subwf	strlen@cp^0,w,c
  6663  0038A0  6E01               	movwf	?_strlen^0,c
  6664  0038A2  5002               	movf	(strlen@s+1)^0,w,c
  6665  0038A4  5804               	subwfb	(strlen@cp+1)^0,w,c
  6666  0038A6  6E02               	movwf	(?_strlen+1)^0,c
  6667  0038A8  0012               	return		;funcret
  6668  0038AA                     __end_of_strlen:
  6669                           	callstack 0
  6670                           
  6671 ;; *************** function _LCD_DATA *****************
  6672 ;; Defined at:
  6673 ;;		line 71 in file "LCD.h"
  6674 ;; Parameters:    Size  Location     Type
  6675 ;;  data            1    wreg     unsigned char 
  6676 ;;  mode            2    0[COMRAM] int 
  6677 ;; Auto vars:     Size  Location     Type
  6678 ;;  data            1    8[COMRAM] unsigned char 
  6679 ;;  x               2   20[COMRAM] int 
  6680 ;;  x               2   18[COMRAM] int 
  6681 ;;  _4bit_          8    9[COMRAM] unsigned int [4]
  6682 ;;  _data           1   17[COMRAM] unsigned char 
  6683 ;; Return value:  Size  Location     Type
  6684 ;;                  1    wreg      void 
  6685 ;; Registers used:
  6686 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6687 ;; Tracked objects:
  6688 ;;		On entry : 0/0
  6689 ;;		On exit  : 0/0
  6690 ;;		Unchanged: 0/0
  6691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6692 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6693 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6694 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6695 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6696 ;;Total ram usage:       22 bytes
  6697 ;; Hardware stack levels used: 1
  6698 ;; Hardware stack levels required when called: 1
  6699 ;; This function calls:
  6700 ;;		Nothing
  6701 ;; This function is called by:
  6702 ;;		_LCD_DISPLAY
  6703 ;;		_LCD_DISPLAY_DIGIT
  6704 ;; This function uses a non-reentrant model
  6705 ;;
  6706                           
  6707                           	psect	text27
  6708  002AD4                     __ptext27:
  6709                           	callstack 0
  6710  002AD4                     _LCD_DATA:
  6711                           	callstack 28
  6712                           
  6713                           ;incstack = 0
  6714                           ;LCD_DATA@data stored from wreg
  6715  002AD4  6E09               	movwf	LCD_DATA@data^0,c
  6716  002AD6                     
  6717                           ;LCD.h: 72: unsigned char _data = data;
  6718  002AD6  C009  F012         	movff	LCD_DATA@data,LCD_DATA@_data
  6719  002ADA                     
  6720                           ;LCD.h: 73: unsigned int _4bit_[0x04];;LCD.h: 74: if(mode == 0x04){
  6721  002ADA  0E04               	movlw	4
  6722  002ADC  1801               	xorwf	LCD_DATA@mode^0,w,c
  6723  002ADE  1002               	iorwf	(LCD_DATA@mode+1)^0,w,c
  6724  002AE0  A4D8               	btfss	status,2,c
  6725  002AE2  EF75  F015         	goto	u2801
  6726  002AE6  EF77  F015         	goto	u2800
  6727  002AEA                     u2801:
  6728  002AEA  EF36  F016         	goto	l63
  6729  002AEE                     u2800:
  6730  002AEE                     
  6731                           ;LCD.h: 75: _data = _data>>0x04;
  6732  002AEE  3812               	swapf	LCD_DATA@_data^0,w,c
  6733  002AF0  0B0F               	andlw	15
  6734  002AF2  6E12               	movwf	LCD_DATA@_data^0,c
  6735  002AF4                     
  6736                           ;LCD.h: 76: for(int x =0x00; x < 0x04; x-=-0x01){
  6737  002AF4  0E00               	movlw	0
  6738  002AF6  6E14               	movwf	(LCD_DATA@x+1)^0,c
  6739  002AF8  0E00               	movlw	0
  6740  002AFA  6E13               	movwf	LCD_DATA@x^0,c
  6741  002AFC                     l2763:
  6742                           
  6743                           ;LCD.h: 77: _4bit_[x] = (_data & (0x01<<x))>>x;
  6744  002AFC  C013  F003         	movff	LCD_DATA@x,??_LCD_DATA
  6745  002B00  C013  F004         	movff	LCD_DATA@x,??_LCD_DATA+1
  6746  002B04  0E01               	movlw	1
  6747  002B06  6E05               	movwf	(??_LCD_DATA+2)^0,c
  6748  002B08  2A04               	incf	(??_LCD_DATA+1)^0,f,c
  6749  002B0A  EF89  F015         	goto	u2814
  6750  002B0E                     u2815:
  6751  002B0E  90D8               	bcf	status,0,c
  6752  002B10  3605               	rlcf	(??_LCD_DATA+2)^0,f,c
  6753  002B12                     u2814:
  6754  002B12  2E04               	decfsz	(??_LCD_DATA+1)^0,f,c
  6755  002B14  EF87  F015         	goto	u2815
  6756  002B18  5005               	movf	(??_LCD_DATA+2)^0,w,c
  6757  002B1A  1412               	andwf	LCD_DATA@_data^0,w,c
  6758  002B1C  6E06               	movwf	(??_LCD_DATA+3)^0,c
  6759  002B1E  2A03               	incf	??_LCD_DATA^0,f,c
  6760  002B20  EF94  F015         	goto	u2824
  6761  002B24                     u2825:
  6762  002B24  90D8               	bcf	status,0,c
  6763  002B26  3206               	rrcf	(??_LCD_DATA+3)^0,f,c
  6764  002B28                     u2824:
  6765  002B28  2E03               	decfsz	??_LCD_DATA^0,f,c
  6766  002B2A  EF92  F015         	goto	u2825
  6767  002B2E  5006               	movf	(??_LCD_DATA+3)^0,w,c
  6768  002B30  6E07               	movwf	(??_LCD_DATA+4)^0,c
  6769  002B32  6A08               	clrf	(??_LCD_DATA+5)^0,c
  6770  002B34  90D8               	bcf	status,0,c
  6771  002B36  3413               	rlcf	LCD_DATA@x^0,w,c
  6772  002B38  6ED9               	movwf	fsr2l,c
  6773  002B3A  3414               	rlcf	(LCD_DATA@x+1)^0,w,c
  6774  002B3C  6EDA               	movwf	fsr2h,c
  6775  002B3E  0E0A               	movlw	low LCD_DATA@_4bit_
  6776  002B40  26D9               	addwf	fsr2l,f,c
  6777  002B42  0E00               	movlw	high LCD_DATA@_4bit_
  6778  002B44  22DA               	addwfc	fsr2h,f,c
  6779  002B46  C007  FFDE         	movff	??_LCD_DATA+4,postinc2
  6780  002B4A  C008  FFDD         	movff	??_LCD_DATA+5,postdec2
  6781  002B4E  4A13               	infsnz	LCD_DATA@x^0,f,c
  6782  002B50  2A14               	incf	(LCD_DATA@x+1)^0,f,c
  6783  002B52  BE14               	btfsc	(LCD_DATA@x+1)^0,7,c
  6784  002B54  EFB5  F015         	goto	u2831
  6785  002B58  5014               	movf	(LCD_DATA@x+1)^0,w,c
  6786  002B5A  E109               	bnz	u2830
  6787  002B5C  0E04               	movlw	4
  6788  002B5E  5C13               	subwf	LCD_DATA@x^0,w,c
  6789  002B60  A0D8               	btfss	status,0,c
  6790  002B62  EFB5  F015         	goto	u2831
  6791  002B66  EFB7  F015         	goto	u2830
  6792  002B6A                     u2831:
  6793  002B6A  EF7E  F015         	goto	l2763
  6794  002B6E                     u2830:
  6795  002B6E                     
  6796                           ;LCD.h: 78: };LCD.h: 79: TRISCbits.RC0 = (char)_4bit_[0x00];
  6797  002B6E  B00A               	btfsc	LCD_DATA@_4bit_^0,0,c
  6798  002B70  D002               	bra	u2845
  6799  002B72  9094               	bcf	148,0,c	;volatile
  6800  002B74  D001               	bra	u2846
  6801  002B76                     u2845:
  6802  002B76  8094               	bsf	148,0,c	;volatile
  6803  002B78                     u2846:
  6804                           
  6805                           ;LCD.h: 80: TRISCbits.RC1 = (char)_4bit_[0x01];
  6806  002B78  B00C               	btfsc	(LCD_DATA@_4bit_+2)^0,0,c
  6807  002B7A  D002               	bra	u2855
  6808  002B7C  9294               	bcf	148,1,c	;volatile
  6809  002B7E  D001               	bra	u2856
  6810  002B80                     u2855:
  6811  002B80  8294               	bsf	148,1,c	;volatile
  6812  002B82                     u2856:
  6813                           
  6814                           ;LCD.h: 81: TRISCbits.RC2 = (char)_4bit_[0x02];
  6815  002B82  B00E               	btfsc	(LCD_DATA@_4bit_+4)^0,0,c
  6816  002B84  D002               	bra	u2865
  6817  002B86  9494               	bcf	148,2,c	;volatile
  6818  002B88  D001               	bra	u2866
  6819  002B8A                     u2865:
  6820  002B8A  8494               	bsf	148,2,c	;volatile
  6821  002B8C                     u2866:
  6822                           
  6823                           ;LCD.h: 82: TRISCbits.RC3 = (char)_4bit_[0x03];
  6824  002B8C  B010               	btfsc	(LCD_DATA@_4bit_+6)^0,0,c
  6825  002B8E  D002               	bra	u2875
  6826  002B90  9694               	bcf	148,3,c	;volatile
  6827  002B92  D001               	bra	u2876
  6828  002B94                     u2875:
  6829  002B94  8694               	bsf	148,3,c	;volatile
  6830  002B96                     u2876:
  6831                           
  6832                           ;LCD.h: 83: PORTJbits.RJ1 = 0x01;
  6833  002B96  8288               	bsf	136,1,c	;volatile
  6834                           
  6835                           ;LCD.h: 84: PORTBbits.RB3 = 0x00;
  6836  002B98  9681               	bcf	129,3,c	;volatile
  6837                           
  6838                           ;LCD.h: 85: PORTJbits.RJ0 = 0x01;
  6839  002B9A  8088               	bsf	136,0,c	;volatile
  6840  002B9C                     
  6841                           ;LCD.h: 86: _delay((unsigned long)((2)*(0x12BFCE0/4000.0)));
  6842  002B9C  0E0D               	movlw	13
  6843  002B9E  6E03               	movwf	??_LCD_DATA^0,c
  6844  002BA0  0EC3               	movlw	195
  6845  002BA2                     u4067:
  6846  002BA2  2EE8               	decfsz	wreg,f,c
  6847  002BA4  D7FE               	bra	u4067
  6848  002BA6  2E03               	decfsz	??_LCD_DATA^0,f,c
  6849  002BA8  D7FC               	bra	u4067
  6850  002BAA  F000               	nop	
  6851  002BAC                     
  6852                           ;LCD.h: 87: PORTJbits.RJ0 = 0x00;
  6853  002BAC  9088               	bcf	136,0,c	;volatile
  6854  002BAE                     
  6855                           ;LCD.h: 89: _data = data;
  6856  002BAE  C009  F012         	movff	LCD_DATA@data,LCD_DATA@_data
  6857  002BB2                     
  6858                           ;LCD.h: 90: for(int x = 0x00; x< 0x04; x-=-0x01){
  6859  002BB2  0E00               	movlw	0
  6860  002BB4  6E16               	movwf	(LCD_DATA@x_851+1)^0,c
  6861  002BB6  0E00               	movlw	0
  6862  002BB8  6E15               	movwf	LCD_DATA@x_851^0,c
  6863  002BBA                     l2781:
  6864                           
  6865                           ;LCD.h: 91: _4bit_[x] = (_data & (0x01<<x))>>x;
  6866  002BBA  C015  F003         	movff	LCD_DATA@x_851,??_LCD_DATA
  6867  002BBE  C015  F004         	movff	LCD_DATA@x_851,??_LCD_DATA+1
  6868  002BC2  0E01               	movlw	1
  6869  002BC4  6E05               	movwf	(??_LCD_DATA+2)^0,c
  6870  002BC6  2A04               	incf	(??_LCD_DATA+1)^0,f,c
  6871  002BC8  EFE8  F015         	goto	u2884
  6872  002BCC                     u2885:
  6873  002BCC  90D8               	bcf	status,0,c
  6874  002BCE  3605               	rlcf	(??_LCD_DATA+2)^0,f,c
  6875  002BD0                     u2884:
  6876  002BD0  2E04               	decfsz	(??_LCD_DATA+1)^0,f,c
  6877  002BD2  EFE6  F015         	goto	u2885
  6878  002BD6  5005               	movf	(??_LCD_DATA+2)^0,w,c
  6879  002BD8  1412               	andwf	LCD_DATA@_data^0,w,c
  6880  002BDA  6E06               	movwf	(??_LCD_DATA+3)^0,c
  6881  002BDC  2A03               	incf	??_LCD_DATA^0,f,c
  6882  002BDE  EFF3  F015         	goto	u2894
  6883  002BE2                     u2895:
  6884  002BE2  90D8               	bcf	status,0,c
  6885  002BE4  3206               	rrcf	(??_LCD_DATA+3)^0,f,c
  6886  002BE6                     u2894:
  6887  002BE6  2E03               	decfsz	??_LCD_DATA^0,f,c
  6888  002BE8  EFF1  F015         	goto	u2895
  6889  002BEC  5006               	movf	(??_LCD_DATA+3)^0,w,c
  6890  002BEE  6E07               	movwf	(??_LCD_DATA+4)^0,c
  6891  002BF0  6A08               	clrf	(??_LCD_DATA+5)^0,c
  6892  002BF2  90D8               	bcf	status,0,c
  6893  002BF4  3415               	rlcf	LCD_DATA@x_851^0,w,c
  6894  002BF6  6ED9               	movwf	fsr2l,c
  6895  002BF8  3416               	rlcf	(LCD_DATA@x_851+1)^0,w,c
  6896  002BFA  6EDA               	movwf	fsr2h,c
  6897  002BFC  0E0A               	movlw	low LCD_DATA@_4bit_
  6898  002BFE  26D9               	addwf	fsr2l,f,c
  6899  002C00  0E00               	movlw	high LCD_DATA@_4bit_
  6900  002C02  22DA               	addwfc	fsr2h,f,c
  6901  002C04  C007  FFDE         	movff	??_LCD_DATA+4,postinc2
  6902  002C08  C008  FFDD         	movff	??_LCD_DATA+5,postdec2
  6903  002C0C  4A15               	infsnz	LCD_DATA@x_851^0,f,c
  6904  002C0E  2A16               	incf	(LCD_DATA@x_851+1)^0,f,c
  6905  002C10  BE16               	btfsc	(LCD_DATA@x_851+1)^0,7,c
  6906  002C12  EF14  F016         	goto	u2901
  6907  002C16  5016               	movf	(LCD_DATA@x_851+1)^0,w,c
  6908  002C18  E109               	bnz	u2900
  6909  002C1A  0E04               	movlw	4
  6910  002C1C  5C15               	subwf	LCD_DATA@x_851^0,w,c
  6911  002C1E  A0D8               	btfss	status,0,c
  6912  002C20  EF14  F016         	goto	u2901
  6913  002C24  EF16  F016         	goto	u2900
  6914  002C28                     u2901:
  6915  002C28  EFDD  F015         	goto	l2781
  6916  002C2C                     u2900:
  6917  002C2C                     
  6918                           ;LCD.h: 92: };LCD.h: 93: TRISCbits.RC0 = (char)_4bit_[0x00];
  6919  002C2C  B00A               	btfsc	LCD_DATA@_4bit_^0,0,c
  6920  002C2E  D002               	bra	u2915
  6921  002C30  9094               	bcf	148,0,c	;volatile
  6922  002C32  D001               	bra	u2916
  6923  002C34                     u2915:
  6924  002C34  8094               	bsf	148,0,c	;volatile
  6925  002C36                     u2916:
  6926                           
  6927                           ;LCD.h: 94: TRISCbits.RC1 = (char)_4bit_[0x01];
  6928  002C36  B00C               	btfsc	(LCD_DATA@_4bit_+2)^0,0,c
  6929  002C38  D002               	bra	u2925
  6930  002C3A  9294               	bcf	148,1,c	;volatile
  6931  002C3C  D001               	bra	u2926
  6932  002C3E                     u2925:
  6933  002C3E  8294               	bsf	148,1,c	;volatile
  6934  002C40                     u2926:
  6935                           
  6936                           ;LCD.h: 95: TRISCbits.RC2 = (char)_4bit_[0x02];
  6937  002C40  B00E               	btfsc	(LCD_DATA@_4bit_+4)^0,0,c
  6938  002C42  D002               	bra	u2935
  6939  002C44  9494               	bcf	148,2,c	;volatile
  6940  002C46  D001               	bra	u2936
  6941  002C48                     u2935:
  6942  002C48  8494               	bsf	148,2,c	;volatile
  6943  002C4A                     u2936:
  6944                           
  6945                           ;LCD.h: 96: TRISCbits.RC3 = (char)_4bit_[0x03];
  6946  002C4A  B010               	btfsc	(LCD_DATA@_4bit_+6)^0,0,c
  6947  002C4C  D002               	bra	u2945
  6948  002C4E  9694               	bcf	148,3,c	;volatile
  6949  002C50  D001               	bra	u2946
  6950  002C52                     u2945:
  6951  002C52  8694               	bsf	148,3,c	;volatile
  6952  002C54                     u2946:
  6953                           
  6954                           ;LCD.h: 97: PORTJbits.RJ1 = 0x01;
  6955  002C54  8288               	bsf	136,1,c	;volatile
  6956                           
  6957                           ;LCD.h: 98: PORTBbits.RB3 = 0x00;
  6958  002C56  9681               	bcf	129,3,c	;volatile
  6959                           
  6960                           ;LCD.h: 99: PORTJbits.RJ0 = 0x01;
  6961  002C58  8088               	bsf	136,0,c	;volatile
  6962  002C5A                     
  6963                           ;LCD.h: 100: _delay((unsigned long)((2)*(0x12BFCE0/4000.0)));
  6964  002C5A  0E0D               	movlw	13
  6965  002C5C  6E03               	movwf	??_LCD_DATA^0,c
  6966  002C5E  0EC3               	movlw	195
  6967  002C60                     u4077:
  6968  002C60  2EE8               	decfsz	wreg,f,c
  6969  002C62  D7FE               	bra	u4077
  6970  002C64  2E03               	decfsz	??_LCD_DATA^0,f,c
  6971  002C66  D7FC               	bra	u4077
  6972  002C68  F000               	nop	
  6973  002C6A                     
  6974                           ;LCD.h: 101: PORTJbits.RJ0 = 0x00;
  6975  002C6A  9088               	bcf	136,0,c	;volatile
  6976  002C6C                     l63:
  6977  002C6C  0012               	return		;funcret
  6978  002C6E                     __end_of_LCD_DATA:
  6979                           	callstack 0
  6980                           
  6981 ;; *************** function _LCD_20_LINE4 *****************
  6982 ;; Defined at:
  6983 ;;		line 187 in file "LCD.h"
  6984 ;; Parameters:    Size  Location     Type
  6985 ;;		None
  6986 ;; Auto vars:     Size  Location     Type
  6987 ;;		None
  6988 ;; Return value:  Size  Location     Type
  6989 ;;                  1    wreg      void 
  6990 ;; Registers used:
  6991 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6992 ;; Tracked objects:
  6993 ;;		On entry : 0/0
  6994 ;;		On exit  : 0/0
  6995 ;;		Unchanged: 0/0
  6996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7001 ;;Total ram usage:        0 bytes
  7002 ;; Hardware stack levels used: 1
  7003 ;; Hardware stack levels required when called: 2
  7004 ;; This function calls:
  7005 ;;		_LCD_INSTRUCTION_4BIT
  7006 ;; This function is called by:
  7007 ;;		_main
  7008 ;; This function uses a non-reentrant model
  7009 ;;
  7010                           
  7011                           	psect	text28
  7012  0039F2                     __ptext28:
  7013                           	callstack 0
  7014  0039F2                     _LCD_20_LINE4:
  7015                           	callstack 28
  7016  0039F2  0ED4               	movlw	212
  7017  0039F4  EC37  F016         	call	_LCD_INSTRUCTION_4BIT
  7018  0039F8  0012               	return		;funcret
  7019  0039FA                     __end_of_LCD_20_LINE4:
  7020                           	callstack 0
  7021                           
  7022 ;; *************** function _LCD_20_LINE3 *****************
  7023 ;; Defined at:
  7024 ;;		line 186 in file "LCD.h"
  7025 ;; Parameters:    Size  Location     Type
  7026 ;;		None
  7027 ;; Auto vars:     Size  Location     Type
  7028 ;;		None
  7029 ;; Return value:  Size  Location     Type
  7030 ;;                  1    wreg      void 
  7031 ;; Registers used:
  7032 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7033 ;; Tracked objects:
  7034 ;;		On entry : 0/0
  7035 ;;		On exit  : 0/0
  7036 ;;		Unchanged: 0/0
  7037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7041 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7042 ;;Total ram usage:        0 bytes
  7043 ;; Hardware stack levels used: 1
  7044 ;; Hardware stack levels required when called: 2
  7045 ;; This function calls:
  7046 ;;		_LCD_INSTRUCTION_4BIT
  7047 ;; This function is called by:
  7048 ;;		_main
  7049 ;; This function uses a non-reentrant model
  7050 ;;
  7051                           
  7052                           	psect	text29
  7053  0039FA                     __ptext29:
  7054                           	callstack 0
  7055  0039FA                     _LCD_20_LINE3:
  7056                           	callstack 28
  7057  0039FA  0E94               	movlw	148
  7058  0039FC  EC37  F016         	call	_LCD_INSTRUCTION_4BIT
  7059  003A00  0012               	return		;funcret
  7060  003A02                     __end_of_LCD_20_LINE3:
  7061                           	callstack 0
  7062                           
  7063 ;; *************** function _LCD_20_LINE2 *****************
  7064 ;; Defined at:
  7065 ;;		line 185 in file "LCD.h"
  7066 ;; Parameters:    Size  Location     Type
  7067 ;;		None
  7068 ;; Auto vars:     Size  Location     Type
  7069 ;;		None
  7070 ;; Return value:  Size  Location     Type
  7071 ;;                  1    wreg      void 
  7072 ;; Registers used:
  7073 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7074 ;; Tracked objects:
  7075 ;;		On entry : 0/0
  7076 ;;		On exit  : 0/0
  7077 ;;		Unchanged: 0/0
  7078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7082 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7083 ;;Total ram usage:        0 bytes
  7084 ;; Hardware stack levels used: 1
  7085 ;; Hardware stack levels required when called: 2
  7086 ;; This function calls:
  7087 ;;		_LCD_INSTRUCTION_4BIT
  7088 ;; This function is called by:
  7089 ;;		_main
  7090 ;; This function uses a non-reentrant model
  7091 ;;
  7092                           
  7093                           	psect	text30
  7094  003A02                     __ptext30:
  7095                           	callstack 0
  7096  003A02                     _LCD_20_LINE2:
  7097                           	callstack 28
  7098  003A02  0EC0               	movlw	192
  7099  003A04  EC37  F016         	call	_LCD_INSTRUCTION_4BIT
  7100  003A08  0012               	return		;funcret
  7101  003A0A                     __end_of_LCD_20_LINE2:
  7102                           	callstack 0
  7103                           
  7104 ;; *************** function _LCD_20_LINE1 *****************
  7105 ;; Defined at:
  7106 ;;		line 184 in file "LCD.h"
  7107 ;; Parameters:    Size  Location     Type
  7108 ;;		None
  7109 ;; Auto vars:     Size  Location     Type
  7110 ;;		None
  7111 ;; Return value:  Size  Location     Type
  7112 ;;                  1    wreg      void 
  7113 ;; Registers used:
  7114 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7115 ;; Tracked objects:
  7116 ;;		On entry : 0/0
  7117 ;;		On exit  : 0/0
  7118 ;;		Unchanged: 0/0
  7119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7123 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7124 ;;Total ram usage:        0 bytes
  7125 ;; Hardware stack levels used: 1
  7126 ;; Hardware stack levels required when called: 2
  7127 ;; This function calls:
  7128 ;;		_LCD_INSTRUCTION_4BIT
  7129 ;; This function is called by:
  7130 ;;		_main
  7131 ;; This function uses a non-reentrant model
  7132 ;;
  7133                           
  7134                           	psect	text31
  7135  003A0A                     __ptext31:
  7136                           	callstack 0
  7137  003A0A                     _LCD_20_LINE1:
  7138                           	callstack 28
  7139  003A0A  0E80               	movlw	128
  7140  003A0C  EC37  F016         	call	_LCD_INSTRUCTION_4BIT
  7141  003A10  0012               	return		;funcret
  7142  003A12                     __end_of_LCD_20_LINE1:
  7143                           	callstack 0
  7144                           
  7145 ;; *************** function _LCD_INSTRUCTION_4BIT *****************
  7146 ;; Defined at:
  7147 ;;		line 106 in file "LCD.h"
  7148 ;; Parameters:    Size  Location     Type
  7149 ;;  instruction     1    wreg     unsigned char 
  7150 ;; Auto vars:     Size  Location     Type
  7151 ;;  instruction     1    6[COMRAM] unsigned char 
  7152 ;;  x               2   18[COMRAM] int 
  7153 ;;  x               2   16[COMRAM] int 
  7154 ;;  _4bit_          8    7[COMRAM] int [4]
  7155 ;;  data            1   15[COMRAM] unsigned char 
  7156 ;; Return value:  Size  Location     Type
  7157 ;;                  1    wreg      void 
  7158 ;; Registers used:
  7159 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7160 ;; Tracked objects:
  7161 ;;		On entry : 0/0
  7162 ;;		On exit  : 0/0
  7163 ;;		Unchanged: 0/0
  7164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7166 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7167 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7168 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7169 ;;Total ram usage:       20 bytes
  7170 ;; Hardware stack levels used: 1
  7171 ;; Hardware stack levels required when called: 1
  7172 ;; This function calls:
  7173 ;;		Nothing
  7174 ;; This function is called by:
  7175 ;;		_LCD_INITIALIZE_4BIT
  7176 ;;		_LCD_20_LINE1
  7177 ;;		_LCD_20_LINE2
  7178 ;;		_LCD_20_LINE3
  7179 ;;		_LCD_20_LINE4
  7180 ;;		_LCD_SET_CURSOR
  7181 ;;		_LCD_DISPLAY_SHITT_RIGHT
  7182 ;;		_LCD_DISPLAY_SHIFT_LEFT
  7183 ;;		_LCD_CLEAR
  7184 ;;		_LCD_16_LINE1
  7185 ;;		_LCD_16_LINE2
  7186 ;; This function uses a non-reentrant model
  7187 ;;
  7188                           
  7189                           	psect	text32
  7190  002C6E                     __ptext32:
  7191                           	callstack 0
  7192  002C6E                     _LCD_INSTRUCTION_4BIT:
  7193                           	callstack 28
  7194                           
  7195                           ;incstack = 0
  7196                           ;LCD_INSTRUCTION_4BIT@instruction stored from wreg
  7197  002C6E  6E07               	movwf	LCD_INSTRUCTION_4BIT@instruction^0,c
  7198  002C70                     
  7199                           ;LCD.h: 107: int _4bit_[0x04];;LCD.h: 108: unsigned char data = instruction;
  7200  002C70  C007  F010         	movff	LCD_INSTRUCTION_4BIT@instruction,LCD_INSTRUCTION_4BIT@data
  7201  002C74                     
  7202                           ;LCD.h: 109: data = data>>0x04;
  7203  002C74  3810               	swapf	LCD_INSTRUCTION_4BIT@data^0,w,c
  7204  002C76  0B0F               	andlw	15
  7205  002C78  6E10               	movwf	LCD_INSTRUCTION_4BIT@data^0,c
  7206  002C7A                     
  7207                           ;LCD.h: 110: for(int x =0x00; x < 0x04; x-=-0x01){
  7208  002C7A  0E00               	movlw	0
  7209  002C7C  6E12               	movwf	(LCD_INSTRUCTION_4BIT@x+1)^0,c
  7210  002C7E  0E00               	movlw	0
  7211  002C80  6E11               	movwf	LCD_INSTRUCTION_4BIT@x^0,c
  7212  002C82                     l2801:
  7213                           
  7214                           ;LCD.h: 111: _4bit_[x] = (data & (0x01<<x))>>x;
  7215  002C82  C011  F001         	movff	LCD_INSTRUCTION_4BIT@x,??_LCD_INSTRUCTION_4BIT
  7216  002C86  C011  F002         	movff	LCD_INSTRUCTION_4BIT@x,??_LCD_INSTRUCTION_4BIT+1
  7217  002C8A  0E01               	movlw	1
  7218  002C8C  6E03               	movwf	(??_LCD_INSTRUCTION_4BIT+2)^0,c
  7219  002C8E  2A02               	incf	(??_LCD_INSTRUCTION_4BIT+1)^0,f,c
  7220  002C90  EF4C  F016         	goto	u2954
  7221  002C94                     u2955:
  7222  002C94  90D8               	bcf	status,0,c
  7223  002C96  3603               	rlcf	(??_LCD_INSTRUCTION_4BIT+2)^0,f,c
  7224  002C98                     u2954:
  7225  002C98  2E02               	decfsz	(??_LCD_INSTRUCTION_4BIT+1)^0,f,c
  7226  002C9A  EF4A  F016         	goto	u2955
  7227  002C9E  5003               	movf	(??_LCD_INSTRUCTION_4BIT+2)^0,w,c
  7228  002CA0  1410               	andwf	LCD_INSTRUCTION_4BIT@data^0,w,c
  7229  002CA2  6E04               	movwf	(??_LCD_INSTRUCTION_4BIT+3)^0,c
  7230  002CA4  2A01               	incf	??_LCD_INSTRUCTION_4BIT^0,f,c
  7231  002CA6  EF57  F016         	goto	u2964
  7232  002CAA                     u2965:
  7233  002CAA  90D8               	bcf	status,0,c
  7234  002CAC  3204               	rrcf	(??_LCD_INSTRUCTION_4BIT+3)^0,f,c
  7235  002CAE                     u2964:
  7236  002CAE  2E01               	decfsz	??_LCD_INSTRUCTION_4BIT^0,f,c
  7237  002CB0  EF55  F016         	goto	u2965
  7238  002CB4  5004               	movf	(??_LCD_INSTRUCTION_4BIT+3)^0,w,c
  7239  002CB6  6E05               	movwf	(??_LCD_INSTRUCTION_4BIT+4)^0,c
  7240  002CB8  6A06               	clrf	(??_LCD_INSTRUCTION_4BIT+5)^0,c
  7241  002CBA  90D8               	bcf	status,0,c
  7242  002CBC  3411               	rlcf	LCD_INSTRUCTION_4BIT@x^0,w,c
  7243  002CBE  6ED9               	movwf	fsr2l,c
  7244  002CC0  3412               	rlcf	(LCD_INSTRUCTION_4BIT@x+1)^0,w,c
  7245  002CC2  6EDA               	movwf	fsr2h,c
  7246  002CC4  0E08               	movlw	low LCD_INSTRUCTION_4BIT@_4bit_
  7247  002CC6  26D9               	addwf	fsr2l,f,c
  7248  002CC8  0E00               	movlw	high LCD_INSTRUCTION_4BIT@_4bit_
  7249  002CCA  22DA               	addwfc	fsr2h,f,c
  7250  002CCC  C005  FFDE         	movff	??_LCD_INSTRUCTION_4BIT+4,postinc2
  7251  002CD0  C006  FFDD         	movff	??_LCD_INSTRUCTION_4BIT+5,postdec2
  7252  002CD4  4A11               	infsnz	LCD_INSTRUCTION_4BIT@x^0,f,c
  7253  002CD6  2A12               	incf	(LCD_INSTRUCTION_4BIT@x+1)^0,f,c
  7254  002CD8  BE12               	btfsc	(LCD_INSTRUCTION_4BIT@x+1)^0,7,c
  7255  002CDA  EF78  F016         	goto	u2971
  7256  002CDE  5012               	movf	(LCD_INSTRUCTION_4BIT@x+1)^0,w,c
  7257  002CE0  E109               	bnz	u2970
  7258  002CE2  0E04               	movlw	4
  7259  002CE4  5C11               	subwf	LCD_INSTRUCTION_4BIT@x^0,w,c
  7260  002CE6  A0D8               	btfss	status,0,c
  7261  002CE8  EF78  F016         	goto	u2971
  7262  002CEC  EF7A  F016         	goto	u2970
  7263  002CF0                     u2971:
  7264  002CF0  EF41  F016         	goto	l2801
  7265  002CF4                     u2970:
  7266  002CF4                     
  7267                           ;LCD.h: 112: };LCD.h: 113: TRISCbits.RC0 = (char)_4bit_[0x00];
  7268  002CF4  B008               	btfsc	LCD_INSTRUCTION_4BIT@_4bit_^0,0,c
  7269  002CF6  D002               	bra	u2985
  7270  002CF8  9094               	bcf	148,0,c	;volatile
  7271  002CFA  D001               	bra	u2986
  7272  002CFC                     u2985:
  7273  002CFC  8094               	bsf	148,0,c	;volatile
  7274  002CFE                     u2986:
  7275                           
  7276                           ;LCD.h: 114: TRISCbits.RC1 = (char)_4bit_[0x01];
  7277  002CFE  B00A               	btfsc	(LCD_INSTRUCTION_4BIT@_4bit_+2)^0,0,c
  7278  002D00  D002               	bra	u2995
  7279  002D02  9294               	bcf	148,1,c	;volatile
  7280  002D04  D001               	bra	u2996
  7281  002D06                     u2995:
  7282  002D06  8294               	bsf	148,1,c	;volatile
  7283  002D08                     u2996:
  7284                           
  7285                           ;LCD.h: 115: TRISCbits.RC2 = (char)_4bit_[0x02];
  7286  002D08  B00C               	btfsc	(LCD_INSTRUCTION_4BIT@_4bit_+4)^0,0,c
  7287  002D0A  D002               	bra	u3005
  7288  002D0C  9494               	bcf	148,2,c	;volatile
  7289  002D0E  D001               	bra	u3006
  7290  002D10                     u3005:
  7291  002D10  8494               	bsf	148,2,c	;volatile
  7292  002D12                     u3006:
  7293                           
  7294                           ;LCD.h: 116: TRISCbits.RC3 = (char)_4bit_[0x03];
  7295  002D12  B00E               	btfsc	(LCD_INSTRUCTION_4BIT@_4bit_+6)^0,0,c
  7296  002D14  D002               	bra	u3015
  7297  002D16  9694               	bcf	148,3,c	;volatile
  7298  002D18  D001               	bra	u3016
  7299  002D1A                     u3015:
  7300  002D1A  8694               	bsf	148,3,c	;volatile
  7301  002D1C                     u3016:
  7302                           
  7303                           ;LCD.h: 117: PORTJbits.RJ1 = 0x00;
  7304  002D1C  9288               	bcf	136,1,c	;volatile
  7305                           
  7306                           ;LCD.h: 118: PORTBbits.RB3 = 0x00;
  7307  002D1E  9681               	bcf	129,3,c	;volatile
  7308                           
  7309                           ;LCD.h: 119: PORTJbits.RJ0 = 0x01;
  7310  002D20  8088               	bsf	136,0,c	;volatile
  7311  002D22                     
  7312                           ;LCD.h: 120: _delay((unsigned long)((2)*(0x12BFCE0/4000.0)));
  7313  002D22  0E0D               	movlw	13
  7314  002D24  6E01               	movwf	??_LCD_INSTRUCTION_4BIT^0,c
  7315  002D26  0EC3               	movlw	195
  7316  002D28                     u4087:
  7317  002D28  2EE8               	decfsz	wreg,f,c
  7318  002D2A  D7FE               	bra	u4087
  7319  002D2C  2E01               	decfsz	??_LCD_INSTRUCTION_4BIT^0,f,c
  7320  002D2E  D7FC               	bra	u4087
  7321  002D30  F000               	nop	
  7322  002D32                     
  7323                           ;LCD.h: 121: PORTJbits.RJ0 = 0x00;
  7324  002D32  9088               	bcf	136,0,c	;volatile
  7325  002D34                     
  7326                           ;LCD.h: 123: data = instruction;
  7327  002D34  C007  F010         	movff	LCD_INSTRUCTION_4BIT@instruction,LCD_INSTRUCTION_4BIT@data
  7328  002D38                     
  7329                           ;LCD.h: 124: for(int x = 0x00; x< 0x04; x-=-0x01){
  7330  002D38  0E00               	movlw	0
  7331  002D3A  6E14               	movwf	(LCD_INSTRUCTION_4BIT@x_857+1)^0,c
  7332  002D3C  0E00               	movlw	0
  7333  002D3E  6E13               	movwf	LCD_INSTRUCTION_4BIT@x_857^0,c
  7334  002D40                     l2819:
  7335                           
  7336                           ;LCD.h: 125: _4bit_[x] = (data & (0x01<<x))>>x;
  7337  002D40  C013  F001         	movff	LCD_INSTRUCTION_4BIT@x_857,??_LCD_INSTRUCTION_4BIT
  7338  002D44  C013  F002         	movff	LCD_INSTRUCTION_4BIT@x_857,??_LCD_INSTRUCTION_4BIT+1
  7339  002D48  0E01               	movlw	1
  7340  002D4A  6E03               	movwf	(??_LCD_INSTRUCTION_4BIT+2)^0,c
  7341  002D4C  2A02               	incf	(??_LCD_INSTRUCTION_4BIT+1)^0,f,c
  7342  002D4E  EFAB  F016         	goto	u3024
  7343  002D52                     u3025:
  7344  002D52  90D8               	bcf	status,0,c
  7345  002D54  3603               	rlcf	(??_LCD_INSTRUCTION_4BIT+2)^0,f,c
  7346  002D56                     u3024:
  7347  002D56  2E02               	decfsz	(??_LCD_INSTRUCTION_4BIT+1)^0,f,c
  7348  002D58  EFA9  F016         	goto	u3025
  7349  002D5C  5003               	movf	(??_LCD_INSTRUCTION_4BIT+2)^0,w,c
  7350  002D5E  1410               	andwf	LCD_INSTRUCTION_4BIT@data^0,w,c
  7351  002D60  6E04               	movwf	(??_LCD_INSTRUCTION_4BIT+3)^0,c
  7352  002D62  2A01               	incf	??_LCD_INSTRUCTION_4BIT^0,f,c
  7353  002D64  EFB6  F016         	goto	u3034
  7354  002D68                     u3035:
  7355  002D68  90D8               	bcf	status,0,c
  7356  002D6A  3204               	rrcf	(??_LCD_INSTRUCTION_4BIT+3)^0,f,c
  7357  002D6C                     u3034:
  7358  002D6C  2E01               	decfsz	??_LCD_INSTRUCTION_4BIT^0,f,c
  7359  002D6E  EFB4  F016         	goto	u3035
  7360  002D72  5004               	movf	(??_LCD_INSTRUCTION_4BIT+3)^0,w,c
  7361  002D74  6E05               	movwf	(??_LCD_INSTRUCTION_4BIT+4)^0,c
  7362  002D76  6A06               	clrf	(??_LCD_INSTRUCTION_4BIT+5)^0,c
  7363  002D78  90D8               	bcf	status,0,c
  7364  002D7A  3413               	rlcf	LCD_INSTRUCTION_4BIT@x_857^0,w,c
  7365  002D7C  6ED9               	movwf	fsr2l,c
  7366  002D7E  3414               	rlcf	(LCD_INSTRUCTION_4BIT@x_857+1)^0,w,c
  7367  002D80  6EDA               	movwf	fsr2h,c
  7368  002D82  0E08               	movlw	low LCD_INSTRUCTION_4BIT@_4bit_
  7369  002D84  26D9               	addwf	fsr2l,f,c
  7370  002D86  0E00               	movlw	high LCD_INSTRUCTION_4BIT@_4bit_
  7371  002D88  22DA               	addwfc	fsr2h,f,c
  7372  002D8A  C005  FFDE         	movff	??_LCD_INSTRUCTION_4BIT+4,postinc2
  7373  002D8E  C006  FFDD         	movff	??_LCD_INSTRUCTION_4BIT+5,postdec2
  7374  002D92  4A13               	infsnz	LCD_INSTRUCTION_4BIT@x_857^0,f,c
  7375  002D94  2A14               	incf	(LCD_INSTRUCTION_4BIT@x_857+1)^0,f,c
  7376  002D96  BE14               	btfsc	(LCD_INSTRUCTION_4BIT@x_857+1)^0,7,c
  7377  002D98  EFD7  F016         	goto	u3041
  7378  002D9C  5014               	movf	(LCD_INSTRUCTION_4BIT@x_857+1)^0,w,c
  7379  002D9E  E109               	bnz	u3040
  7380  002DA0  0E04               	movlw	4
  7381  002DA2  5C13               	subwf	LCD_INSTRUCTION_4BIT@x_857^0,w,c
  7382  002DA4  A0D8               	btfss	status,0,c
  7383  002DA6  EFD7  F016         	goto	u3041
  7384  002DAA  EFD9  F016         	goto	u3040
  7385  002DAE                     u3041:
  7386  002DAE  EFA0  F016         	goto	l2819
  7387  002DB2                     u3040:
  7388  002DB2                     
  7389                           ;LCD.h: 126: };LCD.h: 127: TRISCbits.RC0 = (char)_4bit_[0x00];
  7390  002DB2  B008               	btfsc	LCD_INSTRUCTION_4BIT@_4bit_^0,0,c
  7391  002DB4  D002               	bra	u3055
  7392  002DB6  9094               	bcf	148,0,c	;volatile
  7393  002DB8  D001               	bra	u3056
  7394  002DBA                     u3055:
  7395  002DBA  8094               	bsf	148,0,c	;volatile
  7396  002DBC                     u3056:
  7397                           
  7398                           ;LCD.h: 128: TRISCbits.RC1 = (char)_4bit_[0x01];
  7399  002DBC  B00A               	btfsc	(LCD_INSTRUCTION_4BIT@_4bit_+2)^0,0,c
  7400  002DBE  D002               	bra	u3065
  7401  002DC0  9294               	bcf	148,1,c	;volatile
  7402  002DC2  D001               	bra	u3066
  7403  002DC4                     u3065:
  7404  002DC4  8294               	bsf	148,1,c	;volatile
  7405  002DC6                     u3066:
  7406                           
  7407                           ;LCD.h: 129: TRISCbits.RC2 = (char)_4bit_[0x02];
  7408  002DC6  B00C               	btfsc	(LCD_INSTRUCTION_4BIT@_4bit_+4)^0,0,c
  7409  002DC8  D002               	bra	u3075
  7410  002DCA  9494               	bcf	148,2,c	;volatile
  7411  002DCC  D001               	bra	u3076
  7412  002DCE                     u3075:
  7413  002DCE  8494               	bsf	148,2,c	;volatile
  7414  002DD0                     u3076:
  7415                           
  7416                           ;LCD.h: 130: TRISCbits.RC3 = (char)_4bit_[0x03];
  7417  002DD0  B00E               	btfsc	(LCD_INSTRUCTION_4BIT@_4bit_+6)^0,0,c
  7418  002DD2  D002               	bra	u3085
  7419  002DD4  9694               	bcf	148,3,c	;volatile
  7420  002DD6  D001               	bra	u3086
  7421  002DD8                     u3085:
  7422  002DD8  8694               	bsf	148,3,c	;volatile
  7423  002DDA                     u3086:
  7424                           
  7425                           ;LCD.h: 131: PORTJbits.RJ1 = 0x00;
  7426  002DDA  9288               	bcf	136,1,c	;volatile
  7427                           
  7428                           ;LCD.h: 132: PORTBbits.RB3 = 0x00;
  7429  002DDC  9681               	bcf	129,3,c	;volatile
  7430                           
  7431                           ;LCD.h: 133: PORTJbits.RJ0 = 0x01;
  7432  002DDE  8088               	bsf	136,0,c	;volatile
  7433  002DE0                     
  7434                           ;LCD.h: 134: _delay((unsigned long)((2)*(0x12BFCE0/4000.0)));
  7435  002DE0  0E0D               	movlw	13
  7436  002DE2  6E01               	movwf	??_LCD_INSTRUCTION_4BIT^0,c
  7437  002DE4  0EC3               	movlw	195
  7438  002DE6                     u4097:
  7439  002DE6  2EE8               	decfsz	wreg,f,c
  7440  002DE8  D7FE               	bra	u4097
  7441  002DEA  2E01               	decfsz	??_LCD_INSTRUCTION_4BIT^0,f,c
  7442  002DEC  D7FC               	bra	u4097
  7443  002DEE  F000               	nop	
  7444  002DF0                     
  7445                           ;LCD.h: 135: PORTJbits.RJ0 = 0x00;
  7446  002DF0  9088               	bcf	136,0,c	;volatile
  7447  002DF2  0012               	return		;funcret
  7448  002DF4                     __end_of_LCD_INSTRUCTION_4BIT:
  7449                           	callstack 0
  7450                           
  7451 ;; *************** function _ISR *****************
  7452 ;; Defined at:
  7453 ;;		line 135 in file "main.c"
  7454 ;; Parameters:    Size  Location     Type
  7455 ;;		None
  7456 ;; Auto vars:     Size  Location     Type
  7457 ;;		None
  7458 ;; Return value:  Size  Location     Type
  7459 ;;                  1    wreg      void 
  7460 ;; Registers used:
  7461 ;;		wreg, status,2, status,0
  7462 ;; Tracked objects:
  7463 ;;		On entry : 0/0
  7464 ;;		On exit  : 0/0
  7465 ;;		Unchanged: 0/0
  7466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7471 ;;Total ram usage:        0 bytes
  7472 ;; Hardware stack levels used: 1
  7473 ;; This function calls:
  7474 ;;		Nothing
  7475 ;; This function is called by:
  7476 ;;		Interrupt level 2
  7477 ;; This function uses a non-reentrant model
  7478 ;;
  7479                           
  7480                           	psect	intcode
  7481  000008                     __pintcode:
  7482                           	callstack 0
  7483  000008                     _ISR:
  7484                           	callstack 27
  7485                           
  7486                           ;incstack = 0
  7487  000008  825D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  7488  00000A                     
  7489                           ;main.c: 136: if(INTCONbits.TMR0IF == 0x01){
  7490  00000A  A4F2               	btfss	242,2,c	;volatile
  7491  00000C  EF0A  F000         	goto	i2u202_41
  7492  000010  EF0C  F000         	goto	i2u202_40
  7493  000014                     i2u202_41:
  7494  000014  EF13  F000         	goto	i2l2287
  7495  000018                     i2u202_40:
  7496  000018                     
  7497                           ;main.c: 137: TMR0 = 100;
  7498  000018  0E00               	movlw	0
  7499  00001A  6ED7               	movwf	215,c	;volatile
  7500  00001C  0E64               	movlw	100
  7501  00001E  6ED6               	movwf	214,c	;volatile
  7502  000020                     
  7503                           ;main.c: 138: INTCONbits.TMR0IF = 0x00;
  7504  000020  94F2               	bcf	242,2,c	;volatile
  7505  000022                     
  7506                           ;main.c: 139: count -=-0x01;
  7507  000022  4A5B               	infsnz	_count^0,f,c	;volatile
  7508  000024  2A5C               	incf	(_count+1)^0,f,c	;volatile
  7509  000026                     i2l2287:
  7510                           
  7511                           ;main.c: 140: };main.c: 141: if(count == 100){
  7512  000026  0E64               	movlw	100
  7513  000028  185B               	xorwf	_count^0,w,c	;volatile
  7514  00002A  105C               	iorwf	(_count+1)^0,w,c	;volatile
  7515  00002C  A4D8               	btfss	status,2,c
  7516  00002E  EF1B  F000         	goto	i2u203_41
  7517  000032  EF1D  F000         	goto	i2u203_40
  7518  000036                     i2u203_41:
  7519  000036  EF22  F000         	goto	i2l139
  7520  00003A                     i2u203_40:
  7521  00003A                     
  7522                           ;main.c: 142: PORTDbits.RD7 ^=0x01;
  7523  00003A  7E83               	btg	131,7,c	;volatile
  7524  00003C                     
  7525                           ;main.c: 143: count = 0x00;
  7526  00003C  0E00               	movlw	0
  7527  00003E  6E5C               	movwf	(_count+1)^0,c	;volatile
  7528  000040  0E00               	movlw	0
  7529  000042  6E5B               	movwf	_count^0,c	;volatile
  7530  000044                     i2l139:
  7531  000044  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  7532  000046  0011               	retfie		f
  7533  000048                     __end_of_ISR:
  7534                           	callstack 0
  7535                           
  7536                           	psect	rparam
  7537  0000                     
  7538                           	psect	temp
  7539  00005D                     btemp:
  7540                           	callstack 0
  7541  00005D                     	ds	1
  7542  0000                     int$flags	set	btemp
  7543  0000                     wtemp8	set	btemp+1
  7544  0000                     ttemp5	set	btemp+1
  7545  0000                     ttemp6	set	btemp+4
  7546  0000                     ttemp7	set	btemp+8
  7547                           
  7548                           	psect	idloc
  7549                           
  7550                           ;Config register IDLOC0 @ 0x200000
  7551                           ;	unspecified, using default values
  7552  200000                     	org	2097152
  7553  200000  FF                 	db	255
  7554                           
  7555                           ;Config register IDLOC1 @ 0x200001
  7556                           ;	unspecified, using default values
  7557  200001                     	org	2097153
  7558  200001  FF                 	db	255
  7559                           
  7560                           ;Config register IDLOC2 @ 0x200002
  7561                           ;	unspecified, using default values
  7562  200002                     	org	2097154
  7563  200002  FF                 	db	255
  7564                           
  7565                           ;Config register IDLOC3 @ 0x200003
  7566                           ;	unspecified, using default values
  7567  200003                     	org	2097155
  7568  200003  FF                 	db	255
  7569                           
  7570                           ;Config register IDLOC4 @ 0x200004
  7571                           ;	unspecified, using default values
  7572  200004                     	org	2097156
  7573  200004  FF                 	db	255
  7574                           
  7575                           ;Config register IDLOC5 @ 0x200005
  7576                           ;	unspecified, using default values
  7577  200005                     	org	2097157
  7578  200005  FF                 	db	255
  7579                           
  7580                           ;Config register IDLOC6 @ 0x200006
  7581                           ;	unspecified, using default values
  7582  200006                     	org	2097158
  7583  200006  FF                 	db	255
  7584                           
  7585                           ;Config register IDLOC7 @ 0x200007
  7586                           ;	unspecified, using default values
  7587  200007                     	org	2097159
  7588  200007  FF                 	db	255
  7589                           
  7590                           	psect	config
  7591                           
  7592                           ; Padding undefined space
  7593  300000                     	org	3145728
  7594  300000  FF                 	db	255
  7595                           
  7596                           ;Config register CONFIG1H @ 0x300001
  7597                           ;	Oscillator Selection bits
  7598                           ;	OSC = HS, HS oscillator
  7599                           ;	Oscillator System Clock Switch Enable bit
  7600                           ;	OSCS = OFF, Oscillator system clock switch option is disabled (main oscillator is sour
      +                          ce)
  7601  300001                     	org	3145729
  7602  300001  22                 	db	34
  7603                           
  7604                           ;Config register CONFIG2L @ 0x300002
  7605                           ;	Power-up Timer Enable bit
  7606                           ;	PWRT = OFF, PWRT disabled
  7607                           ;	Brown-out Reset Enable bit
  7608                           ;	BOR = OFF, Brown-out Reset disabled
  7609                           ;	Brown-out Reset Voltage bits
  7610                           ;	BORV = 25, VBOR set to 2.5V
  7611  300002                     	org	3145730
  7612  300002  0D                 	db	13
  7613                           
  7614                           ;Config register CONFIG2H @ 0x300003
  7615                           ;	Watchdog Timer Enable bit
  7616                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  7617                           ;	Watchdog Timer Postscale Select bits
  7618                           ;	WDTPS = 128, 1:128
  7619  300003                     	org	3145731
  7620  300003  0E                 	db	14
  7621                           
  7622                           ;Config register CONFIG3L @ 0x300004
  7623                           ;	Processor Mode Select bits
  7624                           ;	MODE = MC, Microcontroller mode
  7625                           ;	External Bus Data Wait Enable bit
  7626                           ;	WAIT = OFF, Wait selections unavailable for table reads and table writes
  7627  300004                     	org	3145732
  7628  300004  83                 	db	131
  7629                           
  7630                           ;Config register CONFIG3H @ 0x300005
  7631                           ;	CCP2 Mux bit
  7632                           ;	CCP2MUX = OFF, CCP2 is multiplexed with RB3 in Extended Microcontroller, Microprocesso
      +                          r or Microprocessor with Boot Block mode. Or with RE7 in Microcontroller mode.
  7633  300005                     	org	3145733
  7634  300005  02                 	db	2
  7635                           
  7636                           ;Config register CONFIG4L @ 0x300006
  7637                           ;	Stack Full/Underflow Reset Enable bit
  7638                           ;	STVR = OFF, Stack full/underflow will not cause Reset
  7639                           ;	Low-Voltage ICSP Enable bit
  7640                           ;	LVP = OFF, Low-voltage ICSP disabled
  7641                           ;	Background Debugger Enable bit
  7642                           ;	DEBUG = 0x1, unprogrammed default
  7643  300006                     	org	3145734
  7644  300006  80                 	db	128
  7645                           
  7646                           ; Padding undefined space
  7647  300007                     	org	3145735
  7648  300007  FF                 	db	255
  7649                           
  7650                           ;Config register CONFIG5L @ 0x300008
  7651                           ;	Code Protection bit
  7652                           ;	CP0 = OFF, Block 0 (000200-003FFFh) not code-protected
  7653                           ;	Code Protection bit
  7654                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  7655                           ;	Code Protection bit
  7656                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  7657                           ;	Code Protection bit
  7658                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  7659                           ;	Code Protection bit
  7660                           ;	CP4 = OFF, Block 4 (010000-013FFFh) not code-protected
  7661                           ;	Code Protection bit
  7662                           ;	CP5 = OFF, Block 5 (014000-017FFFh) not code-protected
  7663                           ;	Code Protection bit
  7664                           ;	CP6 = OFF, Block 6 (018000-01BFFFh) not code-protected
  7665                           ;	Code Protection bit
  7666                           ;	CP7 = OFF, Block 7 (01C000-01FFFFh) not code-protected
  7667  300008                     	org	3145736
  7668  300008  FF                 	db	255
  7669                           
  7670                           ;Config register CONFIG5H @ 0x300009
  7671                           ;	Boot Block Code Protection bit
  7672                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code-protected
  7673                           ;	Data EEPROM Code Protection bit
  7674                           ;	CPD = OFF, Data EEPROM not code-protected
  7675  300009                     	org	3145737
  7676  300009  C0                 	db	192
  7677                           
  7678                           ;Config register CONFIG6L @ 0x30000A
  7679                           ;	Write Protection bit
  7680                           ;	WRT0 = OFF, Block 0 (000200-003FFFh) not write-protected
  7681                           ;	Write Protection bit
  7682                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  7683                           ;	Write Protection bit
  7684                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  7685                           ;	Write Protection bit
  7686                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  7687                           ;	Write Protection bit
  7688                           ;	WRT4 = OFF, Block 4 (010000-013FFFh) not write-protected
  7689                           ;	Write Protection bit
  7690                           ;	WRT5 = OFF, Block 5 (014000-017FFFh) not write-protected
  7691                           ;	Write Protection bit
  7692                           ;	WRT6 = OFF, Block 6 (018000-01BFFFh) not write-protected
  7693                           ;	Write Protection bit
  7694                           ;	WRT7 = OFF, Block 7 (01C000-01FFFFh) not write-protected
  7695  30000A                     	org	3145738
  7696  30000A  FF                 	db	255
  7697                           
  7698                           ;Config register CONFIG6H @ 0x30000B
  7699                           ;	Configuration Register Write Protection bit
  7700                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  7701                           ;	Boot Block Write Protection bit
  7702                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write-protected
  7703                           ;	Data EEPROM Write Protection bit
  7704                           ;	WRTD = OFF, Data EEPROM not write-protected
  7705  30000B                     	org	3145739
  7706  30000B  E0                 	db	224
  7707                           
  7708                           ;Config register CONFIG7L @ 0x30000C
  7709                           ;	Table Read Protection bit
  7710                           ;	EBTR0 = OFF, Block 0 (000200-003FFFh) not protected from table reads executed in other
      +                           blocks
  7711                           ;	Table Read Protection bit
  7712                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  7713                           ;	Table Read Protection bit
  7714                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  7715                           ;	Table Read Protection bit
  7716                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  7717                           ;	Table Read Protection bit
  7718                           ;	EBTR4 = OFF, Block 4 (010000-013FFFh) not protected from table reads executed in other
      +                           blocks
  7719                           ;	Table Read Protection bit
  7720                           ;	EBTR5 = OFF, Block 5 (014000-017FFFh) not protected from table reads executed in other
      +                           blocks
  7721                           ;	Table Read Protection bit
  7722                           ;	EBTR6 = OFF, Block 6 (018000-01BFFFh) not protected from table reads executed in other
      +                           blocks
  7723                           ;	Table Read Protection bit
  7724                           ;	EBTR7 = OFF, Block 7 (01C000-01FFFFh) not protected from table reads executed in other
      +                           blocks
  7725  30000C                     	org	3145740
  7726  30000C  FF                 	db	255
  7727                           
  7728                           ;Config register CONFIG7H @ 0x30000D
  7729                           ;	Boot Block Table Read Protection bit
  7730                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from table reads executed in ot
      +                          her blocks
  7731  30000D                     	org	3145741
  7732  30000D  40                 	db	64
  7733                           tosu	equ	0xFFF
  7734                           tosh	equ	0xFFE
  7735                           tosl	equ	0xFFD
  7736                           stkptr	equ	0xFFC
  7737                           pclatu	equ	0xFFB
  7738                           pclath	equ	0xFFA
  7739                           pcl	equ	0xFF9
  7740                           tblptru	equ	0xFF8
  7741                           tblptrh	equ	0xFF7
  7742                           tblptrl	equ	0xFF6
  7743                           tablat	equ	0xFF5
  7744                           prodh	equ	0xFF4
  7745                           prodl	equ	0xFF3
  7746                           indf0	equ	0xFEF
  7747                           postinc0	equ	0xFEE
  7748                           postdec0	equ	0xFED
  7749                           preinc0	equ	0xFEC
  7750                           plusw0	equ	0xFEB
  7751                           fsr0h	equ	0xFEA
  7752                           fsr0l	equ	0xFE9
  7753                           wreg	equ	0xFE8
  7754                           indf1	equ	0xFE7
  7755                           postinc1	equ	0xFE6
  7756                           postdec1	equ	0xFE5
  7757                           preinc1	equ	0xFE4
  7758                           plusw1	equ	0xFE3
  7759                           fsr1h	equ	0xFE2
  7760                           fsr1l	equ	0xFE1
  7761                           bsr	equ	0xFE0
  7762                           indf2	equ	0xFDF
  7763                           postinc2	equ	0xFDE
  7764                           postdec2	equ	0xFDD
  7765                           preinc2	equ	0xFDC
  7766                           plusw2	equ	0xFDB
  7767                           fsr2h	equ	0xFDA
  7768                           fsr2l	equ	0xFD9
  7769                           status	equ	0xFD8

Data Sizes:
    Strings     78
    Constant    144
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     90      92
    BANK0           160     49      49
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_7(CODE[11]), STR_6(CODE[11]), STR_5(CODE[12]), STR_4(CODE[11]), 
		 -> STR_3(CODE[11]), main@s(BANK0[20]), STR_1(CODE[13]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_7(CODE[11]), STR_6(CODE[11]), STR_5(CODE[12]), STR_4(CODE[11]), 
		 -> STR_3(CODE[11]), main@s(BANK0[20]), STR_1(CODE[13]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_2(CODE[9]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 20
		 -> main@s(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    LCD_DISPLAY@string	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_7(CODE[11]), STR_6(CODE[11]), STR_5(CODE[12]), STR_4(CODE[11]), 
		 -> STR_3(CODE[11]), main@s(BANK0[20]), STR_1(CODE[13]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->___flsub
    _scale->___flmul
    ___awdiv->___awmod
    _fround->___flmul
    ___lwdiv->___lwmod
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _LCD_INITIALIZE_4BIT->_LCD_INSTRUCTION_4BIT
    _LCD_DISPLAY->_LCD_DATA
    _LCD_20_LINE4->_LCD_INSTRUCTION_4BIT
    _LCD_20_LINE3->_LCD_INSTRUCTION_4BIT
    _LCD_20_LINE2->_LCD_INSTRUCTION_4BIT
    _LCD_20_LINE1->_LCD_INSTRUCTION_4BIT

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                26    26      0   36529
                                             88 COMRAM     2     2      0
                                             25 BANK0     24    24      0
                       _LCD_20_LINE1
                       _LCD_20_LINE2
                       _LCD_20_LINE3
                       _LCD_20_LINE4
                        _LCD_DISPLAY
                _LCD_INITIALIZE_4BIT
                     _LCD_SETUP_4BIT
                        _TIMER0_Init
                            ___flsub
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             45    37      8   29143
                                             76 COMRAM    12     4      8
                                              0 BANK0     25    25      0
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                                9     5      4    6735
                                             39 COMRAM     9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1208
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1364
                                              6 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              13     9      4    5198
                                             39 COMRAM    13     9      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     615
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     618
                                              5 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    3720
                                             14 COMRAM    25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         17     9      8     455
                                              0 COMRAM    17     9      8
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          14     6      8     455
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     463
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     615
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     466
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     457
                                             48 COMRAM    10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2889
                                             68 COMRAM     8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    2414
                                             52 COMRAM    16     8      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     638
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _TIMER0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_SETUP_4BIT                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_INITIALIZE_4BIT                                  0     0      0     567
               _LCD_INSTRUCTION_4BIT
 ---------------------------------------------------------------------------------
 (1) _LCD_DISPLAY                                          8     6      2    1552
                                             22 COMRAM     8     6      2
                           _LCD_DATA
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _LCD_DATA                                            22    20      2     741
                                              0 COMRAM    22    20      2
 ---------------------------------------------------------------------------------
 (1) _LCD_20_LINE4                                         0     0      0     567
               _LCD_INSTRUCTION_4BIT
 ---------------------------------------------------------------------------------
 (1) _LCD_20_LINE3                                         0     0      0     567
               _LCD_INSTRUCTION_4BIT
 ---------------------------------------------------------------------------------
 (1) _LCD_20_LINE2                                         0     0      0     567
               _LCD_INSTRUCTION_4BIT
 ---------------------------------------------------------------------------------
 (1) _LCD_20_LINE1                                         0     0      0     567
               _LCD_INSTRUCTION_4BIT
 ---------------------------------------------------------------------------------
 (2) _LCD_INSTRUCTION_4BIT                                20    20      0     567
                                              0 COMRAM    20    20      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_20_LINE1
     _LCD_INSTRUCTION_4BIT
   _LCD_20_LINE2
     _LCD_INSTRUCTION_4BIT
   _LCD_20_LINE3
     _LCD_INSTRUCTION_4BIT
   _LCD_20_LINE4
     _LCD_INSTRUCTION_4BIT
   _LCD_DISPLAY
     _LCD_DATA
     _strlen
   _LCD_INITIALIZE_4BIT
     _LCD_INSTRUCTION_4BIT
   _LCD_SETUP_4BIT
   _TIMER0_Init
   ___flsub
     ___fladd
       _fround (ARG)
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
         ___lwmod
     ___xxtofl (ARG)
   _sprintf
     ___awdiv
     ___fladd
     ___fleq
     ___flge
     ___flmul
     ___flneg
     ___flsub
     ___fltol
       ___flmul (ARG)
       _scale (ARG)
         ___awdiv
         ___awmod
         ___flmul
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
     _isdigit
     _scale

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EFF      0       0      50        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     31      31       5       30.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5A      5C       1       97.9%
BITBIGSFRhhhhhl     1A      0       0      35        0.0%
BITBIGSFRllhlll     15      0       0      47        0.0%
BITBIGSFRllhh       10      0       0      41        0.0%
BITBIGSFRlh          E      0       0      40        0.0%
BITBIGSFRhhhhhh      D      0       0      34        0.0%
BITBIGSFRlll         B      0       0      48        0.0%
BITBIGSFRhhl         8      0       0      38        0.0%
BITBIGSFRhhhhl       7      0       0      36        0.0%
BITBIGSFRllhllh      6      0       0      43        0.0%
BITBIGSFRhhhl        6      0       0      37        0.0%
BITBIGSFRllhlll      4      0       0      45        0.0%
BITBIGSFRllhlh       4      0       0      42        0.0%
BITBIGSFRllhllh      3      0       0      44        0.0%
BITBIGSFRhl          2      0       0      39        0.0%
BITBIGSFRllhlll      1      0       0      46        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      8D      49        0.0%
DATA                 0      0      8D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Nov 08 22:14:06 2022

                             l60 2B6E                               l70 2DF2  
                             l62 2C2C                               l63 2C6C  
                             l55 3980                               l67 2CF4  
                             l91 3780                               l69 2DB2  
                             l85 39C6                     ___awdiv@sign 000C  
            ___wmul@multiplicand 0003                              l100 3A10  
                            l103 3A08                              l106 3A00  
                            l132 39E2                              l109 39F8  
                            l232 191A                              l217 1684  
                            l235 39A6                              l262 3672  
                            l166 222E                              l159 291E  
                            l600 2E8E                              l513 337A  
                            l601 2EC0                              l514 33C0  
                            l507 35DE                              l541 32BC  
                            l269 3682                              l518 3926  
                            l607 2F38                              l802 1C24  
                            l466 3484                              l811 1CF4  
                            l812 1CE2                              l479 3534  
                            l912 2976                              l489 3094  
                            l498 3084                              l827 38EE  
                            l915 2AD2                              l755 37F4  
                            l684 370A                              l748 37EC  
                            l677 36FA                              l765 3858  
                            l933 3958                              l926 2A6A  
                            l598 2F48                              l758 3850  
                            l943 38A8                              l919 2A0E  
                            l871 22F4                              l880 2562  
                            l785 1B0A                              l881 2550  
                            l794 1DDA                              l786 1AF8  
                            l787 1ABE                              l875 2658  
                            l878 24EA                              l888 261A  
                            _ISR 0008                     ___awmod@sign 0006  
                            wreg 000FE8                     ___flmul@aexp 0020  
                   ___flmul@bexp 0021                     ___flmul@sign 001B  
                   ___flmul@temp 0026                     ___flmul@prod 0022  
                           ?_ISR 0001                     ___fltol@exp1 003A  
                           l3001 301A                             l3011 304A  
                           l3003 3028                             l2301 191C  
                           l3021 3074                             l3013 3054  
                           l2311 1958                             l2303 1928  
                           l3111 320C                             l3103 31B8  
                           l3031 35F0                             l3023 3982  
                           l2401 1B18                             l2321 1988  
                           l2313 1968                             l2305 1936  
                           l3113 320E                             l3105 31CE  
                           l3041 3632                             l3033 3606  
                           l3025 399E                             l3201 2AB2  
                           l3009 3040                             l3211 39A8  
                           l2411 1B5A                             l2403 1B28  
                           l2331 19B2                             l2323 199A  
                           l2315 196A                             l2307 1938  
                           l3051 38AA                             l3115 321E  
                           l3043 3650                             l3035 360E  
                           l3203 2AC0                             l3019 3068  
                           l3221 376A                             l3213 370C  
                           l3061 3574                             l2421 1B88  
                           l2413 1B68                             l2333 19C2  
                           l2341 19EC                             l2325 199C  
                           l2309 1948                             l2317 1972  
                           l3053 38BA                             l3141 329C  
                           l3125 3248                             l3117 3222  
                           l3109 31E2                             l3045 3660  
                           l3037 361A                             l3029 35E0  
                           l3205 2AC2                             l3301 11BE  
                           l3223 3A0A                             l3215 3720  
                           l3231 39C8                             l3063 35A2  
                           l2431 1BF4                             l2423 1B92  
                           l2415 1B74                             l2407 1B3C  
                           l2351 1A24                             l2343 19FC  
                           l2335 19D2                             l2327 19A2  
                           l2319 1982                             l3143 32AC  
                           l3135 3270                             l3127 3252  
                           l3119 3230                             l3047 3662  
                           l3039 3628                             l3151 36A2  
                           l2511 225C                             l2503 2230  
                           l3311 121C                             l3303 11CE  
                           l3225 3A02                             l3217 372C  
                           l3209 395A                             l3241 39DC  
                           l3233 39CC                             l3065 35B2  
                           l3057 3536                             l3081 333A  
                           l3073 32BE                             l2433 1C04  
                           l2417 1B78                             l2409 1B4C  
                           l2425 1B98                             l2361 1A38  
                           l2353 1A28                             l2345 1A0E  
                           l2337 19E2                             l2329 19B0  
                           l3137 327C                             l3129 325C  
                           l3049 366C                             l3161 36F4  
                           l3153 36AE                             l2521 2298  
                           l2513 226C                             l2505 223C  
                           l3401 16A0                             l3321 12AC  
                           l3313 1222                             l3305 11D4  
                           l3227 39FA                             l3219 3766  
                           l3243 39DE                             l3235 39CE  
                           l3067 35D6                             l3059 3564  
                           l3091 33BE                             l3083 3348  
                           l3075 32EC                             l2451 1C86  
                           l2443 1C5E                             l2427 1BBE  
                           l2435 1C14                             l2419 1B86  
                           l2371 1A4C                             l2363 1A3C  
                           l2355 1A2C                             l2347 1A1C  
                           l2339 19E4                             l3139 328C  
                           l3155 36BC                             l3147 3684  
                           l3171 299C                             l3163 2922  
                           l2603 2572                             l2611 25BA  
                           l2531 22CE                             l2523 229E  
                           l2515 227C                             l2507 224A  
                           l3411 1764                             l3403 16AC  
                           l3331 135A                             l3323 12DE  
                           l3315 123A                             l3307 11F0  
                           l3251 1000                             l3229 39F2  
                           l3245 39E0                             l3237 39D0  
                           l3069 35DC                             l3085 335A  
                           l3077 32FC                             l2453 1C8E  
                           l2445 1C68                             l2437 1C3A  
                           l2429 1BF2                             l2461 1CB2  
                           l2381 1A60                             l2373 1A50  
                           l2365 1A40                             l2357 1A30  
                           l2349 1A20                             l3157 36DA  
                           l3149 369A                             l3181 29F6  
                           l3165 2932                             l2621 262E  
                           l2613 25D4                             l2605 257E  
                           l2533 22DE                             l2525 22AC  
                           l2517 2282                             l2509 224C  
                           l2701 3508                             l3421 1816  
                           l3413 1798                             l3405 16B0  
                           l3341 1414                             l3333 138C  
                           l3317 126E                             l3309 120C  
                           l3325 12E4                             l3261 1042  
                           l3253 100C                             l3501 30E0  
                           l3239 39D2                             l3087 3368  
                           l3079 332A                             l3095 38F0  
                           l2471 1D04                             l2463 1CB6  
                           l2455 1C92                             l2447 1C76  
                           l2439 1C4A                             l2391 1AD8  
                           l2383 1A8A                             l2375 1A54  
                           l2367 1A44                             l2359 1A34  
                           l3159 36EA                             l3191 2A5A  
                           l3183 29F8                             l3175 29B0  
                           l3167 2940                             l2623 263C  
                           l2615 25E8                             l2607 258C  
                           l2551 2360                             l2543 2328  
                           l2535 22E4                             l2527 22AE  
                           l2519 2292                             l2703 350E  
                           l3431 1854                             l3423 1822  
                           l3415 17A8                             l3407 16C6  
                           l3343 141E                             l3335 13B6  
                           l3351 147E                             l3327 1302  
                           l3319 12A0                             l3263 104E  
                           l3271 10C2                             l3255 1014  
                           l3247 0FE0                             l3511 3154  
                           l3503 30E4                             l2801 2C82  
                           l3089 33B8                             l3097 3906  
                           l2481 1D6A                             l2473 1D10  
                           l2465 1CC4                             l2457 1CA2  
                           l2449 1C78                             l2393 1ADC  
                           l2385 1AA6                             l2377 1A58  
                           l2369 1A48                             l3193 2A78  
                           l3185 2A04                             l3177 29B8  
                           l3169 2986                             l2625 263E  
                           l2617 2602                             l2609 25B6  
                           l2561 23AA                             l2553 2378  
                           l2545 2334                             l2537 2304  
                           l2529 22BE                             l2721 37AC  
                           l2713 3782                             l2641 33E0  
                           l2633 33C2                             l2705 3514  
                           l3441 18BA                             l3433 186A  
                           l3425 1826                             l3417 17AC  
                           l3409 1712                             l3361 14FA  
                           l3353 14EC                             l3345 1434  
                           l3337 13D4                             l3329 133C  
                           l3281 1104                             l3273 10CA  
                           l3265 106A                             l3257 101C  
                           l3249 0FEE                             l3521 3186  
                           l3513 3158                             l3505 3108  
                           l2811 2D34                             l2803 2CD4  
                           l3099 3916                             l2491 1DB2  
                           l2483 1D7A                             l2475 1D1E  
                           l2467 1CDA                             l2459 1CA4  
                           l2395 1AEA                             l2387 1AB6  
                           l2379 1A5C                             l3195 2A7A  
                           l3187 2A40                             l3179 29C4  
                           l2619 261E                             l2627 2644  
                           l2571 2400                             l2563 23BA  
                           l2555 2384                             l2547 233E  
                           l2539 2314                             l2731 37E0  
                           l2723 37BA                             l2715 378A  
                           l2651 3414                             l2643 33EE  
                           l2635 33C6                             l2707 3524  
                           l3443 18BA                             l3435 186E  
                           l3427 182C                             l3419 17FE  
                           l3371 156C                             l3355 14F6  
                           l3339 1406                             l3291 114C  
                           l3283 1116                             l3451 190E  
                           l3275 10D0                             l3267 1098  
                           l3259 103C                             l3523 3194  
                           l3515 3166                             l3507 313C  
                           l2821 2D92                             l2813 2D38  
                           l2805 2CD8                             l2493 1DB4  
                           l2485 1D9A                             l2477 1D58  
                           l2397 1AEC                             l2389 1ACC  
                           l3197 2A7E                             l3189 2A4C  
                           l2629 2648                             l2581 24A4  
                           l2573 241C                             l2565 23C6  
                           l2557 2390                             l2549 2354  
                           l2733 37E6                             l2725 37C0  
                           l2717 379C                             l2741 3818  
                           l2901 394E                             l2661 344E  
                           l2653 341C                             l2645 33F6  
                           l2637 33D4                             l2709 352C  
                           l3445 18D8                             l3437 1892  
                           l3373 1578                             l3365 153A  
                           l3349 1468                             l3293 115A  
                           l3285 1124                             l3429 1842  
                           l3269 109C                             l3525 31A4  
                           l3517 3176                             l3509 3148  
                           l2823 2D96                             l2807 2D22  
                           l2751 2AD6                             l2831 3866  
                           l2495 1DBA                             l2487 1D9E  
                           l2479 1D5A                             l2399 1AF6  
                           l3199 2AA2                             l2591 24FA  
                           l2583 24B2                             l2575 2428  
                           l2567 23D6                             l2559 239E  
                           l2727 37D6                             l2719 37A4  
                           l2743 3826                             l2735 37F6  
                           l2903 3952                             l2671 3474  
                           l2663 3456                             l2655 3424  
                           l2647 33FA                             l2639 33DC  
                           l3439 1896                             l3391 1646  
                           l3375 1580                             l3383 161A  
                           l3367 153C                             l3295 117E  
                           l3287 112C                             l3279 10D6  
                           l3519 3182                             l2825 2DE0  
                           l2809 2D32                             l2753 2ADA  
                           l2833 386A                             l2497 1DC8  
                           l2489 1DAC                             l2921 2E56  
                           l2913 2E2C                             l2593 2508  
                           l2585 24D0                             l2577 2444  
                           l2569 23F0                             l2729 37DE  
                           l2745 383C                             l2737 3808  
                           l2841 266C                             l2673 347C  
                           l2665 3458                             l2657 3432  
                           l2649 3402                             l2681 3498  
                           l3393 1660                             l3385 1630  
                           l3377 15D2                             l3369 154E  
                           l3297 1184                             l3289 1144  
                           l3449 18E8                             l2827 2DF0  
                           l2819 2D40                             l2771 2BAC  
                           l2763 2AFC                             l2755 2AEE  
                           l2835 389C                             l2499 1DCA  
                           l2931 2E8A                             l2923 2E64  
                           l2907 2DF4                             l2595 250C  
                           l2587 24DA                             l2579 246E  
                           l2747 3844                             l2739 3810  
                           l2667 345E                             l2659 3438  
                           l2691 34CC                             l2683 34A0  
                           l3395 167C                             l3387 163C  
                           l3379 1606                             l3299 118C  
                           l3491 30B4                             l3483 3096  
                           l2781 2BBA                             l2773 2BAE  
                           l2765 2B4E                             l2757 2AF4  
                           l2829 385A                             l2941 2ECE  
                           l2933 2E98                             l2925 2E70  
                           l2909 2E18                             l2597 251A  
                           l2589 24E8                             l2749 384A  
                           l2853 28CC                             l2669 3464  
                           l2693 34D4                             l2685 34A4  
                           l2677 3486                             l2861 1E02  
                           l3397 1688                             l3389 1640  
                           l3493 30B8                             l3485 30A8  
                           l2791 2C70                             l2783 2C0C  
                           l2775 2BB2                             l2767 2B52  
                           l2951 2EFE                             l2943 2EDC  
                           l2935 2EB2                             l2927 2E80  
                           l2919 2E54                             l2599 2548  
                           l2847 27D8                             l2839 265C  
                           l2695 34DC                             l2687 34B2  
                           l2679 348A                             l3399 1690  
                           l3495 30BA                             l3487 30AA  
                           l2793 2C74                             l2785 2C10  
                           l2769 2B9C                             l2961 2F28  
                           l2953 2F08                             l2937 2EBE  
                           l2929 2E84                             l2849 27E8  
                           l2697 34EA                             l2689 34BA  
                           l2873 1FDE                             l2857 1DDE  
                           l3497 30D0                             l3489 30AC  
                           l2795 2C7A                             l2787 2C5A  
                           l2963 2F4A                             l2939 2EC8  
                           l2699 3500                             l2891 2200  
                           l2867 1F26                             l2859 1DEC  
                           l3499 30D4                             l2789 2C6A  
                           l2981 2FB2                             l2965 2F60  
                           l2949 2EF4                             l2885 2148  
                           l2869 1F3A                             l2877 2010  
                           l2991 2FDA                             l2983 2FC2  
                           l2975 2F8E                             l2959 2F1C  
                           l2895 392A                             l2887 215C  
                           l2879 2024                             l2993 2FF8  
                           l2985 2FC6                             l2977 2F90  
                           l2969 2F74                             l2897 392E  
                           l2995 3008                             l2987 2FCC  
                           l2979 2FA0                             l2899 393E  
                           l2997 300A                             l2989 2FD0  
                           l2999 3014                             STR_1 0F91  
                           STR_2 0FD6                             STR_3 0FAA  
                           STR_4 0FB5                             STR_5 0F9E  
                           STR_6 0FC0                             STR_7 0FCB  
                           u2100 19D2                             u2101 19CE  
                           u2110 1A0E                             u2111 1A0A  
                           u2200 1B28                             u2120 1A1C  
                           u2040 1936                             u2201 1B24  
                           u2121 1A18                             u2041 1932  
                           u2210 1B5A                             u2130 1A8A  
                           u2050 1948                             u2211 1B56  
                           u2131 1A86                             u2051 1944  
                           u3100 389C                             u2300 1CA2  
                           u2220 1B68                             u2140 1AA2  
                           u2060 1958                             u3005 2D10  
                           u3101 3898                             u2301 1C9E  
                           u2221 1B64                             u2141 1A9C  
                           u2061 1954                             u3006 2D12  
                           u2310 1CB2                             u2230 1B86  
                           u2150 1AA4                             u2070 199A  
                           u3110 266C                             u3015 2D1A  
                           u2311 1CAE                             u2231 1B82  
                           u2071 1996                             u3111 2668  
                           u3040 2DB2                             u3024 2D56  
                           u3016 2D1C                             u2400 1D9A  
                           u2320 1CC4                             u2240 1BBE  
                           u2160 1ACC                             u2080 19B0  
                           u3120 27E8                             u4000 190E  
                           u3041 2DAE                             u3025 2D52  
                           u2401 1D96                             u2321 1CC0  
                           u2241 1BBA                             u2161 1AC8  
                           u2081 19AC                             u3201 2E04  
                           u3121 27E4                             u4001 190A  
                           u3034 2D6C                             u2410 1DAC  
                           u2330 1CDA                             u2250 1C04  
                           u2170 1AEA                             u2090 19C2  
                           u3210 2E18                             u3130 1DEC  
                           u3035 2D68                             u2411 1DA8  
                           u2331 1CD6                             u2251 1C00  
                           u2171 1AE6                             u2091 19BE  
                           u3211 2E14                             u3131 1DE8  
                           u2420 1DC8                             u2340 1CF0  
                           u2260 1C3A                             u2180 1B0A  
                           u3300 2F8A                             u2500 2314  
                           u3140 1E02                             u2421 1DC4  
                           u2341 1CEC                             u2261 1C36  
                           u2181 1B06                             u3301 2F86  
                           u3221 2E3C                             u2501 2310  
                           u3141 1DFE                             u2350 1D04  
                           u2270 1C4A                             u2190 1B18  
                           u3310 2FF8                             u3230 2E50  
                           u2510 248E                             u2430 224A  
                           u3150 1F3A                             u4030 3166  
                           u3055 2DBA                             u2351 1D00  
                           u2271 1C46                             u2191 1B14  
                           u3311 2FF4                             u3231 2E4C  
                           u2431 2246                             u3151 1F36  
                           u4031 3162                             u3056 2DBC  
                           u3400 35A2                             u2360 1D1E  
                           u2280 1C76                             u3320 3028  
                           u3240 2EB2                             u2600 2602  
                           u2520 24E8                             u2440 225C  
                           u3160 2024                             u4040 3194  
                           u3065 2DC4                             u3401 359E  
                           u2361 1D1A                             u2281 1C72  
                           u3321 3024                             u3241 2EAE  
                           u2601 25FE                             u2521 24E4  
                           u2441 2258                             u3161 2020  
                           u4041 3190                             u3066 2DC6  
                           u3090 388C                             u3410 35D6  
                           u2370 1D58                             u2290 1C86  
                           u3330 303C                             u3250 2EDC  
                           u2610 263C                             u2530 2508  
                           u2450 226C                             u3170 215C  
                           u3075 2DCE                             u3411 35D2  
                           u2371 1D54                             u2291 1C82  
                           u3331 3038                             u3251 2ED8  
                           u2611 2638                             u2531 2504  
                           u2515 2484                             u2451 2268  
                           u3171 2158                             u3076 2DD0  
                           u3420 32EC                             u2380 1D6A  
                           u3500 3230                             u3340 3064  
                           u3260 2EF0                             u2540 251A  
                           u2460 22AC                             u3180 393E  
                           u2620 33D4                             u2700 34CC  
                           u3085 2DD8                             u3421 32E8  
                           u2381 1D66                             u3501 322C  
                           u3341 3060                             u3261 2EEC  
                           u2541 2516                             u2461 22A8  
                           u3181 393A                             u2621 33D0  
                           u2701 34C8                             u3086 2DDA  
                           u3430 332A                             u2390 1D7A  
                           u3510 3244                             u3350 3084  
                           u3270 2F18                             u2550 2548  
                           u2470 22BE                             u3190 394E  
                           u2630 33EE                             u2710 34EA  
                           u3431 3326                             u2391 1D76  
                           u3511 3240                             u3351 3080  
                           u3271 2F14                             u2551 2544  
                           u2471 22BA                             u3191 394A  
                           u2631 33EA                             u2711 34E6  
                           u2800 2AEE                             u3440 3348  
                           u3520 326C                             u3360 3606  
                           u3600 299C                             u3280 2F38  
                           u2560 255E                             u2480 22CE  
                           u2640 3414                             u2720 3500  
                           u2801 2AEA                             u3097 3882  
                           u3441 3344                             u3521 3268  
                           u3361 3602                             u3601 2998  
                           u3281 2F34                             u2561 255A  
                           u2481 22CA                             u2641 3410  
                           u2721 34FC                             u4057 30C4  
                    main@counter 008D                             u3450 3368  
                           u3530 328C                             u3370 3628  
                           u3610 29F2                             u3290 2F60  
                           u2570 2572                             u2490 2304  
                           u2650 3432                             u2730 3524  
                           u4067 2BA2                             u3451 3364  
                           u3531 3288                             u3371 3624  
                           u3611 29EE                             u3291 2F5C  
                           u2571 256E                             u2491 2300  
                           u2651 342E                             u2731 3520  
                           u2900 2C2C                             u3460 33B8  
                           u3540 329C                             u3380 3650  
                           u3620 2A3C                             u2580 258C  
                           u2740 379C                             u2660 344E  
                           u3700 1000                             u4077 2C60  
                           u2901 2C28                             u3461 33B4  
                           u3541 3298                             u3381 364C  
                           u3621 2A38                             u2581 2588  
                           u2741 3798                             u2661 344A  
                           u3701 0FFC                             u2830 2B6E  
                           u2814 2B12                             u3390 3564  
                           u3470 3906                             u3550 369A  
                           u3630 2A5A                             u2590 25D4  
                           u2750 37BA                             u2670 3474  
                           u3710 103C                             u4087 2D28  
                           u2831 2B6A                             u2815 2B0E  
                           u3391 3560                             u3471 3902  
                           u3551 3696                             u3631 2A56  
                           u2591 25D0                             u2751 37B6  
                           u2671 3470                             u3711 1038  
                           u2824 2B28                             u3480 31CE  
                           u3560 36BC                             u3640 2A6A  
                           u2760 37D6                             u2680 3498  
                           u3800 1302                             u3720 10BE  
                           u4097 2DE6                             u2825 2B24  
                           u3481 31CA                             u3561 36B8  
                           u3641 2A66                             u2761 37D2  
                           u2681 3494                             u3801 12FE  
                           u3721 10BA                             u3490 3202  
                           u3570 36DA                             u3650 2A78  
                           u2770 3808                             u2690 34B2  
                           u3810 135A                             u3730 1116  
                           u2915 2C34                             u3571 36D6  
                           u3651 2A74                             u2771 3804  
                           u2691 34AE                             u3811 1356  
                           u3731 1112                             u2916 2C36  
                           u3660 2AB2                             u3580 2932  
                           u2780 3826                             u3900 1660  
                           u3820 138C                             u3740 1124  
                           u2925 2C3E                             u2845 2B76  
                           u3661 2AAE                             u3581 292E  
                           u2781 3822                             u3901 165C  
                           u3821 1388                             u3741 1120  
                           u2926 2C40                             u2846 2B78  
                           u3670 2AC0                             u3590 2940  
                           u2790 383C                             u3910 167C  
                           u3830 13B6                             u3750 115A  
                           u2935 2C48                             u2855 2B80  
                           u3495 31F8                             u3671 2ABC  
                           u3591 293C                             u2791 3838  
                           u3911 1678                             u3831 13B2  
                           u3751 1156                             u2936 2C4A  
                           u2856 2B82                             u3680 3762  
                           u3920 16A0                             u3840 13D4  
                           u3760 11BE                             u2945 2C52  
                           u2865 2B8A                             u3921 169C  
                           u3841 13D0                             u3761 11BA  
                           u2970 2CF4                             u2954 2C98  
                           u2946 2C54                             u2866 2B8C  
                           u3690 3780                             u3930 1812  
                           u3850 1406                             u3770 121C  
                           u2971 2CF0                             u2955 2C94  
                           u2875 2B94                             u3691 377C  
                           u3931 180E                             u3851 1402  
                           u3771 1218                             u2964 2CAE  
                           u2884 2BD0                             u2876 2B96  
                           u3940 183E                             u3860 1536  
                           u3780 12A0                             u2965 2CAA  
                           u2885 2BCC                             u3941 183A  
                           u3861 1532                             u3781 129C  
                           u2894 2BE6                             u3950 1854  
                           u3870 154E                             u3790 12DE  
                           u2895 2BE2                             u3687 3758  
                           u3951 1850                             u3871 154A  
                           u3791 12DA                             u3960 186A  
                           u3880 156C                             u2985 2CFC  
                           u3961 1866                             u3881 1568  
                           u2986 2CFE                             u3970 1892  
                           u3890 162C                             u2995 2D06  
                           u3971 188E                             u3891 1628  
                           u2996 2D08                             u3980 18BA  
                           u3981 18B6                             u3990 18D8  
                           u3991 18D4                             _TMR0 000FD6  
                           _main 3096             _LCD_INSTRUCTION_4BIT 2C6E  
                           fsr2h 000FDA                             indf2 000FDF  
                           fsr2l 000FD9                             btemp 005D  
                           prodh 000FF4                             prodl 000FF3  
                           start 0048                     _sprintf$1687 0060  
                   ___param_bank 000000                            ??_ISR 0001  
               __end_of_LCD_DATA 2C6E                    ___fltol@sign1 0039  
                __end_of___fladd 1DDC                            ?_main 0001  
                __end_of___awdiv 3486                  __end_of___flneg 3928  
                __end_of___awmod 3536                  __end_of___flmul 265A  
                __end_of___flsub 38F0                  __end_of___fltol 32BE  
                __end_of___lldiv 3684                  ___awdiv@divisor 0009  
                __end_of___llmod 370C                  __end_of___lwdiv 37F6  
                __end_of___lwmod 385A                            i2l139 0044  
                ___awdiv@counter 000B                  __end_of_dpowers 0F91  
                          _count 005B                            _scale 1DDC  
                __end_of_isdigit 395A                            main@s 0079  
                          tablat 000FF5            ?_LCD_INSTRUCTION_4BIT 0001  
                          ttemp5 005E                            ttemp6 0061  
                          ttemp7 0065                            status 000FD8  
                          wtemp8 005E                  __end_of_sprintf 191C  
           __end_of_LCD_20_LINE1 3A12             __end_of_LCD_20_LINE2 3A0A  
           __end_of_LCD_20_LINE3 3A02             __end_of_LCD_20_LINE4 39FA  
                __initialization 39E4                     __end_of_main 31B8  
                         ??_main 0059                     ?_TIMER0_Init 0001  
                  __activetblptr 000003                 ___llmod@dividend 0001  
                         ?_scale 0028                 ___awdiv@dividend 0007  
                         i2l2281 0018                           i2l2291 003C  
                         i2l2283 0020                           i2l2285 0022  
                         i2l2287 0026                           i2l2279 000A  
                         i2l2289 003A                           _TRISC0 007CA0  
                         _TRISB3 007C9B                           _TRISC1 007CA1  
                         _TRISC2 007CA2                           _TRISC3 007CA3  
                         _TRISJ0 007CD0                           _TRISJ1 007CD1  
               __end_of___xxtofl 2AD4                 ??_LCD_SETUP_4BIT 0001  
               __end_of__powers_ 0F35                           ___flge 32BE  
                         ___fleq 3536                        ??___fladd 003D  
                         ___wmul 3982                        ??___awdiv 000B  
                      ??___flneg 0005                        ??___awmod 0005  
                      ??___flmul 0017                        ??___flsub 004D  
                      ??___fltol 0035                        ??___lldiv 0009  
                      ??___llmod 0009                        ??___lwdiv 000A  
                      ??___lwmod 0005                           _fround 265A  
               ___awdiv@quotient 000D                  ___awmod@divisor 0003  
                         isa$std 000001                  ___awmod@counter 0005  
                         _strlen 385A                        ??_isdigit 0001  
                   __mediumconst 0000                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
                      ??_sprintf 0055                        LCD_DATA@x 0013  
         ??_LCD_INSTRUCTION_4BIT 0001                       ___flge@ff1 0001  
                     ___flge@ff2 0005                        ?_LCD_DATA 0001  
                   ___xxtofl@arg 000B                     ___xxtofl@exp 000A  
                   ___xxtofl@val 0001                       ___fleq@ff1 0001  
                     ___fleq@ff2 0005                       __accesstop 0060  
        __end_of__initialization 39E8                       ___flneg@f1 0001  
                  ___rparam_used 000001                       ___fltol@f1 0031  
                 __pcstackCOMRAM 0001                    __end_of_scale 2230  
                     __div_to_l_ 2F4A                  __div_to_l_@exp1 000E  
                __div_to_l_@cntr 000D                          ??_scale 002C  
                __div_to_l_@quot 0009                       ??_LCD_DATA 0003  
      LCD_INSTRUCTION_4BIT@x_857 0013                    __div_to_l_@f1 0001  
                  __div_to_l_@f2 0005                          ?___flge 0001  
                        ?___fleq 0001                          ?___wmul 0001  
                        ?_fround 0028                          ?_strlen 0001  
          LCD_INSTRUCTION_4BIT@x 0011                        ?___xxtofl 0001  
                   _LCD_20_LINE1 3A0A                     _LCD_20_LINE2 3A02  
                   _LCD_20_LINE3 39FA                     _LCD_20_LINE4 39F2  
              __end_of__npowers_ 0F69                          __Hparam 0000  
                     _scale$1686 002C                          __Lparam 0000  
                        ___fladd 191C                          ___awdiv 33C2  
                        ___flneg 38F0                          ___awmod 3486  
                        ___flmul 2230                          ___flsub 38AA  
                        ___fltol 31B8                          ___lldiv 35E0  
                        ___llmod 3684                          ___lwdiv 3782  
                        ___lwmod 37F6                     __psmallconst 0F00  
                        __pcinit 39E4                          __ramtop 0F00  
                        __ptext0 3096                          __ptext1 0FE0  
                        __ptext2 1DDC                          __ptext3 3486  
                        __ptext4 33C2                          __ptext5 3928  
                        __ptext6 265A                          __ptext7 37F6  
                        __ptext8 3782                          __ptext9 2230  
                      _T0CONbits 000FD5                LCD_DISPLAY@length 001B  
                      _T1CONbits 000FCD                      ?__div_to_l_ 0001  
                        _dpowers 0F69                          _isdigit 3928  
                     ??___xxtofl 0005                 ___awmod@dividend 0001  
              LCD_DISPLAY@string 0017                          _sprintf 0FE0  
           end_of_initialization 39E8                  ___lldiv@divisor 0005  
                ___lldiv@counter 000D                          postdec2 000FDD  
                        postinc2 000FDE                   __tdiv_to_l_@f1 0001  
                 __tdiv_to_l_@f2 0005                          strlen@s 0001  
                  ??__tdiv_to_l_ 0009                        _PORTBbits 000F81  
                      _PORTDbits 000F83                        _PORTJbits 000F88  
                    ___fladd@grs 0044                    ___xxtofl@sign 0009  
                      _TRISCbits 000F94                        _TRISDbits 000F95  
                  ??_LCD_DISPLAY 0019                      ___flmul@grs 001C  
                    _CCP1CONbits 000FBD                      _CCP2CONbits 000FBA  
                 __end_of___flge 33C2                   __end_of___fleq 35E0  
                 __end_of___wmul 39A8                   __end_of_fround 2920  
            _LCD_INITIALIZE_4BIT 39A8                   __end_of_strlen 38AA  
            start_initialization 39E4                      __end_of_ISR 0048  
            __end_of__tdiv_to_l_ 2F4A                  ___llmod@divisor 0005  
           ?_LCD_INITIALIZE_4BIT 0001                  ___llmod@counter 0009  
            __end_of_LCD_DISPLAY 3782                         ??___flge 0009  
                       ??___fleq 0009                         ??___wmul 0005  
                       ??_fround 002C       LCD_INSTRUCTION_4BIT@_4bit_ 0008  
                  sprintf@tmpval 006E                         ??_strlen 0003  
                      ___fladd@a 0039                        ___fladd@b 0035  
                     fround@prec 0034                        ___flmul@a 0013  
                      ___flmul@b 000F                      __pbssCOMRAM 005B  
                      ___flsub@a 0049                        ___flsub@b 0045  
                  __pcstackBANK0 0060                     _isdigit$1463 0002  
                    sprintf@flag 0066            ??_LCD_INITIALIZE_4BIT 0015  
                    sprintf@eexp 006C                      sprintf@fval 0074  
                    sprintf@prec 0072                 ___lwdiv@dividend 0006  
                      __pintcode 0008                         ?___fladd 0035  
                       ?___awdiv 0007                         ?___flneg 0001  
                       ?___awmod 0001                         ?___flmul 000F  
                       ?___flsub 0045                         ?___fltol 0031  
                       ?___lldiv 0001                         ?___llmod 0001  
                      __npowers_ 0F35                         ?___lwdiv 0006  
                       ?___lwmod 0001                      __tdiv_to_l_ 2DF4  
                  ??_TIMER0_Init 0001                     ??__div_to_l_ 0009  
                    __smallconst 0F00                         ?_isdigit 0001  
               ___lwdiv@quotient 000A                         ?_sprintf 004D  
                    _LCD_DISPLAY 370C                         _LCD_DATA 2AD4  
                 ___wmul@product 0005                         _LATDbits 000F8C  
                       i2u202_40 0018                         i2u202_41 0014  
                       i2u203_40 003A                         i2u203_41 0036  
             __end_of__div_to_l_ 3096  LCD_INSTRUCTION_4BIT@instruction 0007  
              ___wmul@multiplier 0001              __end_of_TIMER0_Init 39E4  
                       __Hrparam 0000                         __Lrparam 0000  
                 _LCD_SETUP_4BIT 395A                      _fround$1684 0030  
                    _fround$1685 002C                       sprintf@val 0068  
                       ___xxtofl 2920                   LCD_DATA@_4bit_ 000A  
                ___lwdiv@divisor 0008                  ___lwdiv@counter 000C  
                       __ptext10 2DF4                         __ptext11 2F4A  
                       __ptext20 32BE                         __ptext12 2920  
                       __ptext21 3536                         __ptext13 3982  
                       __ptext30 3A02                         __ptext22 39C8  
                       __ptext14 3684                         __ptext31 3A0A  
                       __ptext23 395A                         __ptext15 35E0  
                       __ptext32 2C6E                         __ptext24 39A8  
                       __ptext16 31B8                         __ptext25 370C  
                       __ptext17 38AA                         __ptext26 385A  
                       __ptext18 191C                         __ptext27 2AD4  
                       __ptext19 38F0                         __ptext28 39F2  
                       __ptext29 39FA                         __powers_ 0F01  
       LCD_INSTRUCTION_4BIT@data 0010                         isa$xinst 000000  
                       int$flags 005D           __end_of_LCD_SETUP_4BIT 3982  
   __end_of_LCD_INSTRUCTION_4BIT 2DF4                      _TIMER0_Init 39C8  
                     _INTCONbits 000FF2                    ?_LCD_20_LINE1 0001  
                  ?_LCD_20_LINE2 0001                    ?_LCD_20_LINE3 0001  
                  ?_LCD_20_LINE4 0001                         isdigit@c 0003  
                       scale@scl 0030                         intlevel2 0000  
                      sprintf@ap 0064                 __tdiv_to_l_@exp1 0011  
                      sprintf@sp 004D                 __tdiv_to_l_@cntr 0010  
               __tdiv_to_l_@quot 000C                 ___lwmod@dividend 0001  
               ___lldiv@dividend 0001                    LCD_DATA@_data 0012  
                  LCD_DATA@x_851 0015                       _RCSTA1bits 000FAB  
                     _RCSTA2bits 000F6B                  ?_LCD_SETUP_4BIT 0001  
                   ?__tdiv_to_l_ 0001                         sprintf@c 0078  
                       sprintf@f 004F                   ??_LCD_20_LINE1 0015  
                 ??_LCD_20_LINE2 0015                   ??_LCD_20_LINE3 0015  
                 ??_LCD_20_LINE4 0015                 ___lldiv@quotient 0009  
                ___lwmod@divisor 0003                     LCD_DATA@data 0009  
                       strlen@cp 0003                  ___lwmod@counter 0005  
                   LCD_DATA@mode 0001                      _SSPCON1bits 000FC6  
    __end_of_LCD_INITIALIZE_4BIT 39C8                    ___fladd@signs 0041  
                   ?_LCD_DISPLAY 0017                     LCD_DISPLAY@x 001D  
                   ___fladd@aexp 0042                     ___fladd@bexp 0043  
